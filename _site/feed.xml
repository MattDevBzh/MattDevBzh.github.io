<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="http://0.0.0.0:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://0.0.0.0:4000/" rel="alternate" type="text/html" /><updated>2025-07-18T22:39:59+00:00</updated><id>http://0.0.0.0:4000/feed.xml</id><title type="html">Le dev, c‚Äôest di√®se</title><subtitle>Veille, tutoriels .NET, Azure et plus</subtitle><author><name>MattDevBzh</name></author><entry><title type="html">Poo</title><link href="http://0.0.0.0:4000/2025/07/09/poo.html" rel="alternate" type="text/html" title="Poo" /><published>2025-07-09T00:00:00+00:00</published><updated>2025-07-09T00:00:00+00:00</updated><id>http://0.0.0.0:4000/2025/07/09/poo</id><content type="html" xml:base="http://0.0.0.0:4000/2025/07/09/poo.html"><![CDATA[<h1 id="apprendre-la-poo-en-net">Apprendre la POO en .NET</h1>

<p>Vous buvez du caf√© tous les jours ? Parfait ! Nous allons apprendre la Programmation Orient√©e Objet (POO) en .NET en cr√©ant notre propre caf√© virtuel. Pas de panique, nous commen√ßons par les bases !</p>

<hr />

<h2 id="1-une-classe--une-recette">1. Une Classe = Une Recette</h2>

<p>Une <strong>classe</strong> en programmation, c‚Äôest comme une recette de cuisine. Elle d√©crit comment cr√©er quelque chose.</p>

<h3 id="notre-premi√®re-classe--un-grain-de-caf√©">Notre premi√®re classe : Un grain de caf√©</h3>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">public</span> <span class="k">class</span> <span class="nc">GrainCafe</span>
<span class="p">{</span>
    <span class="c1">// Les propri√©t√©s = les ingr√©dients de notre recette</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">Origine</span><span class="p">;</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">Variete</span><span class="p">;</span>
    <span class="k">public</span> <span class="kt">bool</span> <span class="n">EstMoulu</span><span class="p">;</span>
    
    <span class="c1">// Le constructeur = comment pr√©parer notre grain</span>
    <span class="k">public</span> <span class="nf">GrainCafe</span><span class="p">(</span><span class="kt">string</span> <span class="n">origine</span><span class="p">,</span> <span class="kt">string</span> <span class="n">variete</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Origine</span> <span class="p">=</span> <span class="n">origine</span><span class="p">;</span>
        <span class="n">Variete</span> <span class="p">=</span> <span class="n">variete</span><span class="p">;</span>
        <span class="n">EstMoulu</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span> <span class="c1">// Au d√©but, le grain n'est pas moulu</span>
    <span class="p">}</span>
    
    <span class="c1">// Une m√©thode = une action que peut faire √† partir de notre grain</span>
    <span class="k">public</span> <span class="k">void</span> <span class="nf">Moudre</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="n">EstMoulu</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"Le grain </span><span class="p">{</span><span class="n">Variete</span><span class="p">}</span><span class="s"> de </span><span class="p">{</span><span class="n">Origine</span><span class="p">}</span><span class="s"> est maintenant moulu !"</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="utiliser-notre-classe">Utiliser notre classe</h3>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Cr√©er un grain de caf√© (on cr√©e un "objet")</span>
<span class="n">GrainCafe</span> <span class="n">monGrain</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">GrainCafe</span><span class="p">(</span><span class="s">"Colombie"</span><span class="p">,</span> <span class="s">"Arabica"</span><span class="p">);</span>

<span class="c1">// Utiliser notre grain</span>
<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"J'ai un grain </span><span class="p">{</span><span class="n">monGrain</span><span class="p">.</span><span class="n">Variete</span><span class="p">}</span><span class="s"> de </span><span class="p">{</span><span class="n">monGrain</span><span class="p">.</span><span class="n">Origine</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
<span class="n">monGrain</span><span class="p">.</span><span class="nf">Moudre</span><span class="p">();</span>
</code></pre></div></div>

<hr />

<h2 id="2-lencapsulation--prot√©ger-et-contr√¥ler-lacc√®s">2. L‚ÄôEncapsulation = Prot√©ger et Contr√¥ler l‚ÄôAcc√®s</h2>

<p><strong>L‚Äôencapsulation, c‚Äôest quoi ?</strong><br />
C‚Äôest le fait de d√©cider qui peut voir et modifier les donn√©es de notre classe. Comme dans un caf√© : certaines informations sont publiques (le menu), d‚Äôautres priv√©es (la recette secr√®te).</p>

<p><strong>Pourquoi c‚Äôest important ?</strong></p>
<ul>
  <li>Prot√©ger les donn√©es importantes</li>
  <li>√âviter qu‚Äôon casse notre objet par accident</li>
  <li>Contr√¥ler comment on utilise notre classe</li>
</ul>

<p><strong>En pratique :</strong></p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">public</code> = tout le monde peut voir et modifier</li>
  <li><code class="language-plaintext highlighter-rouge">private</code> = seulement la classe elle-m√™me peut voir et modifier</li>
</ul>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">public</span> <span class="k">class</span> <span class="nc">Cafe</span>
<span class="p">{</span>
    <span class="c1">// PUBLIC = visible par tous</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">Nom</span><span class="p">;</span>        <span class="c1">// ‚Üê Le client peut voir le nom</span>
    <span class="k">public</span> <span class="kt">double</span> <span class="n">Prix</span><span class="p">;</span>       <span class="c1">// ‚Üê Le client peut voir le prix</span>
    
    <span class="c1">// PRIVATE = secret de la classe</span>
    <span class="k">private</span> <span class="kt">string</span> <span class="n">recetteSecrete</span><span class="p">;</span>  <span class="c1">// ‚Üê Personne d'autre ne peut voir √ßa</span>
    
    <span class="k">public</span> <span class="nf">Cafe</span><span class="p">(</span><span class="kt">string</span> <span class="n">nom</span><span class="p">,</span> <span class="kt">double</span> <span class="n">prix</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Nom</span> <span class="p">=</span> <span class="n">nom</span><span class="p">;</span>
        <span class="n">Prix</span> <span class="p">=</span> <span class="n">prix</span><span class="p">;</span>
        <span class="n">recetteSecrete</span> <span class="p">=</span> <span class="s">"Ingr√©dient secret : amour et passion"</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="c1">// M√©thode publique qui utilise la donn√©e priv√©e</span>
    <span class="k">public</span> <span class="k">void</span> <span class="nf">RevelertUnPeuLaRecette</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="c1">// La classe peut utiliser ses propres donn√©es priv√©es</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"La recette contient... quelque chose de sp√©cial üòâ"</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p><strong>Test rapide :</strong></p>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Cafe</span> <span class="n">monCafe</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Cafe</span><span class="p">(</span><span class="s">"Espresso"</span><span class="p">,</span> <span class="m">2.50</span><span class="p">);</span>

<span class="c1">// ‚úÖ √áa marche - c'est public</span>
<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="n">monCafe</span><span class="p">.</span><span class="n">Nom</span><span class="p">);</span>
<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="n">monCafe</span><span class="p">.</span><span class="n">Prix</span><span class="p">);</span>

<span class="c1">// ‚ùå √áa ne compile pas - c'est priv√© !</span>
<span class="c1">// Console.WriteLine(monCafe.recetteSecrete);  // ERREUR !</span>

<span class="c1">// ‚úÖ Mais on peut utiliser la m√©thode publique</span>
<span class="n">monCafe</span><span class="p">.</span><span class="nf">RevelertUnPeuLaRecette</span><span class="p">();</span>
</code></pre></div></div>

<hr />

<h2 id="3-lh√©ritage--partir-dune-base">3. L‚ÄôH√©ritage = Partir d‚Äôune Base</h2>

<p>Imaginons que nous avons diff√©rents types de boissons dans notre caf√©. Elles ont des points communs !</p>

<h3 id="notre-classe-de-base">Notre classe de base</h3>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">public</span> <span class="k">class</span> <span class="nc">Boisson</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">Nom</span><span class="p">;</span>
    <span class="k">public</span> <span class="kt">double</span> <span class="n">Prix</span><span class="p">;</span>
    <span class="k">public</span> <span class="kt">bool</span> <span class="n">EstChaude</span><span class="p">;</span>
    
    <span class="k">public</span> <span class="nf">Boisson</span><span class="p">(</span><span class="kt">string</span> <span class="n">nom</span><span class="p">,</span> <span class="kt">double</span> <span class="n">prix</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">estChaude</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Nom</span> <span class="p">=</span> <span class="n">nom</span><span class="p">;</span>
        <span class="n">Prix</span> <span class="p">=</span> <span class="n">prix</span><span class="p">;</span>
        <span class="n">EstChaude</span> <span class="p">=</span> <span class="n">estChaude</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="k">public</span> <span class="k">void</span> <span class="nf">Servir</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"Voici votre </span><span class="p">{</span><span class="n">Nom</span><span class="p">}</span><span class="s"> !"</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="des-classes-qui-h√©ritent-de-boisson">Des classes qui h√©ritent de Boisson</h3>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Cafe h√©rite de Boisson (Cafe "est une" Boisson)</span>
<span class="k">public</span> <span class="k">class</span> <span class="nc">Cafe</span> <span class="p">:</span> <span class="n">Boisson</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="kt">bool</span> <span class="n">AvecSucre</span><span class="p">;</span>
    
    <span class="c1">// On utilise le constructeur de la classe parent avec "base"</span>
    <span class="k">public</span> <span class="nf">Cafe</span><span class="p">(</span><span class="kt">string</span> <span class="n">nom</span><span class="p">,</span> <span class="kt">double</span> <span class="n">prix</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">avecSucre</span><span class="p">)</span> <span class="p">:</span> <span class="k">base</span><span class="p">(</span><span class="n">nom</span><span class="p">,</span> <span class="n">prix</span><span class="p">,</span> <span class="k">true</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">AvecSucre</span> <span class="p">=</span> <span class="n">avecSucre</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="c1">// Nouvelle m√©thode sp√©cifique au caf√©</span>
    <span class="k">public</span> <span class="k">void</span> <span class="nf">AjouterSucre</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="n">AvecSucre</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"Sucre ajout√© au caf√© !"</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">The</span> <span class="p">:</span> <span class="n">Boisson</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="kt">int</span> <span class="n">MinutesInfusion</span><span class="p">;</span>
    
    <span class="k">public</span> <span class="nf">The</span><span class="p">(</span><span class="kt">string</span> <span class="n">nom</span><span class="p">,</span> <span class="kt">double</span> <span class="n">prix</span><span class="p">,</span> <span class="kt">int</span> <span class="n">minutes</span><span class="p">)</span> <span class="p">:</span> <span class="k">base</span><span class="p">(</span><span class="n">nom</span><span class="p">,</span> <span class="n">prix</span><span class="p">,</span> <span class="k">true</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">MinutesInfusion</span> <span class="p">=</span> <span class="n">minutes</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="k">public</span> <span class="k">void</span> <span class="nf">Infuser</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"Le th√© infuse pendant </span><span class="p">{</span><span class="n">MinutesInfusion</span><span class="p">}</span><span class="s"> minutes..."</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="utilisation">Utilisation</h3>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Cr√©er diff√©rentes boissons</span>
<span class="n">Cafe</span> <span class="n">espresso</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Cafe</span><span class="p">(</span><span class="s">"Espresso"</span><span class="p">,</span> <span class="m">2.50</span><span class="p">,</span> <span class="k">false</span><span class="p">);</span>
<span class="n">The</span> <span class="n">theVert</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">The</span><span class="p">(</span><span class="s">"Th√© vert"</span><span class="p">,</span> <span class="m">3.00</span><span class="p">,</span> <span class="m">3</span><span class="p">);</span>

<span class="c1">// Toutes peuvent √™tre servies (m√©thode h√©rit√©e)</span>
<span class="n">espresso</span><span class="p">.</span><span class="nf">Servir</span><span class="p">();</span>
<span class="n">theVert</span><span class="p">.</span><span class="nf">Servir</span><span class="p">();</span>

<span class="c1">// Chacune a ses sp√©cificit√©s</span>
<span class="n">espresso</span><span class="p">.</span><span class="nf">AjouterSucre</span><span class="p">();</span>
<span class="n">theVert</span><span class="p">.</span><span class="nf">Infuser</span><span class="p">();</span>
</code></pre></div></div>

<hr />

<h2 id="4-le-polymorphisme--m√™me-action-r√©sultats-diff√©rents">4. Le Polymorphisme = M√™me Action, R√©sultats Diff√©rents</h2>

<p>Le polymorphisme, c‚Äôest quand on fait la m√™me chose avec des objets diff√©rents, mais chacun r√©agit √† sa fa√ßon.</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Am√©liorons notre classe Boisson</span>
<span class="k">public</span> <span class="k">class</span> <span class="nc">Boisson</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">Nom</span><span class="p">;</span>
    <span class="k">public</span> <span class="kt">double</span> <span class="n">Prix</span><span class="p">;</span>
    
    <span class="k">public</span> <span class="nf">Boisson</span><span class="p">(</span><span class="kt">string</span> <span class="n">nom</span><span class="p">,</span> <span class="kt">double</span> <span class="n">prix</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Nom</span> <span class="p">=</span> <span class="n">nom</span><span class="p">;</span>
        <span class="n">Prix</span> <span class="p">=</span> <span class="n">prix</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="c1">// "virtual" signifie que les classes enfants peuvent changer cette m√©thode</span>
    <span class="k">public</span> <span class="k">virtual</span> <span class="k">void</span> <span class="nf">Preparer</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"Pr√©paration de </span><span class="p">{</span><span class="n">Nom</span><span class="p">}</span><span class="s">..."</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">Cafe</span> <span class="p">:</span> <span class="n">Boisson</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="nf">Cafe</span><span class="p">(</span><span class="kt">string</span> <span class="n">nom</span><span class="p">,</span> <span class="kt">double</span> <span class="n">prix</span><span class="p">)</span> <span class="p">:</span> <span class="k">base</span><span class="p">(</span><span class="n">nom</span><span class="p">,</span> <span class="n">prix</span><span class="p">)</span> <span class="p">{</span> <span class="p">}</span>
    
    <span class="c1">// "override" signifie qu'on change la m√©thode du parent</span>
    <span class="k">public</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">Preparer</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚òï Moudre les grains..."</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚òï Chauffer l'eau..."</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚òï </span><span class="p">{</span><span class="n">Nom</span><span class="p">}</span><span class="s"> pr√™t !"</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">The</span> <span class="p">:</span> <span class="n">Boisson</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="nf">The</span><span class="p">(</span><span class="kt">string</span> <span class="n">nom</span><span class="p">,</span> <span class="kt">double</span> <span class="n">prix</span><span class="p">)</span> <span class="p">:</span> <span class="k">base</span><span class="p">(</span><span class="n">nom</span><span class="p">,</span> <span class="n">prix</span><span class="p">)</span> <span class="p">{</span> <span class="p">}</span>
    
    <span class="k">public</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">Preparer</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"ü´ñ Chauffer l'eau..."</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"ü´ñ Ajouter les feuilles..."</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"ü´ñ </span><span class="p">{</span><span class="n">Nom</span><span class="p">}</span><span class="s"> pr√™t !"</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="la-magie-du-polymorphisme">La magie du polymorphisme</h3>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// On peut mettre diff√©rents types de boissons dans une m√™me liste !</span>
<span class="n">List</span><span class="p">&lt;</span><span class="n">Boisson</span><span class="p">&gt;</span> <span class="n">commande</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">Boisson</span><span class="p">&gt;</span>
<span class="p">{</span>
    <span class="k">new</span> <span class="nf">Cafe</span><span class="p">(</span><span class="s">"Cappuccino"</span><span class="p">,</span> <span class="m">4.00</span><span class="p">),</span>
    <span class="k">new</span> <span class="nf">The</span><span class="p">(</span><span class="s">"Earl Grey"</span><span class="p">,</span> <span class="m">3.50</span><span class="p">),</span>
    <span class="k">new</span> <span class="nf">Cafe</span><span class="p">(</span><span class="s">"Americano"</span><span class="p">,</span> <span class="m">3.00</span><span class="p">)</span>
<span class="p">};</span>

<span class="c1">// M√™me boucle pour toutes les boissons, mais chacune se pr√©pare diff√©remment</span>
<span class="k">foreach</span> <span class="p">(</span><span class="n">Boisson</span> <span class="n">boisson</span> <span class="k">in</span> <span class="n">commande</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">boisson</span><span class="p">.</span><span class="nf">Preparer</span><span class="p">();</span> <span class="c1">// Appelle la bonne m√©thode selon le type !</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="5-exemple-complet--notre-mini-caf√©">5. Exemple Complet : Notre Mini-Caf√©</h2>

<p>Assemblons tout dans un exemple simple :</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>

<span class="c1">// Notre grain de caf√©</span>
<span class="k">public</span> <span class="k">class</span> <span class="nc">GrainCafe</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">Origine</span><span class="p">;</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">Variete</span><span class="p">;</span>
    
    <span class="k">public</span> <span class="nf">GrainCafe</span><span class="p">(</span><span class="kt">string</span> <span class="n">origine</span><span class="p">,</span> <span class="kt">string</span> <span class="n">variete</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Origine</span> <span class="p">=</span> <span class="n">origine</span><span class="p">;</span>
        <span class="n">Variete</span> <span class="p">=</span> <span class="n">variete</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// Notre boisson de base</span>
<span class="k">public</span> <span class="k">class</span> <span class="nc">Boisson</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">Nom</span><span class="p">;</span>
    <span class="k">public</span> <span class="kt">double</span> <span class="n">Prix</span><span class="p">;</span>
    
    <span class="k">public</span> <span class="nf">Boisson</span><span class="p">(</span><span class="kt">string</span> <span class="n">nom</span><span class="p">,</span> <span class="kt">double</span> <span class="n">prix</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Nom</span> <span class="p">=</span> <span class="n">nom</span><span class="p">;</span>
        <span class="n">Prix</span> <span class="p">=</span> <span class="n">prix</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="k">public</span> <span class="k">virtual</span> <span class="k">void</span> <span class="nf">Preparer</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"Pr√©paration de </span><span class="p">{</span><span class="n">Nom</span><span class="p">}</span><span class="s">..."</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// Notre caf√© sp√©cialis√©</span>
<span class="k">public</span> <span class="k">class</span> <span class="nc">Cafe</span> <span class="p">:</span> <span class="n">Boisson</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="n">GrainCafe</span> <span class="n">Grain</span><span class="p">;</span>
    
    <span class="k">public</span> <span class="nf">Cafe</span><span class="p">(</span><span class="kt">string</span> <span class="n">nom</span><span class="p">,</span> <span class="kt">double</span> <span class="n">prix</span><span class="p">,</span> <span class="n">GrainCafe</span> <span class="n">grain</span><span class="p">)</span> <span class="p">:</span> <span class="k">base</span><span class="p">(</span><span class="n">nom</span><span class="p">,</span> <span class="n">prix</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Grain</span> <span class="p">=</span> <span class="n">grain</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="k">public</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">Preparer</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚òï Pr√©paration d'un </span><span class="p">{</span><span class="n">Nom</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚òï Avec du </span><span class="p">{</span><span class="n">Grain</span><span class="p">.</span><span class="n">Variete</span><span class="p">}</span><span class="s"> de </span><span class="p">{</span><span class="n">Grain</span><span class="p">.</span><span class="n">Origine</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚òï </span><span class="p">{</span><span class="n">Nom</span><span class="p">}</span><span class="s"> pr√™t ! Prix : </span><span class="p">{</span><span class="n">Prix</span><span class="p">}</span><span class="s">‚Ç¨"</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// Notre programme principal</span>
<span class="k">class</span> <span class="nc">Program</span>
<span class="p">{</span>
    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="c1">// Cr√©er des grains</span>
        <span class="n">GrainCafe</span> <span class="n">arabica</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">GrainCafe</span><span class="p">(</span><span class="s">"√âthiopie"</span><span class="p">,</span> <span class="s">"Arabica"</span><span class="p">);</span>
        <span class="n">GrainCafe</span> <span class="n">robusta</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">GrainCafe</span><span class="p">(</span><span class="s">"Vietnam"</span><span class="p">,</span> <span class="s">"Robusta"</span><span class="p">);</span>
        
        <span class="c1">// Cr√©er des caf√©s</span>
        <span class="n">Cafe</span> <span class="n">espresso</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Cafe</span><span class="p">(</span><span class="s">"Espresso"</span><span class="p">,</span> <span class="m">2.50</span><span class="p">,</span> <span class="n">arabica</span><span class="p">);</span>
        <span class="n">Cafe</span> <span class="n">americano</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Cafe</span><span class="p">(</span><span class="s">"Americano"</span><span class="p">,</span> <span class="m">3.00</span><span class="p">,</span> <span class="n">robusta</span><span class="p">);</span>
        
        <span class="c1">// Pr√©parer les commandes</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"=== Bienvenue dans notre caf√© ! ==="</span><span class="p">);</span>
        <span class="n">espresso</span><span class="p">.</span><span class="nf">Preparer</span><span class="p">();</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">();</span>
        <span class="n">americano</span><span class="p">.</span><span class="nf">Preparer</span><span class="p">();</span>
        
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"\nMerci de votre visite ! ‚òï"</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="6-r√©capitulatif-simple">6. R√©capitulatif Simple</h2>

<p>‚úÖ <strong>Classe</strong> = Une recette (comment cr√©er quelque chose)<br />
‚úÖ <strong>Objet</strong> = Le r√©sultat de la recette (votre caf√© concret)<br />
‚úÖ <strong>Encapsulation</strong> = Garder certaines choses priv√©es<br />
‚úÖ <strong>H√©ritage</strong> = R√©utiliser une recette de base<br />
‚úÖ <strong>Polymorphisme</strong> = M√™me action, r√©sultats diff√©rents</p>

<p>La POO, c‚Äôest comme g√©rer un caf√© :</p>
<ul>
  <li>Chaque chose a sa place (classes)</li>
  <li>On r√©utilise ce qui marche (h√©ritage)</li>
  <li>On prot√®ge nos secrets (encapsulation)</li>
  <li>On s‚Äôadapte aux besoins (polymorphisme)</li>
</ul>

<hr />

<p><em>Auteur : MattDevBzh</em></p>]]></content><author><name>MattDevBzh</name></author><summary type="html"><![CDATA[Apprendre la POO en .NET]]></summary></entry><entry><title type="html">Comprendre les principes SOLID en d√©veloppement logiciel</title><link href="http://0.0.0.0:4000/2025/07/09/solid.html" rel="alternate" type="text/html" title="Comprendre les principes SOLID en d√©veloppement logiciel" /><published>2025-07-09T00:00:00+00:00</published><updated>2025-07-09T00:00:00+00:00</updated><id>http://0.0.0.0:4000/2025/07/09/solid</id><content type="html" xml:base="http://0.0.0.0:4000/2025/07/09/solid.html"><![CDATA[<p><img src="/_posts/solid.png" alt="Logo du site" />
<strong>SOLID</strong> est un ensemble de cinq principes fondamentaux pour la conception de code orient√© objet. Leur application permet de concevoir des logiciels plus robustes, flexibles et maintenables. Voici un tour d‚Äôhorizon de ces principes, illustr√©s par des exemples concrets.</p>

<h2 id="sommaire">Sommaire</h2>
<ul id="markdown-toc">
  <li><a href="#sommaire" id="markdown-toc-sommaire">Sommaire</a></li>
  <li><a href="#single-responsibility-principle" id="markdown-toc-single-responsibility-principle"><span style="color:red">S</span>ingle Responsibility Principle</a></li>
  <li><a href="#openclosed-principle" id="markdown-toc-openclosed-principle"><span style="color:red">O</span>pen/Closed Principle</a></li>
  <li><a href="#liskov-substitution-principle" id="markdown-toc-liskov-substitution-principle"><span style="color:red">L</span>iskov Substitution Principle</a></li>
  <li><a href="#interface-segregation-principle" id="markdown-toc-interface-segregation-principle"><span style="color:red">I</span>nterface Segregation Principle</a></li>
  <li><a href="#dependency-inversion-principle" id="markdown-toc-dependency-inversion-principle"><span style="color:red">D</span>ependency Inversion Principle</a></li>
  <li><a href="#conclusion" id="markdown-toc-conclusion">Conclusion</a></li>
</ul>

<hr />

<h2 id="single-responsibility-principle"><span style="color:red">S</span>ingle Responsibility Principle</h2>
<p><strong>Principe de Responsabilit√© Unique</strong></p>

<p>Une classe ne doit avoir qu‚Äôune seule raison de changer. Chaque classe doit g√©rer un seul p√©rim√®tre fonctionnel, ce qui la rend plus robuste et moins sujette aux impacts des √©volutions ext√©rieures.</p>

<p><strong>Avantages :</strong></p>
<ul>
  <li>Facilite la maintenance</li>
  <li>Favorise la r√©utilisation</li>
</ul>

<p><strong>Inconv√©nients :</strong></p>
<ul>
  <li>Multiplication du nombre de classes</li>
</ul>

<p><strong>Exemple :</strong></p>

<p><em>Mauvaise impl√©mentation :</em></p>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">CoffeeMachine</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">waterLevel</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">coffeeBeansLevel</span><span class="p">;</span>
    <span class="k">void</span> <span class="nf">makeCoffee</span><span class="p">()</span> <span class="p">{</span> <span class="cm">/* ... */</span> <span class="p">}</span>
    <span class="k">void</span> <span class="nf">cleanMachine</span><span class="p">()</span> <span class="p">{</span> <span class="cm">/* ... */</span> <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p><em>Bonne impl√©mentation :</em></p>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">CoffeeMachine</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">waterLevel</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">coffeeBeansLevel</span><span class="p">;</span>
    <span class="k">void</span> <span class="nf">makeCoffee</span><span class="p">()</span> <span class="p">{</span> <span class="cm">/* ... */</span> <span class="p">}</span>
<span class="p">}</span>

<span class="k">class</span> <span class="nc">MachineCleaner</span> <span class="p">{</span>
    <span class="k">void</span> <span class="nf">cleanMachine</span><span class="p">(</span><span class="n">CoffeeMachine</span> <span class="n">machine</span><span class="p">)</span> <span class="p">{</span> <span class="cm">/* ... */</span> <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="openclosed-principle"><span style="color:red">O</span>pen/Closed Principle</h2>
<p><strong>Principe Ouvert/Ferm√©</strong></p>

<blockquote>
  <p>Les entit√©s logicielles doivent √™tre <strong>ouvertes √† l‚Äôextension</strong> mais <strong>ferm√©es √† la modification</strong>.</p>
</blockquote>

<p><strong>Avantages :</strong></p>
<ul>
  <li>Permet l‚Äôajout de fonctionnalit√©s sans impacter l‚Äôexistant</li>
</ul>

<p><strong>Inconv√©nients :</strong></p>
<ul>
  <li>Complexification du code</li>
  <li>Multiplication des classes</li>
</ul>

<p><strong>Exemple :</strong></p>

<p><em>Mauvaise impl√©mentation :</em></p>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">CoffeeMachine</span> <span class="p">{</span>
    <span class="kt">string</span> <span class="n">type</span><span class="p">;</span>
    <span class="k">void</span> <span class="nf">brewCoffee</span><span class="p">()</span> <span class="p">{</span> <span class="cm">/* logique d√©pendant du type */</span> <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p><em>Bonne impl√©mentation :</em></p>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">interface</span> <span class="nc">ICoffeeBrewer</span> <span class="p">{</span>
    <span class="k">void</span> <span class="nf">brewCoffee</span><span class="p">();</span>
<span class="p">}</span>

<span class="k">class</span> <span class="nc">DripCoffeeMaker</span> <span class="p">:</span> <span class="n">ICoffeeBrewer</span> <span class="p">{</span>
    <span class="k">void</span> <span class="nf">brewCoffee</span><span class="p">()</span> <span class="p">{</span> <span class="cm">/* goutte √† goutte */</span> <span class="p">}</span>
<span class="p">}</span>

<span class="k">class</span> <span class="nc">EspressoMachine</span> <span class="p">:</span> <span class="n">ICoffeeBrewer</span> <span class="p">{</span>
    <span class="k">void</span> <span class="nf">brewCoffee</span><span class="p">()</span> <span class="p">{</span> <span class="cm">/* espresso */</span> <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="liskov-substitution-principle"><span style="color:red">L</span>iskov Substitution Principle</h2>
<p><strong>Principe de Substitution de Liskov</strong></p>

<p>Les instances d‚Äôune classe d√©riv√©e doivent pouvoir remplacer celles de leur classe de base sans alt√©rer la logique du programme.</p>

<p><strong>Avantages :</strong></p>
<ul>
  <li>Facilite l‚Äô√©volution et la maintenance</li>
</ul>

<p><strong>Inconv√©nients :</strong></p>
<ul>
  <li>Principe facilement viol√©</li>
</ul>

<p><strong>Exemple :</strong></p>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">CoffeeMachine</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">waterLevel</span><span class="p">;</span>
    <span class="k">void</span> <span class="nf">addWater</span><span class="p">(</span><span class="kt">int</span> <span class="n">amount</span><span class="p">)</span> <span class="p">{</span> <span class="k">if</span> <span class="p">(</span><span class="n">amount</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span> <span class="n">waterLevel</span> <span class="p">+=</span> <span class="n">amount</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">void</span> <span class="nf">brew</span><span class="p">()</span> <span class="p">{</span> <span class="cm">/* ... */</span> <span class="p">}</span>
<span class="p">}</span>

<span class="k">class</span> <span class="nc">EspressoMachine</span> <span class="p">:</span> <span class="n">CoffeeMachine</span> <span class="p">{</span>
    <span class="k">override</span> <span class="k">void</span> <span class="nf">addWater</span><span class="p">(</span><span class="kt">int</span> <span class="n">amount</span><span class="p">)</span> <span class="p">{</span> <span class="k">base</span><span class="p">.</span><span class="nf">addWater</span><span class="p">(</span><span class="n">amount</span><span class="p">);</span> <span class="p">}</span>
    <span class="k">override</span> <span class="k">void</span> <span class="nf">brew</span><span class="p">()</span> <span class="p">{</span> <span class="cm">/* espresso */</span> <span class="p">}</span>
<span class="p">}</span>

<span class="k">void</span> <span class="nf">makeCoffee</span><span class="p">(</span><span class="n">CoffeeMachine</span> <span class="n">machine</span><span class="p">,</span> <span class="kt">int</span> <span class="n">waterAmount</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">machine</span><span class="p">.</span><span class="nf">addWater</span><span class="p">(</span><span class="n">waterAmount</span><span class="p">);</span>
    <span class="n">machine</span><span class="p">.</span><span class="nf">brew</span><span class="p">();</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="interface-segregation-principle"><span style="color:red">I</span>nterface Segregation Principle</h2>
<p><strong>Principe de S√©gr√©gation d‚ÄôInterface</strong></p>

<p>Une classe ne doit pas d√©pendre d‚Äôinterfaces qui ne lui sont pas utiles. Il vaut mieux multiplier les petites interfaces sp√©cifiques.</p>

<p><strong>Avantages :</strong></p>
<ul>
  <li>Am√©liore la clart√©</li>
  <li>R√©duit le couplage</li>
</ul>

<p><strong>Inconv√©nients :</strong></p>
<ul>
  <li>Gestion de nombreuses interfaces</li>
</ul>

<p><strong>Exemple :</strong></p>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">public</span> <span class="k">interface</span> <span class="nc">ICoffeeBrewer</span> <span class="p">{</span>
    <span class="k">void</span> <span class="nf">BrewCoffee</span><span class="p">();</span>
    <span class="k">void</span> <span class="nf">AddCoffeeBeans</span><span class="p">();</span>
    <span class="k">void</span> <span class="nf">AddWater</span><span class="p">();</span>
<span class="p">}</span>

<span class="k">public</span> <span class="k">interface</span> <span class="nc">IMilkProvider</span> <span class="p">{</span>
    <span class="k">void</span> <span class="nf">AddMilk</span><span class="p">();</span>
<span class="p">}</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">DripCoffeeMaker</span> <span class="p">:</span> <span class="n">ICoffeeBrewer</span> <span class="p">{</span> <span class="cm">/* ... */</span> <span class="p">}</span>
<span class="k">public</span> <span class="k">class</span> <span class="nc">EspressoMachine</span> <span class="p">:</span> <span class="n">ICoffeeBrewer</span><span class="p">,</span> <span class="n">IMilkProvider</span> <span class="p">{</span> <span class="cm">/* ... */</span> <span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="dependency-inversion-principle"><span style="color:red">D</span>ependency Inversion Principle</h2>
<p><strong>Principe d‚ÄôInversion de D√©pendance</strong></p>

<p>Les modules de haut niveau ne doivent pas d√©pendre des modules de bas niveau, mais d‚Äôabstractions.</p>

<p><strong>Avantages :</strong></p>
<ul>
  <li>R√©duit la d√©pendance aux d√©tails d‚Äôimpl√©mentation</li>
  <li>Am√©liore la flexibilit√©</li>
</ul>

<p><strong>Inconv√©nients :</strong></p>
<ul>
  <li>Ajoute de la complexit√©</li>
</ul>

<p><strong>Exemple :</strong></p>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">public</span> <span class="k">interface</span> <span class="nc">ICoffeeProvider</span> <span class="p">{</span>
    <span class="kt">string</span> <span class="nf">ProvideCoffee</span><span class="p">();</span>
<span class="p">}</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">CoffeeBeanContainer</span> <span class="p">:</span> <span class="n">ICoffeeProvider</span> <span class="p">{</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="nf">ProvideCoffee</span><span class="p">()</span> <span class="p">{</span> <span class="k">return</span> <span class="s">"Ground coffee beans"</span><span class="p">;</span> <span class="p">}</span>
<span class="p">}</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">CoffeeMaker</span> <span class="p">{</span>
    <span class="k">private</span> <span class="k">readonly</span> <span class="n">ICoffeeProvider</span> <span class="n">coffeeProvider</span><span class="p">;</span>
    <span class="k">public</span> <span class="nf">CoffeeMaker</span><span class="p">(</span><span class="n">ICoffeeProvider</span> <span class="n">provider</span><span class="p">)</span> <span class="p">{</span> <span class="k">this</span><span class="p">.</span><span class="n">coffeeProvider</span> <span class="p">=</span> <span class="n">provider</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">public</span> <span class="k">void</span> <span class="nf">BrewCoffee</span><span class="p">()</span> <span class="p">{</span>
        <span class="kt">string</span> <span class="n">coffeeSource</span> <span class="p">=</span> <span class="n">coffeeProvider</span><span class="p">.</span><span class="nf">ProvideCoffee</span><span class="p">();</span>
        <span class="c1">// pr√©paration avec coffeeSource</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="conclusion">Conclusion</h2>

<p>Ma√Ætriser les principes SOLID, c‚Äôest se donner les moyens de construire des applications √©volutives, robustes et plus simples √† maintenir. üå±</p>

<p>N‚Äôh√©sitez pas √† partager vos retours ou exemples d‚Äôapplication en commentaire !</p>]]></content><author><name>MattDevBzh</name></author><summary type="html"><![CDATA[SOLID est un ensemble de cinq principes fondamentaux pour la conception de code orient√© objet. Leur application permet de concevoir des logiciels plus robustes, flexibles et maintenables. Voici un tour d‚Äôhorizon de ces principes, illustr√©s par des exemples concrets.]]></summary></entry><entry><title type="html">M√©thodes et fonctions en C# : Les recettes secr√®tes de votre caf√©</title><link href="http://0.0.0.0:4000/2025/01/31/methodes-fonctions.html" rel="alternate" type="text/html" title="M√©thodes et fonctions en C# : Les recettes secr√®tes de votre caf√©" /><published>2025-01-31T00:00:00+00:00</published><updated>2025-01-31T00:00:00+00:00</updated><id>http://0.0.0.0:4000/2025/01/31/methodes-fonctions</id><content type="html" xml:base="http://0.0.0.0:4000/2025/01/31/methodes-fonctions.html"><![CDATA[<p>Dans un caf√©, chaque barista a ses <strong>recettes secr√®tes</strong> : comment obtenir la mousse parfaite, pr√©parer l‚Äôespresso id√©al, ou calculer rapidement les prix. En programmation C#, les <strong>m√©thodes et fonctions</strong> sont ces recettes r√©utilisables qui rendent notre code organis√© et efficace ! ‚òï</p>

<p>D√©couvrons ensemble comment cr√©er vos propres ‚Äúrecettes de code‚Äù !</p>

<h2 id="sommaire">Sommaire</h2>
<ul id="markdown-toc">
  <li><a href="#sommaire" id="markdown-toc-sommaire">Sommaire</a></li>
  <li><a href="#quest-ce-quune-m√©thode-" id="markdown-toc-quest-ce-quune-m√©thode-">Qu‚Äôest-ce qu‚Äôune m√©thode ?</a></li>
  <li><a href="#1-m√©thodes-de-base--sans-param√®tres-ni-retour" id="markdown-toc-1-m√©thodes-de-base--sans-param√®tres-ni-retour">1. M√©thodes de base : Sans param√®tres ni retour</a>    <ul>
      <li><a href="#syntaxe" id="markdown-toc-syntaxe">Syntaxe</a></li>
      <li><a href="#exemple--actions-simples-du-caf√©" id="markdown-toc-exemple--actions-simples-du-caf√©">Exemple : Actions simples du caf√©</a></li>
    </ul>
  </li>
  <li><a href="#2-m√©thodes-avec-param√®tres--personnaliser-les-recettes" id="markdown-toc-2-m√©thodes-avec-param√®tres--personnaliser-les-recettes">2. M√©thodes avec param√®tres : Personnaliser les recettes</a>    <ul>
      <li><a href="#exemple--pr√©paration-personnalis√©e-de-caf√©" id="markdown-toc-exemple--pr√©paration-personnalis√©e-de-caf√©">Exemple : Pr√©paration personnalis√©e de caf√©</a></li>
    </ul>
  </li>
  <li><a href="#3-m√©thodes-avec-valeur-de-retour--obtenir-un-r√©sultat" id="markdown-toc-3-m√©thodes-avec-valeur-de-retour--obtenir-un-r√©sultat">3. M√©thodes avec valeur de retour : Obtenir un r√©sultat</a>    <ul>
      <li><a href="#exemple--calculs-pour-le-caf√©" id="markdown-toc-exemple--calculs-pour-le-caf√©">Exemple : Calculs pour le caf√©</a></li>
    </ul>
  </li>
  <li><a href="#4-param√®tres-optionnels-et-nomm√©s" id="markdown-toc-4-param√®tres-optionnels-et-nomm√©s">4. Param√®tres optionnels et nomm√©s</a>    <ul>
      <li><a href="#exemple--commande-flexible" id="markdown-toc-exemple--commande-flexible">Exemple : Commande flexible</a></li>
    </ul>
  </li>
  <li><a href="#5-surcharge-de-m√©thodes--plusieurs-versions" id="markdown-toc-5-surcharge-de-m√©thodes--plusieurs-versions">5. Surcharge de m√©thodes : Plusieurs versions</a>    <ul>
      <li><a href="#exemple--diff√©rentes-fa√ßons-de-pr√©parer-un-caf√©" id="markdown-toc-exemple--diff√©rentes-fa√ßons-de-pr√©parer-un-caf√©">Exemple : Diff√©rentes fa√ßons de pr√©parer un caf√©</a></li>
    </ul>
  </li>
  <li><a href="#6-m√©thodes-r√©cursives--sappeler-soi-m√™me" id="markdown-toc-6-m√©thodes-r√©cursives--sappeler-soi-m√™me">6. M√©thodes r√©cursives : S‚Äôappeler soi-m√™me</a>    <ul>
      <li><a href="#exemple--calculs-en-cascade" id="markdown-toc-exemple--calculs-en-cascade">Exemple : Calculs en cascade</a></li>
    </ul>
  </li>
  <li><a href="#7-m√©thodes-dextension--√©tendre-les-types-existants" id="markdown-toc-7-m√©thodes-dextension--√©tendre-les-types-existants">7. M√©thodes d‚Äôextension : √âtendre les types existants</a>    <ul>
      <li><a href="#exemple--extensions-pour-les-cha√Ænes-de-caf√©" id="markdown-toc-exemple--extensions-pour-les-cha√Ænes-de-caf√©">Exemple : Extensions pour les cha√Ænes de caf√©</a></li>
    </ul>
  </li>
  <li><a href="#8-exemple-complet--syst√®me-de-caf√©-avec-m√©thodes" id="markdown-toc-8-exemple-complet--syst√®me-de-caf√©-avec-m√©thodes">8. Exemple complet : Syst√®me de caf√© avec m√©thodes</a></li>
  <li><a href="#9-bonnes-pratiques-pour-les-m√©thodes" id="markdown-toc-9-bonnes-pratiques-pour-les-m√©thodes">9. Bonnes pratiques pour les m√©thodes</a>    <ul>
      <li><a href="#-nommage-clair-et-expressif" id="markdown-toc--nommage-clair-et-expressif">‚úÖ Nommage clair et expressif</a></li>
      <li><a href="#-une-responsabilit√©-par-m√©thode" id="markdown-toc--une-responsabilit√©-par-m√©thode">‚úÖ Une responsabilit√© par m√©thode</a></li>
      <li><a href="#-param√®tres-raisonnables" id="markdown-toc--param√®tres-raisonnables">‚úÖ Param√®tres raisonnables</a></li>
      <li><a href="#-gestion-derreurs-appropri√©e" id="markdown-toc--gestion-derreurs-appropri√©e">‚úÖ Gestion d‚Äôerreurs appropri√©e</a></li>
    </ul>
  </li>
  <li><a href="#exercices-pratiques" id="markdown-toc-exercices-pratiques">Exercices pratiques</a>    <ul>
      <li><a href="#exercice-1--calculatrice-de-caf√©" id="markdown-toc-exercice-1--calculatrice-de-caf√©">Exercice 1 : Calculatrice de caf√©</a></li>
      <li><a href="#exercice-2--g√©n√©rateur-de-recettes" id="markdown-toc-exercice-2--g√©n√©rateur-de-recettes">Exercice 2 : G√©n√©rateur de recettes</a></li>
      <li><a href="#exercice-3--syst√®me-de-fid√©lit√©" id="markdown-toc-exercice-3--syst√®me-de-fid√©lit√©">Exercice 3 : Syst√®me de fid√©lit√©</a></li>
    </ul>
  </li>
  <li><a href="#conclusion" id="markdown-toc-conclusion">Conclusion</a></li>
</ul>

<hr />

<h2 id="quest-ce-quune-m√©thode-">Qu‚Äôest-ce qu‚Äôune m√©thode ?</h2>

<p>Une <strong>m√©thode</strong> est un bloc de code r√©utilisable qui effectue une t√¢che sp√©cifique. C‚Äôest comme une recette de cuisine :</p>

<ul>
  <li>üìù <strong>Nom</strong> : ‚ÄúPr√©parer un cappuccino‚Äù</li>
  <li>ü•õ <strong>Ingr√©dients</strong> (param√®tres) : caf√©, lait, sucre</li>
  <li>üîÑ <strong>√âtapes</strong> : le code de la m√©thode</li>
  <li>‚òï <strong>R√©sultat</strong> : le cappuccino fini (valeur de retour)</li>
</ul>

<hr />

<h2 id="1-m√©thodes-de-base--sans-param√®tres-ni-retour">1. M√©thodes de base : Sans param√®tres ni retour</h2>

<h3 id="syntaxe">Syntaxe</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">[</span><span class="n">modificateur</span><span class="p">]</span> <span class="p">[</span><span class="n">type_retour</span><span class="p">]</span> <span class="nf">NomMethode</span><span class="p">()</span>
<span class="p">{</span>
    <span class="c1">// Corps de la m√©thode</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="exemple--actions-simples-du-caf√©">Exemple : Actions simples du caf√©</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">BaristaCafe</span>
<span class="p">{</span>
    <span class="c1">// M√©thode pour afficher le message d'accueil</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">AfficherAccueil</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚òï Bienvenue dans notre caf√© !"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"Nous pr√©parons le meilleur caf√© de la ville !"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"Que puis-je vous servir aujourd'hui ?"</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="c1">// M√©thode pour nettoyer la machine</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">NettoyerMachine</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"üßπ Nettoyage de la machine √† caf√©..."</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"1. Vidange du marc de caf√©"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"2. Rin√ßage des conduits"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"3. Nettoyage de la buse vapeur"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚úÖ Machine propre et pr√™te !"</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="c1">// M√©thode pour fermer le caf√©</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">FermerCafe</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"üåô Proc√©dure de fermeture..."</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"- Arr√™t des machines"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"- Nettoyage des surfaces"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"- Fermeture de la caisse"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚úÖ Caf√© ferm√©. √Ä demain !"</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nf">AfficherAccueil</span><span class="p">();</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">();</span>
        
        <span class="nf">NettoyerMachine</span><span class="p">();</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">();</span>
        
        <span class="nf">FermerCafe</span><span class="p">();</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="2-m√©thodes-avec-param√®tres--personnaliser-les-recettes">2. M√©thodes avec param√®tres : Personnaliser les recettes</h2>

<h3 id="exemple--pr√©paration-personnalis√©e-de-caf√©">Exemple : Pr√©paration personnalis√©e de caf√©</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">PreparationCafe</span>
<span class="p">{</span>
    <span class="c1">// M√©thode avec un param√®tre</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">PreparerEspresso</span><span class="p">(</span><span class="kt">string</span> <span class="n">client</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚òï Pr√©paration d'un espresso pour </span><span class="p">{</span><span class="n">client</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"- Moudre 18g de grains arabica"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"- Tasser la mouture"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"- Extraction 25 secondes"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚úÖ Espresso pr√™t pour </span><span class="p">{</span><span class="n">client</span><span class="p">}</span><span class="s"> !"</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="c1">// M√©thode avec plusieurs param√®tres</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">PreparerCappuccino</span><span class="p">(</span><span class="kt">string</span> <span class="n">client</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">avecSucre</span><span class="p">,</span> <span class="kt">string</span> <span class="n">typeLait</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚òï Pr√©paration d'un cappuccino pour </span><span class="p">{</span><span class="n">client</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"- Pr√©parer un espresso"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"- Chauffer le </span><span class="p">{</span><span class="n">typeLait</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"- Cr√©er la mousse de lait"</span><span class="p">);</span>
        
        <span class="k">if</span> <span class="p">(</span><span class="n">avecSucre</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"- Ajouter du sucre"</span><span class="p">);</span>
        <span class="p">}</span>
        
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"- Verser la mousse d√©licatement"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚úÖ Cappuccino pr√™t pour </span><span class="p">{</span><span class="n">client</span><span class="p">}</span><span class="s"> !"</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="c1">// M√©thode avec param√®tres de diff√©rents types</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">PreparerCommande</span><span class="p">(</span><span class="kt">string</span> <span class="n">client</span><span class="p">,</span> <span class="kt">string</span> <span class="n">typeCafe</span><span class="p">,</span> <span class="kt">int</span> <span class="n">quantite</span><span class="p">,</span> <span class="kt">double</span> <span class="n">taille</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"üìã Commande pour </span><span class="p">{</span><span class="n">client</span><span class="p">}</span><span class="s">:"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Type: </span><span class="p">{</span><span class="n">typeCafe</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Quantit√©: </span><span class="p">{</span><span class="n">quantite</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Taille: </span><span class="p">{</span><span class="n">taille</span><span class="p">}</span><span class="s">cl"</span><span class="p">);</span>
        
        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;=</span> <span class="n">quantite</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"üîÑ Pr√©paration n¬∞</span><span class="p">{</span><span class="n">i</span><span class="p">}</span><span class="s">..."</span><span class="p">);</span>
        <span class="p">}</span>
        
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚úÖ </span><span class="p">{</span><span class="n">quantite</span><span class="p">}</span><span class="s"> </span><span class="p">{</span><span class="n">typeCafe</span><span class="p">}</span><span class="s"> de </span><span class="p">{</span><span class="n">taille</span><span class="p">}</span><span class="s">cl pr√™ts !"</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nf">PreparerEspresso</span><span class="p">(</span><span class="s">"Marie"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">();</span>
        
        <span class="nf">PreparerCappuccino</span><span class="p">(</span><span class="s">"Paul"</span><span class="p">,</span> <span class="k">true</span><span class="p">,</span> <span class="s">"lait d'avoine"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">();</span>
        
        <span class="nf">PreparerCommande</span><span class="p">(</span><span class="s">"Julie"</span><span class="p">,</span> <span class="s">"Latte"</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">25.0</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="3-m√©thodes-avec-valeur-de-retour--obtenir-un-r√©sultat">3. M√©thodes avec valeur de retour : Obtenir un r√©sultat</h2>

<h3 id="exemple--calculs-pour-le-caf√©">Exemple : Calculs pour le caf√©</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">CalculsCafe</span>
<span class="p">{</span>
    <span class="c1">// M√©thode qui retourne un prix</span>
    <span class="k">public</span> <span class="k">static</span> <span class="kt">double</span> <span class="nf">CalculerPrix</span><span class="p">(</span><span class="kt">string</span> <span class="n">typeCafe</span><span class="p">,</span> <span class="kt">string</span> <span class="n">taille</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="kt">double</span> <span class="n">prixBase</span> <span class="p">=</span> <span class="n">typeCafe</span> <span class="k">switch</span>
        <span class="p">{</span>
            <span class="s">"Espresso"</span> <span class="p">=&gt;</span> <span class="m">2.50</span><span class="p">,</span>
            <span class="s">"Cappuccino"</span> <span class="p">=&gt;</span> <span class="m">4.00</span><span class="p">,</span>
            <span class="s">"Latte"</span> <span class="p">=&gt;</span> <span class="m">4.50</span><span class="p">,</span>
            <span class="s">"Americano"</span> <span class="p">=&gt;</span> <span class="m">3.00</span><span class="p">,</span>
            <span class="n">_</span> <span class="p">=&gt;</span> <span class="m">2.00</span> <span class="c1">// Prix par d√©faut</span>
        <span class="p">};</span>

        <span class="kt">double</span> <span class="n">multiplicateur</span> <span class="p">=</span> <span class="n">taille</span> <span class="k">switch</span>
        <span class="p">{</span>
            <span class="s">"S"</span> <span class="p">=&gt;</span> <span class="m">0.8</span><span class="p">,</span>
            <span class="s">"M"</span> <span class="p">=&gt;</span> <span class="m">1.0</span><span class="p">,</span>
            <span class="s">"L"</span> <span class="p">=&gt;</span> <span class="m">1.3</span><span class="p">,</span>
            <span class="s">"XL"</span> <span class="p">=&gt;</span> <span class="m">1.6</span><span class="p">,</span>
            <span class="n">_</span> <span class="p">=&gt;</span> <span class="m">1.0</span>
        <span class="p">};</span>

        <span class="k">return</span> <span class="n">prixBase</span> <span class="p">*</span> <span class="n">multiplicateur</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="c1">// M√©thode qui retourne du texte</span>
    <span class="k">public</span> <span class="k">static</span> <span class="kt">string</span> <span class="nf">ObtenirRecommandation</span><span class="p">(</span><span class="kt">int</span> <span class="n">heure</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">heure</span> <span class="p">&gt;=</span> <span class="m">6</span> <span class="p">&amp;&amp;</span> <span class="n">heure</span> <span class="p">&lt;</span> <span class="m">10</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">return</span> <span class="s">"‚òÄÔ∏è Espresso pour bien commencer la journ√©e !"</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">heure</span> <span class="p">&gt;=</span> <span class="m">10</span> <span class="p">&amp;&amp;</span> <span class="n">heure</span> <span class="p">&lt;</span> <span class="m">14</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">return</span> <span class="s">"‚òï Cappuccino parfait pour la pause matinale !"</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">heure</span> <span class="p">&gt;=</span> <span class="m">14</span> <span class="p">&amp;&amp;</span> <span class="n">heure</span> <span class="p">&lt;</span> <span class="m">17</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">return</span> <span class="s">"ü•õ Latte onctueux pour l'apr√®s-midi !"</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">else</span>
        <span class="p">{</span>
            <span class="k">return</span> <span class="s">"üåô D√©caf√©in√© pour une soir√©e relaxante !"</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="c1">// M√©thode qui retourne un bool√©en</span>
    <span class="k">public</span> <span class="k">static</span> <span class="kt">bool</span> <span class="nf">PeutPreparerCafe</span><span class="p">(</span><span class="kt">string</span> <span class="n">typeCafe</span><span class="p">,</span> <span class="kt">int</span> <span class="n">stockCafe</span><span class="p">,</span> <span class="kt">int</span> <span class="n">stockLait</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="kt">int</span> <span class="n">cafeNecessaire</span> <span class="p">=</span> <span class="n">typeCafe</span> <span class="k">switch</span>
        <span class="p">{</span>
            <span class="s">"Espresso"</span> <span class="p">=&gt;</span> <span class="m">18</span><span class="p">,</span>
            <span class="s">"Americano"</span> <span class="p">=&gt;</span> <span class="m">18</span><span class="p">,</span>
            <span class="s">"Cappuccino"</span> <span class="p">=&gt;</span> <span class="m">18</span><span class="p">,</span>
            <span class="s">"Latte"</span> <span class="p">=&gt;</span> <span class="m">20</span><span class="p">,</span>
            <span class="n">_</span> <span class="p">=&gt;</span> <span class="m">15</span>
        <span class="p">};</span>

        <span class="kt">int</span> <span class="n">laitNecessaire</span> <span class="p">=</span> <span class="n">typeCafe</span> <span class="k">switch</span>
        <span class="p">{</span>
            <span class="s">"Cappuccino"</span> <span class="p">=&gt;</span> <span class="m">60</span><span class="p">,</span>
            <span class="s">"Latte"</span> <span class="p">=&gt;</span> <span class="m">150</span><span class="p">,</span>
            <span class="n">_</span> <span class="p">=&gt;</span> <span class="m">0</span>
        <span class="p">};</span>

        <span class="k">return</span> <span class="n">stockCafe</span> <span class="p">&gt;=</span> <span class="n">cafeNecessaire</span> <span class="p">&amp;&amp;</span> <span class="n">stockLait</span> <span class="p">&gt;=</span> <span class="n">laitNecessaire</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="c1">// M√©thode qui retourne un objet complexe</span>
    <span class="k">public</span> <span class="k">static</span> <span class="p">(</span><span class="kt">double</span> <span class="n">prix</span><span class="p">,</span> <span class="kt">int</span> <span class="n">tempsPreparation</span><span class="p">,</span> <span class="kt">string</span> <span class="n">difficulte</span><span class="p">)</span> 
        <span class="nf">ObtenirInfosCafe</span><span class="p">(</span><span class="kt">string</span> <span class="n">typeCafe</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="n">typeCafe</span> <span class="k">switch</span>
        <span class="p">{</span>
            <span class="s">"Espresso"</span> <span class="p">=&gt;</span> <span class="p">(</span><span class="m">2.50</span><span class="p">,</span> <span class="m">30</span><span class="p">,</span> <span class="s">"Facile"</span><span class="p">),</span>
            <span class="s">"Cappuccino"</span> <span class="p">=&gt;</span> <span class="p">(</span><span class="m">4.00</span><span class="p">,</span> <span class="m">120</span><span class="p">,</span> <span class="s">"Moyenne"</span><span class="p">),</span>
            <span class="s">"Latte"</span> <span class="p">=&gt;</span> <span class="p">(</span><span class="m">4.50</span><span class="p">,</span> <span class="m">90</span><span class="p">,</span> <span class="s">"Moyenne"</span><span class="p">),</span>
            <span class="s">"Americano"</span> <span class="p">=&gt;</span> <span class="p">(</span><span class="m">3.00</span><span class="p">,</span> <span class="m">45</span><span class="p">,</span> <span class="s">"Facile"</span><span class="p">),</span>
            <span class="n">_</span> <span class="p">=&gt;</span> <span class="p">(</span><span class="m">2.00</span><span class="p">,</span> <span class="m">60</span><span class="p">,</span> <span class="s">"Inconnue"</span><span class="p">)</span>
        <span class="p">};</span>
    <span class="p">}</span>

    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="c1">// Test des calculs de prix</span>
        <span class="kt">string</span> <span class="n">cafe</span> <span class="p">=</span> <span class="s">"Cappuccino"</span><span class="p">;</span>
        <span class="kt">string</span> <span class="n">taille</span> <span class="p">=</span> <span class="s">"L"</span><span class="p">;</span>
        <span class="kt">double</span> <span class="n">prix</span> <span class="p">=</span> <span class="nf">CalculerPrix</span><span class="p">(</span><span class="n">cafe</span><span class="p">,</span> <span class="n">taille</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"Prix </span><span class="p">{</span><span class="n">cafe</span><span class="p">}</span><span class="s"> </span><span class="p">{</span><span class="n">taille</span><span class="p">}</span><span class="s">: </span><span class="p">{</span><span class="n">prix</span><span class="p">:</span><span class="n">C2</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        
        <span class="c1">// Test des recommandations</span>
        <span class="kt">int</span> <span class="n">heureActuelle</span> <span class="p">=</span> <span class="m">14</span><span class="p">;</span>
        <span class="kt">string</span> <span class="n">recommandation</span> <span class="p">=</span> <span class="nf">ObtenirRecommandation</span><span class="p">(</span><span class="n">heureActuelle</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"√Ä </span><span class="p">{</span><span class="n">heureActuelle</span><span class="p">}</span><span class="s">h: </span><span class="p">{</span><span class="n">recommandation</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        
        <span class="c1">// Test de disponibilit√©</span>
        <span class="kt">bool</span> <span class="n">disponible</span> <span class="p">=</span> <span class="nf">PeutPreparerCafe</span><span class="p">(</span><span class="s">"Cappuccino"</span><span class="p">,</span> <span class="m">50</span><span class="p">,</span> <span class="m">100</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"Cappuccino disponible: </span><span class="p">{(</span><span class="n">disponible</span> <span class="p">?</span> <span class="s">"Oui"</span> <span class="p">:</span> <span class="s">"Non"</span><span class="p">)}</span><span class="s">"</span><span class="p">);</span>
        
        <span class="c1">// Test des infos complexes</span>
        <span class="kt">var</span> <span class="p">(</span><span class="n">prixInfo</span><span class="p">,</span> <span class="n">temps</span><span class="p">,</span> <span class="n">difficulte</span><span class="p">)</span> <span class="p">=</span> <span class="nf">ObtenirInfosCafe</span><span class="p">(</span><span class="s">"Latte"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"Latte: </span><span class="p">{</span><span class="n">prixInfo</span><span class="p">:</span><span class="n">C2</span><span class="p">}</span><span class="s">, </span><span class="p">{</span><span class="n">temps</span><span class="p">}</span><span class="s">s, </span><span class="p">{</span><span class="n">difficulte</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="4-param√®tres-optionnels-et-nomm√©s">4. Param√®tres optionnels et nomm√©s</h2>

<h3 id="exemple--commande-flexible">Exemple : Commande flexible</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">CommandeFlexible</span>
<span class="p">{</span>
    <span class="c1">// M√©thode avec param√®tres optionnels</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">PreparerBoisson</span><span class="p">(</span>
        <span class="kt">string</span> <span class="n">typeCafe</span><span class="p">,</span>
        <span class="kt">string</span> <span class="n">client</span> <span class="p">=</span> <span class="s">"Client"</span><span class="p">,</span>
        <span class="kt">string</span> <span class="n">taille</span> <span class="p">=</span> <span class="s">"M"</span><span class="p">,</span>
        <span class="kt">bool</span> <span class="n">avecSucre</span> <span class="p">=</span> <span class="k">false</span><span class="p">,</span>
        <span class="kt">string</span> <span class="n">typeLait</span> <span class="p">=</span> <span class="s">"lait entier"</span><span class="p">,</span>
        <span class="kt">double</span> <span class="n">temperature</span> <span class="p">=</span> <span class="m">70.0</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚òï Pr√©paration de </span><span class="p">{</span><span class="n">typeCafe</span><span class="p">}</span><span class="s"> pour </span><span class="p">{</span><span class="n">client</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Taille: </span><span class="p">{</span><span class="n">taille</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Sucre: </span><span class="p">{(</span><span class="n">avecSucre</span> <span class="p">?</span> <span class="s">"Oui"</span> <span class="p">:</span> <span class="s">"Non"</span><span class="p">)}</span><span class="s">"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Lait: </span><span class="p">{</span><span class="n">typeLait</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Temp√©rature: </span><span class="p">{</span><span class="n">temperature</span><span class="p">}</span><span class="s">¬∞C"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚úÖ Boisson pr√™te !"</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="c1">// M√©thode avec param√®tres par r√©f√©rence</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">MettreAJourStock</span><span class="p">(</span><span class="k">ref</span> <span class="kt">int</span> <span class="n">stockCafe</span><span class="p">,</span> <span class="k">ref</span> <span class="kt">int</span> <span class="n">stockLait</span><span class="p">,</span> <span class="kt">string</span> <span class="n">typeCafe</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"üì¶ Mise √† jour du stock pour </span><span class="p">{</span><span class="n">typeCafe</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Stock avant - Caf√©: </span><span class="p">{</span><span class="n">stockCafe</span><span class="p">}</span><span class="s">g, Lait: </span><span class="p">{</span><span class="n">stockLait</span><span class="p">}</span><span class="s">ml"</span><span class="p">);</span>
        
        <span class="c1">// Consommation selon le type de caf√©</span>
        <span class="k">switch</span> <span class="p">(</span><span class="n">typeCafe</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">case</span> <span class="s">"Espresso"</span><span class="p">:</span>
                <span class="n">stockCafe</span> <span class="p">-=</span> <span class="m">18</span><span class="p">;</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="s">"Cappuccino"</span><span class="p">:</span>
                <span class="n">stockCafe</span> <span class="p">-=</span> <span class="m">18</span><span class="p">;</span>
                <span class="n">stockLait</span> <span class="p">-=</span> <span class="m">60</span><span class="p">;</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="s">"Latte"</span><span class="p">:</span>
                <span class="n">stockCafe</span> <span class="p">-=</span> <span class="m">20</span><span class="p">;</span>
                <span class="n">stockLait</span> <span class="p">-=</span> <span class="m">150</span><span class="p">;</span>
                <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
        
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Stock apr√®s - Caf√©: </span><span class="p">{</span><span class="n">stockCafe</span><span class="p">}</span><span class="s">g, Lait: </span><span class="p">{</span><span class="n">stockLait</span><span class="p">}</span><span class="s">ml"</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="c1">// M√©thode avec param√®tres de sortie</span>
    <span class="k">public</span> <span class="k">static</span> <span class="kt">bool</span> <span class="nf">CalculerCommande</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">produits</span><span class="p">,</span> <span class="kt">double</span><span class="p">[]</span> <span class="n">prix</span><span class="p">,</span> 
        <span class="k">out</span> <span class="kt">double</span> <span class="n">total</span><span class="p">,</span> <span class="k">out</span> <span class="kt">int</span> <span class="n">nombreItems</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">total</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
        <span class="n">nombreItems</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
        
        <span class="k">if</span> <span class="p">(</span><span class="n">produits</span><span class="p">.</span><span class="n">Length</span> <span class="p">!=</span> <span class="n">prix</span><span class="p">.</span><span class="n">Length</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">return</span> <span class="k">false</span><span class="p">;</span> <span class="c1">// Erreur dans les donn√©es</span>
        <span class="p">}</span>
        
        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">produits</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
        <span class="p">{</span>
            <span class="n">total</span> <span class="p">+=</span> <span class="n">prix</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
            <span class="n">nombreItems</span><span class="p">++;</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   </span><span class="p">{</span><span class="n">produits</span><span class="p">[</span><span class="n">i</span><span class="p">]}</span><span class="s">: </span><span class="p">{</span><span class="n">prix</span><span class="p">[</span><span class="n">i</span><span class="p">]:</span><span class="n">C2</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="p">}</span>
        
        <span class="k">return</span> <span class="k">true</span><span class="p">;</span> <span class="c1">// Succ√®s</span>
    <span class="p">}</span>

    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="c1">// Utilisation avec param√®tres par d√©faut</span>
        <span class="nf">PreparerBoisson</span><span class="p">(</span><span class="s">"Cappuccino"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">();</span>
        
        <span class="c1">// Utilisation avec quelques param√®tres personnalis√©s</span>
        <span class="nf">PreparerBoisson</span><span class="p">(</span><span class="s">"Latte"</span><span class="p">,</span> <span class="s">"Marie"</span><span class="p">,</span> <span class="s">"L"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">();</span>
        
        <span class="c1">// Utilisation avec param√®tres nomm√©s</span>
        <span class="nf">PreparerBoisson</span><span class="p">(</span>
            <span class="n">typeCafe</span><span class="p">:</span> <span class="s">"Espresso"</span><span class="p">,</span>
            <span class="n">client</span><span class="p">:</span> <span class="s">"Paul"</span><span class="p">,</span>
            <span class="n">avecSucre</span><span class="p">:</span> <span class="k">true</span><span class="p">,</span>
            <span class="n">temperature</span><span class="p">:</span> <span class="m">80.0</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">();</span>
        
        <span class="c1">// Test avec param√®tres par r√©f√©rence</span>
        <span class="kt">int</span> <span class="n">stock_cafe</span> <span class="p">=</span> <span class="m">100</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">stock_lait</span> <span class="p">=</span> <span class="m">500</span><span class="p">;</span>
        <span class="nf">MettreAJourStock</span><span class="p">(</span><span class="k">ref</span> <span class="n">stock_cafe</span><span class="p">,</span> <span class="k">ref</span> <span class="n">stock_lait</span><span class="p">,</span> <span class="s">"Cappuccino"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">();</span>
        
        <span class="c1">// Test avec param√®tres de sortie</span>
        <span class="kt">string</span><span class="p">[]</span> <span class="n">commande</span> <span class="p">=</span> <span class="p">{</span><span class="s">"Espresso"</span><span class="p">,</span> <span class="s">"Cappuccino"</span><span class="p">,</span> <span class="s">"Latte"</span><span class="p">};</span>
        <span class="kt">double</span><span class="p">[]</span> <span class="n">prixCommande</span> <span class="p">=</span> <span class="p">{</span><span class="m">2.50</span><span class="p">,</span> <span class="m">4.00</span><span class="p">,</span> <span class="m">4.50</span><span class="p">};</span>
        
        <span class="k">if</span> <span class="p">(</span><span class="nf">CalculerCommande</span><span class="p">(</span><span class="n">commande</span><span class="p">,</span> <span class="n">prixCommande</span><span class="p">,</span> <span class="k">out</span> <span class="kt">double</span> <span class="n">total</span><span class="p">,</span> <span class="k">out</span> <span class="kt">int</span> <span class="n">items</span><span class="p">))</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"üí∞ Total: </span><span class="p">{</span><span class="n">total</span><span class="p">:</span><span class="n">C2</span><span class="p">}</span><span class="s"> pour </span><span class="p">{</span><span class="n">items</span><span class="p">}</span><span class="s"> articles"</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="5-surcharge-de-m√©thodes--plusieurs-versions">5. Surcharge de m√©thodes : Plusieurs versions</h2>

<h3 id="exemple--diff√©rentes-fa√ßons-de-pr√©parer-un-caf√©">Exemple : Diff√©rentes fa√ßons de pr√©parer un caf√©</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">PreparationSurchargee</span>
<span class="p">{</span>
    <span class="c1">// Version simple</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">PreparerCafe</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚òï Pr√©paration d'un caf√© standard"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"   Type: Espresso"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"   Taille: M"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚úÖ Caf√© pr√™t !"</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="c1">// Version avec type</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">PreparerCafe</span><span class="p">(</span><span class="kt">string</span> <span class="n">typeCafe</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚òï Pr√©paration d'un </span><span class="p">{</span><span class="n">typeCafe</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"   Taille: M"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚úÖ Caf√© pr√™t !"</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="c1">// Version avec type et taille</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">PreparerCafe</span><span class="p">(</span><span class="kt">string</span> <span class="n">typeCafe</span><span class="p">,</span> <span class="kt">string</span> <span class="n">taille</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚òï Pr√©paration d'un </span><span class="p">{</span><span class="n">typeCafe</span><span class="p">}</span><span class="s"> taille </span><span class="p">{</span><span class="n">taille</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚úÖ Caf√© pr√™t !"</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="c1">// Version avec type, taille et personnalisation</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">PreparerCafe</span><span class="p">(</span><span class="kt">string</span> <span class="n">typeCafe</span><span class="p">,</span> <span class="kt">string</span> <span class="n">taille</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">avecSucre</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚òï Pr√©paration d'un </span><span class="p">{</span><span class="n">typeCafe</span><span class="p">}</span><span class="s"> taille </span><span class="p">{</span><span class="n">taille</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Sucre: </span><span class="p">{(</span><span class="n">avecSucre</span> <span class="p">?</span> <span class="s">"Avec"</span> <span class="p">:</span> <span class="s">"Sans"</span><span class="p">)}</span><span class="s">"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚úÖ Caf√© pr√™t !"</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="c1">// Version avec quantit√©</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">PreparerCafe</span><span class="p">(</span><span class="kt">string</span> <span class="n">typeCafe</span><span class="p">,</span> <span class="kt">int</span> <span class="n">quantite</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚òï Pr√©paration de </span><span class="p">{</span><span class="n">quantite</span><span class="p">}</span><span class="s">x </span><span class="p">{</span><span class="n">typeCafe</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;=</span> <span class="n">quantite</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Caf√© n¬∞</span><span class="p">{</span><span class="n">i</span><span class="p">}</span><span class="s"> en cours..."</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚úÖ </span><span class="p">{</span><span class="n">quantite</span><span class="p">}</span><span class="s"> caf√©s pr√™ts !"</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="c1">// Version compl√®te avec objet</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">PreparerCafe</span><span class="p">(</span><span class="n">CommandeCafe</span> <span class="n">commande</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚òï Pr√©paration pour </span><span class="p">{</span><span class="n">commande</span><span class="p">.</span><span class="n">Client</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Type: </span><span class="p">{</span><span class="n">commande</span><span class="p">.</span><span class="n">TypeCafe</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Taille: </span><span class="p">{</span><span class="n">commande</span><span class="p">.</span><span class="n">Taille</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Quantit√©: </span><span class="p">{</span><span class="n">commande</span><span class="p">.</span><span class="n">Quantite</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Options: </span><span class="p">{</span><span class="kt">string</span><span class="p">.</span><span class="nf">Join</span><span class="p">(</span><span class="s">", "</span><span class="p">,</span> <span class="n">commande</span><span class="p">.</span><span class="n">Options</span><span class="p">)}</span><span class="s">"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚úÖ Commande compl√®te pr√™te !"</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">class</span> <span class="nc">CommandeCafe</span>
    <span class="p">{</span>
        <span class="k">public</span> <span class="kt">string</span> <span class="n">Client</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">string</span> <span class="n">TypeCafe</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">string</span> <span class="n">Taille</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">int</span> <span class="n">Quantite</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="n">Options</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;();</span>
    <span class="p">}</span>

    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="c1">// Test des diff√©rentes surcharges</span>
        <span class="nf">PreparerCafe</span><span class="p">();</span> <span class="c1">// Version de base</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">();</span>
        
        <span class="nf">PreparerCafe</span><span class="p">(</span><span class="s">"Cappuccino"</span><span class="p">);</span> <span class="c1">// Avec type</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">();</span>
        
        <span class="nf">PreparerCafe</span><span class="p">(</span><span class="s">"Latte"</span><span class="p">,</span> <span class="s">"L"</span><span class="p">);</span> <span class="c1">// Avec type et taille</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">();</span>
        
        <span class="nf">PreparerCafe</span><span class="p">(</span><span class="s">"Espresso"</span><span class="p">,</span> <span class="s">"M"</span><span class="p">,</span> <span class="k">true</span><span class="p">);</span> <span class="c1">// Avec sucre</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">();</span>
        
        <span class="nf">PreparerCafe</span><span class="p">(</span><span class="s">"Americano"</span><span class="p">,</span> <span class="m">3</span><span class="p">);</span> <span class="c1">// Quantit√© multiple</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">();</span>
        
        <span class="c1">// Version avec objet complet</span>
        <span class="kt">var</span> <span class="n">commande</span> <span class="p">=</span> <span class="k">new</span> <span class="n">CommandeCafe</span>
        <span class="p">{</span>
            <span class="n">Client</span> <span class="p">=</span> <span class="s">"Marie"</span><span class="p">,</span>
            <span class="n">TypeCafe</span> <span class="p">=</span> <span class="s">"Cappuccino"</span><span class="p">,</span>
            <span class="n">Taille</span> <span class="p">=</span> <span class="s">"L"</span><span class="p">,</span>
            <span class="n">Quantite</span> <span class="p">=</span> <span class="m">2</span><span class="p">,</span>
            <span class="n">Options</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="p">{</span><span class="s">"Sucre de canne"</span><span class="p">,</span> <span class="s">"Lait d'avoine"</span><span class="p">,</span> <span class="s">"Extra mousse"</span><span class="p">}</span>
        <span class="p">};</span>
        
        <span class="nf">PreparerCafe</span><span class="p">(</span><span class="n">commande</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="6-m√©thodes-r√©cursives--sappeler-soi-m√™me">6. M√©thodes r√©cursives : S‚Äôappeler soi-m√™me</h2>

<h3 id="exemple--calculs-en-cascade">Exemple : Calculs en cascade</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">MethodesRecursives</span>
<span class="p">{</span>
    <span class="c1">// Factorielle - calcul de remise progressive</span>
    <span class="k">public</span> <span class="k">static</span> <span class="kt">int</span> <span class="nf">CalculerRemiseProgressive</span><span class="p">(</span><span class="kt">int</span> <span class="n">nombreVisites</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">nombreVisites</span> <span class="p">&lt;=</span> <span class="m">1</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">return</span> <span class="m">0</span><span class="p">;</span> <span class="c1">// Pas de remise pour 1 visite ou moins</span>
        <span class="p">}</span>
        
        <span class="k">return</span> <span class="m">2</span> <span class="p">+</span> <span class="nf">CalculerRemiseProgressive</span><span class="p">(</span><span class="n">nombreVisites</span> <span class="p">-</span> <span class="m">1</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="c1">// Fibonacci - calcul de popularit√© d'un caf√©</span>
    <span class="k">public</span> <span class="k">static</span> <span class="kt">int</span> <span class="nf">CalculerPopularite</span><span class="p">(</span><span class="kt">int</span> <span class="n">semaine</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">semaine</span> <span class="p">&lt;=</span> <span class="m">1</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">return</span> <span class="m">1</span><span class="p">;</span> <span class="c1">// Popularit√© de base</span>
        <span class="p">}</span>
        
        <span class="k">return</span> <span class="nf">CalculerPopularite</span><span class="p">(</span><span class="n">semaine</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="nf">CalculerPopularite</span><span class="p">(</span><span class="n">semaine</span> <span class="p">-</span> <span class="m">2</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="c1">// Affichage en cascade du menu</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">AfficherSousMenus</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">categories</span><span class="p">,</span> <span class="kt">int</span> <span class="n">niveau</span> <span class="p">=</span> <span class="m">0</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">niveau</span> <span class="p">&gt;=</span> <span class="n">categories</span><span class="p">.</span><span class="n">Length</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">return</span><span class="p">;</span> <span class="c1">// Fin de la r√©cursion</span>
        <span class="p">}</span>
        
        <span class="c1">// Indentation selon le niveau</span>
        <span class="kt">string</span> <span class="n">indentation</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">string</span><span class="p">(</span><span class="sc">' '</span><span class="p">,</span> <span class="n">niveau</span> <span class="p">*</span> <span class="m">2</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"</span><span class="p">{</span><span class="n">indentation</span><span class="p">}</span><span class="s">üìÇ </span><span class="p">{</span><span class="n">categories</span><span class="p">[</span><span class="n">niveau</span><span class="p">]}</span><span class="s">"</span><span class="p">);</span>
        
        <span class="c1">// Appel r√©cursif pour le niveau suivant</span>
        <span class="nf">AfficherSousMenus</span><span class="p">(</span><span class="n">categories</span><span class="p">,</span> <span class="n">niveau</span> <span class="p">+</span> <span class="m">1</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="c1">// Calcul r√©cursif de commandes group√©es</span>
    <span class="k">public</span> <span class="k">static</span> <span class="kt">double</span> <span class="nf">CalculerPrixGroupe</span><span class="p">(</span><span class="n">List</span><span class="p">&lt;</span><span class="kt">double</span><span class="p">&gt;</span> <span class="n">prix</span><span class="p">,</span> <span class="kt">int</span> <span class="n">index</span> <span class="p">=</span> <span class="m">0</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">index</span> <span class="p">&gt;=</span> <span class="n">prix</span><span class="p">.</span><span class="n">Count</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">return</span> <span class="m">0</span><span class="p">;</span> <span class="c1">// Fin de la liste</span>
        <span class="p">}</span>
        
        <span class="c1">// Prix actuel + prix des √©l√©ments suivants</span>
        <span class="k">return</span> <span class="n">prix</span><span class="p">[</span><span class="n">index</span><span class="p">]</span> <span class="p">+</span> <span class="nf">CalculerPrixGroupe</span><span class="p">(</span><span class="n">prix</span><span class="p">,</span> <span class="n">index</span> <span class="p">+</span> <span class="m">1</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="c1">// Test remise progressive</span>
        <span class="kt">int</span> <span class="n">visites</span> <span class="p">=</span> <span class="m">5</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">remise</span> <span class="p">=</span> <span class="nf">CalculerRemiseProgressive</span><span class="p">(</span><span class="n">visites</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"Remise pour </span><span class="p">{</span><span class="n">visites</span><span class="p">}</span><span class="s"> visites: </span><span class="p">{</span><span class="n">remise</span><span class="p">}</span><span class="s">%"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">();</span>
        
        <span class="c1">// Test popularit√©</span>
        <span class="kt">int</span> <span class="n">semaine</span> <span class="p">=</span> <span class="m">6</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">popularite</span> <span class="p">=</span> <span class="nf">CalculerPopularite</span><span class="p">(</span><span class="n">semaine</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"Popularit√© semaine </span><span class="p">{</span><span class="n">semaine</span><span class="p">}</span><span class="s">: </span><span class="p">{</span><span class="n">popularite</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">();</span>
        
        <span class="c1">// Test menu en cascade</span>
        <span class="kt">string</span><span class="p">[]</span> <span class="n">menus</span> <span class="p">=</span> <span class="p">{</span><span class="s">"Boissons"</span><span class="p">,</span> <span class="s">"Caf√©s"</span><span class="p">,</span> <span class="s">"Espressos"</span><span class="p">,</span> <span class="s">"Simple"</span><span class="p">,</span> <span class="s">"Double"</span><span class="p">};</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"Menu hi√©rarchique:"</span><span class="p">);</span>
        <span class="nf">AfficherSousMenus</span><span class="p">(</span><span class="n">menus</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">();</span>
        
        <span class="c1">// Test prix group√©</span>
        <span class="kt">var</span> <span class="n">prixCommande</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">double</span><span class="p">&gt;</span> <span class="p">{</span><span class="m">2.50</span><span class="p">,</span> <span class="m">4.00</span><span class="p">,</span> <span class="m">4.50</span><span class="p">,</span> <span class="m">3.00</span><span class="p">};</span>
        <span class="kt">double</span> <span class="n">total</span> <span class="p">=</span> <span class="nf">CalculerPrixGroupe</span><span class="p">(</span><span class="n">prixCommande</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"Total commande groupe: </span><span class="p">{</span><span class="n">total</span><span class="p">:</span><span class="n">C2</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="7-m√©thodes-dextension--√©tendre-les-types-existants">7. M√©thodes d‚Äôextension : √âtendre les types existants</h2>

<h3 id="exemple--extensions-pour-les-cha√Ænes-de-caf√©">Exemple : Extensions pour les cha√Ænes de caf√©</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>

<span class="c1">// Les m√©thodes d'extension doivent √™tre dans une classe statique</span>
<span class="k">public</span> <span class="k">static</span> <span class="k">class</span> <span class="nc">ExtensionsCafe</span>
<span class="p">{</span>
    <span class="c1">// Extension pour formater les noms de caf√©</span>
    <span class="k">public</span> <span class="k">static</span> <span class="kt">string</span> <span class="nf">FormatNomCafe</span><span class="p">(</span><span class="k">this</span> <span class="kt">string</span> <span class="n">nom</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="kt">string</span><span class="p">.</span><span class="nf">IsNullOrWhiteSpace</span><span class="p">(</span><span class="n">nom</span><span class="p">))</span>
            <span class="k">return</span> <span class="s">"‚òï Caf√© sans nom"</span><span class="p">;</span>
        
        <span class="k">return</span> <span class="s">$"‚òï </span><span class="p">{</span><span class="n">nom</span><span class="p">.</span><span class="nf">Trim</span><span class="p">().</span><span class="nf">ToUpperInvariant</span><span class="p">()}</span><span class="s">"</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="c1">// Extension pour v√©rifier si c'est un caf√© chaud</span>
    <span class="k">public</span> <span class="k">static</span> <span class="kt">bool</span> <span class="nf">EstCafeChaud</span><span class="p">(</span><span class="k">this</span> <span class="kt">string</span> <span class="n">typeCafe</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="kt">string</span><span class="p">[]</span> <span class="n">cafesChauds</span> <span class="p">=</span> <span class="p">{</span><span class="s">"espresso"</span><span class="p">,</span> <span class="s">"cappuccino"</span><span class="p">,</span> <span class="s">"latte"</span><span class="p">,</span> <span class="s">"americano"</span><span class="p">,</span> <span class="s">"macchiato"</span><span class="p">};</span>
        <span class="k">return</span> <span class="n">Array</span><span class="p">.</span><span class="nf">Exists</span><span class="p">(</span><span class="n">cafesChauds</span><span class="p">,</span> <span class="n">cafe</span> <span class="p">=&gt;</span> 
            <span class="n">cafe</span><span class="p">.</span><span class="nf">Equals</span><span class="p">(</span><span class="n">typeCafe</span><span class="p">,</span> <span class="n">StringComparison</span><span class="p">.</span><span class="n">OrdinalIgnoreCase</span><span class="p">));</span>
    <span class="p">}</span>

    <span class="c1">// Extension pour calculer les calories approximatives</span>
    <span class="k">public</span> <span class="k">static</span> <span class="kt">int</span> <span class="nf">CalculerCalories</span><span class="p">(</span><span class="k">this</span> <span class="kt">string</span> <span class="n">typeCafe</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="n">typeCafe</span><span class="p">.</span><span class="nf">ToLower</span><span class="p">()</span> <span class="k">switch</span>
        <span class="p">{</span>
            <span class="s">"espresso"</span> <span class="p">=&gt;</span> <span class="m">5</span><span class="p">,</span>
            <span class="s">"americano"</span> <span class="p">=&gt;</span> <span class="m">10</span><span class="p">,</span>
            <span class="s">"cappuccino"</span> <span class="p">=&gt;</span> <span class="m">80</span><span class="p">,</span>
            <span class="s">"latte"</span> <span class="p">=&gt;</span> <span class="m">120</span><span class="p">,</span>
            <span class="s">"macchiato"</span> <span class="p">=&gt;</span> <span class="m">90</span><span class="p">,</span>
            <span class="s">"mocha"</span> <span class="p">=&gt;</span> <span class="m">200</span><span class="p">,</span>
            <span class="n">_</span> <span class="p">=&gt;</span> <span class="m">50</span> <span class="c1">// Valeur par d√©faut</span>
        <span class="p">};</span>
    <span class="p">}</span>

    <span class="c1">// Extension pour obtenir le temps de pr√©paration</span>
    <span class="k">public</span> <span class="k">static</span> <span class="n">TimeSpan</span> <span class="nf">ObtenirTempsPreparation</span><span class="p">(</span><span class="k">this</span> <span class="kt">string</span> <span class="n">typeCafe</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="n">typeCafe</span><span class="p">.</span><span class="nf">ToLower</span><span class="p">()</span> <span class="k">switch</span>
        <span class="p">{</span>
            <span class="s">"espresso"</span> <span class="p">=&gt;</span> <span class="n">TimeSpan</span><span class="p">.</span><span class="nf">FromSeconds</span><span class="p">(</span><span class="m">30</span><span class="p">),</span>
            <span class="s">"americano"</span> <span class="p">=&gt;</span> <span class="n">TimeSpan</span><span class="p">.</span><span class="nf">FromSeconds</span><span class="p">(</span><span class="m">45</span><span class="p">),</span>
            <span class="s">"cappuccino"</span> <span class="p">=&gt;</span> <span class="n">TimeSpan</span><span class="p">.</span><span class="nf">FromMinutes</span><span class="p">(</span><span class="m">2</span><span class="p">),</span>
            <span class="s">"latte"</span> <span class="p">=&gt;</span> <span class="n">TimeSpan</span><span class="p">.</span><span class="nf">FromSeconds</span><span class="p">(</span><span class="m">90</span><span class="p">),</span>
            <span class="s">"macchiato"</span> <span class="p">=&gt;</span> <span class="n">TimeSpan</span><span class="p">.</span><span class="nf">FromSeconds</span><span class="p">(</span><span class="m">75</span><span class="p">),</span>
            <span class="n">_</span> <span class="p">=&gt;</span> <span class="n">TimeSpan</span><span class="p">.</span><span class="nf">FromMinutes</span><span class="p">(</span><span class="m">1</span><span class="p">)</span>
        <span class="p">};</span>
    <span class="p">}</span>

    <span class="c1">// Extension pour List&lt;string&gt; - formater une commande</span>
    <span class="k">public</span> <span class="k">static</span> <span class="kt">string</span> <span class="nf">FormatCommande</span><span class="p">(</span><span class="k">this</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="n">items</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">items</span><span class="p">.</span><span class="n">Count</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span>
            <span class="k">return</span> <span class="s">"Commande vide"</span><span class="p">;</span>
        
        <span class="k">return</span> <span class="s">$"Commande: </span><span class="p">{</span><span class="kt">string</span><span class="p">.</span><span class="nf">Join</span><span class="p">(</span><span class="s">", "</span><span class="p">,</span> <span class="n">items</span><span class="p">)}</span><span class="s"> (</span><span class="p">{</span><span class="n">items</span><span class="p">.</span><span class="n">Count</span><span class="p">}</span><span class="s"> article</span><span class="p">{(</span><span class="n">items</span><span class="p">.</span><span class="n">Count</span> <span class="p">&gt;</span> <span class="m">1</span> <span class="p">?</span> <span class="s">"s"</span> <span class="p">:</span> <span class="s">""</span><span class="p">)}</span><span class="s">)"</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="k">class</span> <span class="nc">UtilisationExtensions</span>
<span class="p">{</span>
    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="c1">// Test des extensions sur string</span>
        <span class="kt">string</span> <span class="n">cafe1</span> <span class="p">=</span> <span class="s">"cappuccino"</span><span class="p">;</span>
        <span class="kt">string</span> <span class="n">cafe2</span> <span class="p">=</span> <span class="s">"  LATTE  "</span><span class="p">;</span>
        <span class="kt">string</span> <span class="n">cafe3</span> <span class="p">=</span> <span class="s">""</span><span class="p">;</span>

        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"=== EXTENSIONS DE CHA√éNES ==="</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="n">cafe1</span><span class="p">.</span><span class="nf">FormatNomCafe</span><span class="p">());</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="n">cafe2</span><span class="p">.</span><span class="nf">FormatNomCafe</span><span class="p">());</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="n">cafe3</span><span class="p">.</span><span class="nf">FormatNomCafe</span><span class="p">());</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">();</span>

        <span class="c1">// Test est caf√© chaud</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"=== V√âRIFICATION CAF√â CHAUD ==="</span><span class="p">);</span>
        <span class="kt">string</span><span class="p">[]</span> <span class="n">cafes</span> <span class="p">=</span> <span class="p">{</span><span class="s">"Espresso"</span><span class="p">,</span> <span class="s">"Iced Coffee"</span><span class="p">,</span> <span class="s">"Cappuccino"</span><span class="p">,</span> <span class="s">"Smoothie"</span><span class="p">};</span>
        <span class="k">foreach</span> <span class="p">(</span><span class="kt">string</span> <span class="n">cafe</span> <span class="k">in</span> <span class="n">cafes</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">bool</span> <span class="n">chaud</span> <span class="p">=</span> <span class="n">cafe</span><span class="p">.</span><span class="nf">EstCafeChaud</span><span class="p">();</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"</span><span class="p">{</span><span class="n">cafe</span><span class="p">}</span><span class="s">: </span><span class="p">{(</span><span class="n">chaud</span> <span class="p">?</span> <span class="s">"üî• Chaud"</span> <span class="p">:</span> <span class="s">"üßä Froid"</span><span class="p">)}</span><span class="s">"</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">();</span>

        <span class="c1">// Test calories et temps</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"=== INFORMATIONS NUTRITIONNELLES ==="</span><span class="p">);</span>
        <span class="kt">string</span><span class="p">[]</span> <span class="n">typesCafes</span> <span class="p">=</span> <span class="p">{</span><span class="s">"Espresso"</span><span class="p">,</span> <span class="s">"Cappuccino"</span><span class="p">,</span> <span class="s">"Latte"</span><span class="p">,</span> <span class="s">"Mocha"</span><span class="p">};</span>
        <span class="k">foreach</span> <span class="p">(</span><span class="kt">string</span> <span class="n">type</span> <span class="k">in</span> <span class="n">typesCafes</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">int</span> <span class="n">calories</span> <span class="p">=</span> <span class="n">type</span><span class="p">.</span><span class="nf">CalculerCalories</span><span class="p">();</span>
            <span class="n">TimeSpan</span> <span class="n">temps</span> <span class="p">=</span> <span class="n">type</span><span class="p">.</span><span class="nf">ObtenirTempsPreparation</span><span class="p">();</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"</span><span class="p">{</span><span class="n">type</span><span class="p">}</span><span class="s">: </span><span class="p">{</span><span class="n">calories</span><span class="p">}</span><span class="s"> cal, </span><span class="p">{</span><span class="n">temps</span><span class="p">.</span><span class="n">TotalSeconds</span><span class="p">}</span><span class="s">s de pr√©paration"</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">();</span>

        <span class="c1">// Test extension sur List</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"=== FORMATAGE DE COMMANDES ==="</span><span class="p">);</span>
        <span class="kt">var</span> <span class="n">commande1</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="p">{</span><span class="s">"Espresso"</span><span class="p">,</span> <span class="s">"Cappuccino"</span><span class="p">};</span>
        <span class="kt">var</span> <span class="n">commande2</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="p">{</span><span class="s">"Latte"</span><span class="p">,</span> <span class="s">"Americano"</span><span class="p">,</span> <span class="s">"Macchiato"</span><span class="p">};</span>
        <span class="kt">var</span> <span class="n">commande3</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;();</span>

        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="n">commande1</span><span class="p">.</span><span class="nf">FormatCommande</span><span class="p">());</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="n">commande2</span><span class="p">.</span><span class="nf">FormatCommande</span><span class="p">());</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="n">commande3</span><span class="p">.</span><span class="nf">FormatCommande</span><span class="p">());</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="8-exemple-complet--syst√®me-de-caf√©-avec-m√©thodes">8. Exemple complet : Syst√®me de caf√© avec m√©thodes</h2>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Linq</span><span class="p">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">SystemeCafeComplet</span>
<span class="p">{</span>
    <span class="c1">// Propri√©t√©s de la classe</span>
    <span class="k">private</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">double</span><span class="p">&gt;</span> <span class="n">cartePrix</span><span class="p">;</span>
    <span class="k">private</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">int</span><span class="p">&gt;</span> <span class="n">stock</span><span class="p">;</span>
    <span class="k">private</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">Commande</span><span class="p">&gt;</span> <span class="n">commandesDuJour</span><span class="p">;</span>

    <span class="c1">// Constructeur</span>
    <span class="k">public</span> <span class="nf">SystemeCafeComplet</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nf">InitialiserDonnees</span><span class="p">();</span>
        <span class="n">commandesDuJour</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">Commande</span><span class="p">&gt;();</span>
    <span class="p">}</span>

    <span class="c1">// M√©thode d'initialisation priv√©e</span>
    <span class="k">private</span> <span class="k">void</span> <span class="nf">InitialiserDonnees</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="n">cartePrix</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">double</span><span class="p">&gt;</span>
        <span class="p">{</span>
            <span class="p">{</span><span class="s">"Espresso"</span><span class="p">,</span> <span class="m">2.50</span><span class="p">},</span>
            <span class="p">{</span><span class="s">"Cappuccino"</span><span class="p">,</span> <span class="m">4.00</span><span class="p">},</span>
            <span class="p">{</span><span class="s">"Latte"</span><span class="p">,</span> <span class="m">4.50</span><span class="p">},</span>
            <span class="p">{</span><span class="s">"Americano"</span><span class="p">,</span> <span class="m">3.00</span><span class="p">},</span>
            <span class="p">{</span><span class="s">"Macchiato"</span><span class="p">,</span> <span class="m">3.80</span><span class="p">}</span>
        <span class="p">};</span>

        <span class="n">stock</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">int</span><span class="p">&gt;</span>
        <span class="p">{</span>
            <span class="p">{</span><span class="s">"Espresso"</span><span class="p">,</span> <span class="m">20</span><span class="p">},</span>
            <span class="p">{</span><span class="s">"Cappuccino"</span><span class="p">,</span> <span class="m">15</span><span class="p">},</span>
            <span class="p">{</span><span class="s">"Latte"</span><span class="p">,</span> <span class="m">12</span><span class="p">},</span>
            <span class="p">{</span><span class="s">"Americano"</span><span class="p">,</span> <span class="m">18</span><span class="p">},</span>
            <span class="p">{</span><span class="s">"Macchiato"</span><span class="p">,</span> <span class="m">10</span><span class="p">}</span>
        <span class="p">};</span>
    <span class="p">}</span>

    <span class="c1">// M√©thode publique pour afficher le menu</span>
    <span class="k">public</span> <span class="k">void</span> <span class="nf">AfficherMenu</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚òï === MENU DU CAF√â ==="</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"Produit      | Prix   | Stock"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"-------------|--------|-------"</span><span class="p">);</span>
        
        <span class="k">foreach</span> <span class="p">(</span><span class="kt">var</span> <span class="n">item</span> <span class="k">in</span> <span class="n">cartePrix</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">string</span> <span class="n">produit</span> <span class="p">=</span> <span class="n">item</span><span class="p">.</span><span class="n">Key</span><span class="p">;</span>
            <span class="kt">double</span> <span class="n">prix</span> <span class="p">=</span> <span class="n">item</span><span class="p">.</span><span class="n">Value</span><span class="p">;</span>
            <span class="kt">int</span> <span class="n">stockProduit</span> <span class="p">=</span> <span class="n">stock</span><span class="p">.</span><span class="nf">ContainsKey</span><span class="p">(</span><span class="n">produit</span><span class="p">)</span> <span class="p">?</span> <span class="n">stock</span><span class="p">[</span><span class="n">produit</span><span class="p">]</span> <span class="p">:</span> <span class="m">0</span><span class="p">;</span>
            <span class="kt">string</span> <span class="n">disponibilite</span> <span class="p">=</span> <span class="n">stockProduit</span> <span class="p">&gt;</span> <span class="m">0</span> <span class="p">?</span> <span class="s">"‚úÖ"</span> <span class="p">:</span> <span class="s">"‚ùå"</span><span class="p">;</span>
            
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"</span><span class="p">{</span><span class="n">produit</span><span class="p">,-</span><span class="m">12</span><span class="p">}</span><span class="s"> | </span><span class="p">{</span><span class="n">prix</span><span class="p">,</span><span class="m">6</span><span class="p">:</span><span class="n">C2</span><span class="p">}</span><span class="s"> | </span><span class="p">{</span><span class="n">stockProduit</span><span class="p">,</span><span class="m">3</span><span class="p">}</span><span class="s"> </span><span class="p">{</span><span class="n">disponibilite</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">();</span>
    <span class="p">}</span>

    <span class="c1">// M√©thode de validation priv√©e</span>
    <span class="k">private</span> <span class="kt">bool</span> <span class="nf">ValiderCommande</span><span class="p">(</span><span class="kt">string</span> <span class="n">produit</span><span class="p">,</span> <span class="kt">int</span> <span class="n">quantite</span><span class="p">,</span> <span class="k">out</span> <span class="kt">string</span> <span class="n">erreur</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">erreur</span> <span class="p">=</span> <span class="s">""</span><span class="p">;</span>

        <span class="k">if</span> <span class="p">(!</span><span class="n">cartePrix</span><span class="p">.</span><span class="nf">ContainsKey</span><span class="p">(</span><span class="n">produit</span><span class="p">))</span>
        <span class="p">{</span>
            <span class="n">erreur</span> <span class="p">=</span> <span class="s">$"Produit '</span><span class="p">{</span><span class="n">produit</span><span class="p">}</span><span class="s">' non disponible"</span><span class="p">;</span>
            <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="k">if</span> <span class="p">(</span><span class="n">quantite</span> <span class="p">&lt;=</span> <span class="m">0</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">erreur</span> <span class="p">=</span> <span class="s">"La quantit√© doit √™tre positive"</span><span class="p">;</span>
            <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="k">if</span> <span class="p">(!</span><span class="n">stock</span><span class="p">.</span><span class="nf">ContainsKey</span><span class="p">(</span><span class="n">produit</span><span class="p">)</span> <span class="p">||</span> <span class="n">stock</span><span class="p">[</span><span class="n">produit</span><span class="p">]</span> <span class="p">&lt;</span> <span class="n">quantite</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">erreur</span> <span class="p">=</span> <span class="s">$"Stock insuffisant pour </span><span class="p">{</span><span class="n">produit</span><span class="p">}</span><span class="s">"</span><span class="p">;</span>
            <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="c1">// M√©thode de calcul priv√©e</span>
    <span class="k">private</span> <span class="kt">double</span> <span class="nf">CalculerTotal</span><span class="p">(</span><span class="kt">string</span> <span class="n">produit</span><span class="p">,</span> <span class="kt">int</span> <span class="n">quantite</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">clientVIP</span> <span class="p">=</span> <span class="k">false</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="kt">double</span> <span class="n">prixUnitaire</span> <span class="p">=</span> <span class="n">cartePrix</span><span class="p">[</span><span class="n">produit</span><span class="p">];</span>
        <span class="kt">double</span> <span class="n">total</span> <span class="p">=</span> <span class="n">prixUnitaire</span> <span class="p">*</span> <span class="n">quantite</span><span class="p">;</span>
        
        <span class="c1">// Remise VIP</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">clientVIP</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">total</span> <span class="p">*=</span> <span class="m">0.9</span><span class="p">;</span> <span class="c1">// 10% de remise</span>
        <span class="p">}</span>
        
        <span class="k">return</span> <span class="n">total</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="c1">// M√©thode publique principale</span>
    <span class="k">public</span> <span class="kt">bool</span> <span class="nf">PasserCommande</span><span class="p">(</span><span class="kt">string</span> <span class="n">client</span><span class="p">,</span> <span class="kt">string</span> <span class="n">produit</span><span class="p">,</span> <span class="kt">int</span> <span class="n">quantite</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">clientVIP</span> <span class="p">=</span> <span class="k">false</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"üîÑ Traitement commande pour </span><span class="p">{</span><span class="n">client</span><span class="p">}</span><span class="s">..."</span><span class="p">);</span>
        
        <span class="c1">// Validation</span>
        <span class="k">if</span> <span class="p">(!</span><span class="nf">ValiderCommande</span><span class="p">(</span><span class="n">produit</span><span class="p">,</span> <span class="n">quantite</span><span class="p">,</span> <span class="k">out</span> <span class="kt">string</span> <span class="n">erreur</span><span class="p">))</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚ùå Erreur: </span><span class="p">{</span><span class="n">erreur</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
            <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="c1">// Calcul</span>
        <span class="kt">double</span> <span class="n">total</span> <span class="p">=</span> <span class="nf">CalculerTotal</span><span class="p">(</span><span class="n">produit</span><span class="p">,</span> <span class="n">quantite</span><span class="p">,</span> <span class="n">clientVIP</span><span class="p">);</span>
        
        <span class="c1">// Cr√©ation de la commande</span>
        <span class="kt">var</span> <span class="n">commande</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Commande</span>
        <span class="p">{</span>
            <span class="n">Client</span> <span class="p">=</span> <span class="n">client</span><span class="p">,</span>
            <span class="n">Produit</span> <span class="p">=</span> <span class="n">produit</span><span class="p">,</span>
            <span class="n">Quantite</span> <span class="p">=</span> <span class="n">quantite</span><span class="p">,</span>
            <span class="n">Total</span> <span class="p">=</span> <span class="n">total</span><span class="p">,</span>
            <span class="n">Heure</span> <span class="p">=</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">,</span>
            <span class="n">EstVIP</span> <span class="p">=</span> <span class="n">clientVIP</span>
        <span class="p">};</span>

        <span class="c1">// Mise √† jour du stock</span>
        <span class="n">stock</span><span class="p">[</span><span class="n">produit</span><span class="p">]</span> <span class="p">-=</span> <span class="n">quantite</span><span class="p">;</span>
        
        <span class="c1">// Ajout √† l'historique</span>
        <span class="n">commandesDuJour</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="n">commande</span><span class="p">);</span>

        <span class="c1">// Confirmation</span>
        <span class="nf">AfficherConfirmationCommande</span><span class="p">(</span><span class="n">commande</span><span class="p">);</span>
        <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="c1">// M√©thode d'affichage priv√©e</span>
    <span class="k">private</span> <span class="k">void</span> <span class="nf">AfficherConfirmationCommande</span><span class="p">(</span><span class="n">Commande</span> <span class="n">commande</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚úÖ Commande confirm√©e !"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Client: </span><span class="p">{</span><span class="n">commande</span><span class="p">.</span><span class="n">Client</span><span class="p">}</span><span class="s"> </span><span class="p">{(</span><span class="n">commande</span><span class="p">.</span><span class="n">EstVIP</span> <span class="p">?</span> <span class="s">"‚≠ê"</span> <span class="p">:</span> <span class="s">""</span><span class="p">)}</span><span class="s">"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Produit: </span><span class="p">{</span><span class="n">commande</span><span class="p">.</span><span class="n">Quantite</span><span class="p">}</span><span class="s">x </span><span class="p">{</span><span class="n">commande</span><span class="p">.</span><span class="n">Produit</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Total: </span><span class="p">{</span><span class="n">commande</span><span class="p">.</span><span class="n">Total</span><span class="p">:</span><span class="n">C2</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Heure: </span><span class="p">{</span><span class="n">commande</span><span class="p">.</span><span class="n">Heure</span><span class="p">:</span><span class="n">HH</span><span class="p">:</span><span class="n">mm</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">();</span>
    <span class="p">}</span>

    <span class="c1">// M√©thode d'analyse avec LINQ</span>
    <span class="k">public</span> <span class="k">void</span> <span class="nf">AfficherStatistiques</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">if</span> <span class="p">(!</span><span class="n">commandesDuJour</span><span class="p">.</span><span class="nf">Any</span><span class="p">())</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"üìä Aucune commande aujourd'hui"</span><span class="p">);</span>
            <span class="k">return</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"üìä === STATISTIQUES DU JOUR ==="</span><span class="p">);</span>
        
        <span class="c1">// Chiffre d'affaires</span>
        <span class="kt">double</span> <span class="n">totalCA</span> <span class="p">=</span> <span class="n">commandesDuJour</span><span class="p">.</span><span class="nf">Sum</span><span class="p">(</span><span class="n">c</span> <span class="p">=&gt;</span> <span class="n">c</span><span class="p">.</span><span class="n">Total</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"üí∞ Chiffre d'affaires: </span><span class="p">{</span><span class="n">totalCA</span><span class="p">:</span><span class="n">C2</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        
        <span class="c1">// Nombre de commandes</span>
        <span class="kt">int</span> <span class="n">nbCommandes</span> <span class="p">=</span> <span class="n">commandesDuJour</span><span class="p">.</span><span class="n">Count</span><span class="p">;</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"üìã Nombre de commandes: </span><span class="p">{</span><span class="n">nbCommandes</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        
        <span class="c1">// Panier moyen</span>
        <span class="kt">double</span> <span class="n">panierMoyen</span> <span class="p">=</span> <span class="n">totalCA</span> <span class="p">/</span> <span class="n">nbCommandes</span><span class="p">;</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"üõí Panier moyen: </span><span class="p">{</span><span class="n">panierMoyen</span><span class="p">:</span><span class="n">C2</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        
        <span class="c1">// Produit le plus vendu</span>
        <span class="kt">var</span> <span class="n">produitPopulaire</span> <span class="p">=</span> <span class="n">commandesDuJour</span>
            <span class="p">.</span><span class="nf">GroupBy</span><span class="p">(</span><span class="n">c</span> <span class="p">=&gt;</span> <span class="n">c</span><span class="p">.</span><span class="n">Produit</span><span class="p">)</span>
            <span class="p">.</span><span class="nf">OrderByDescending</span><span class="p">(</span><span class="n">g</span> <span class="p">=&gt;</span> <span class="n">g</span><span class="p">.</span><span class="nf">Sum</span><span class="p">(</span><span class="n">c</span> <span class="p">=&gt;</span> <span class="n">c</span><span class="p">.</span><span class="n">Quantite</span><span class="p">))</span>
            <span class="p">.</span><span class="nf">First</span><span class="p">();</span>
        
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"üèÜ Produit populaire: </span><span class="p">{</span><span class="n">produitPopulaire</span><span class="p">.</span><span class="n">Key</span><span class="p">}</span><span class="s"> (</span><span class="p">{</span><span class="n">produitPopulaire</span><span class="p">.</span><span class="nf">Sum</span><span class="p">(</span><span class="n">c</span> <span class="p">=&gt;</span> <span class="n">c</span><span class="p">.</span><span class="n">Quantite</span><span class="p">)}</span><span class="s"> unit√©s)"</span><span class="p">);</span>
        
        <span class="c1">// Clients VIP</span>
        <span class="kt">int</span> <span class="n">clientsVIP</span> <span class="p">=</span> <span class="n">commandesDuJour</span><span class="p">.</span><span class="nf">Count</span><span class="p">(</span><span class="n">c</span> <span class="p">=&gt;</span> <span class="n">c</span><span class="p">.</span><span class="n">EstVIP</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚≠ê Commandes VIP: </span><span class="p">{</span><span class="n">clientsVIP</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">();</span>
    <span class="p">}</span>

    <span class="c1">// M√©thode utilitaire publique</span>
    <span class="k">public</span> <span class="k">void</span> <span class="nf">ReinitialiserStock</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"üì¶ R√©approvisionnement du stock..."</span><span class="p">);</span>
        
        <span class="k">foreach</span> <span class="p">(</span><span class="kt">var</span> <span class="n">produit</span> <span class="k">in</span> <span class="n">cartePrix</span><span class="p">.</span><span class="n">Keys</span><span class="p">.</span><span class="nf">ToList</span><span class="p">())</span>
        <span class="p">{</span>
            <span class="kt">int</span> <span class="n">ancienStock</span> <span class="p">=</span> <span class="n">stock</span><span class="p">[</span><span class="n">produit</span><span class="p">];</span>
            <span class="n">stock</span><span class="p">[</span><span class="n">produit</span><span class="p">]</span> <span class="p">=</span> <span class="m">20</span><span class="p">;</span> <span class="c1">// Stock standard</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   </span><span class="p">{</span><span class="n">produit</span><span class="p">}</span><span class="s">: </span><span class="p">{</span><span class="n">ancienStock</span><span class="p">}</span><span class="s"> ‚Üí </span><span class="p">{</span><span class="n">stock</span><span class="p">[</span><span class="n">produit</span><span class="p">]}</span><span class="s">"</span><span class="p">);</span>
        <span class="p">}</span>
        
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚úÖ Stock r√©approvisionn√© !"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">();</span>
    <span class="p">}</span>

    <span class="c1">// Classe interne pour les commandes</span>
    <span class="k">public</span> <span class="k">class</span> <span class="nc">Commande</span>
    <span class="p">{</span>
        <span class="k">public</span> <span class="kt">string</span> <span class="n">Client</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">string</span> <span class="n">Produit</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">int</span> <span class="n">Quantite</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">double</span> <span class="n">Total</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="n">DateTime</span> <span class="n">Heure</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">bool</span> <span class="n">EstVIP</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="p">}</span>

    <span class="c1">// M√©thode principale pour tester</span>
    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="kt">var</span> <span class="n">cafe</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">SystemeCafeComplet</span><span class="p">();</span>
        
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚òï === SYST√àME DE CAF√â COMPLET ===\n"</span><span class="p">);</span>
        
        <span class="c1">// Afficher le menu initial</span>
        <span class="n">cafe</span><span class="p">.</span><span class="nf">AfficherMenu</span><span class="p">();</span>
        
        <span class="c1">// Simuler des commandes</span>
        <span class="n">cafe</span><span class="p">.</span><span class="nf">PasserCommande</span><span class="p">(</span><span class="s">"Marie"</span><span class="p">,</span> <span class="s">"Cappuccino"</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="k">true</span><span class="p">);</span>  <span class="c1">// VIP</span>
        <span class="n">cafe</span><span class="p">.</span><span class="nf">PasserCommande</span><span class="p">(</span><span class="s">"Paul"</span><span class="p">,</span> <span class="s">"Espresso"</span><span class="p">,</span> <span class="m">1</span><span class="p">);</span>
        <span class="n">cafe</span><span class="p">.</span><span class="nf">PasserCommande</span><span class="p">(</span><span class="s">"Julie"</span><span class="p">,</span> <span class="s">"Latte"</span><span class="p">,</span> <span class="m">3</span><span class="p">);</span>
        <span class="n">cafe</span><span class="p">.</span><span class="nf">PasserCommande</span><span class="p">(</span><span class="s">"Tom"</span><span class="p">,</span> <span class="s">"Americano"</span><span class="p">,</span> <span class="m">1</span><span class="p">);</span>
        <span class="n">cafe</span><span class="p">.</span><span class="nf">PasserCommande</span><span class="p">(</span><span class="s">"Emma"</span><span class="p">,</span> <span class="s">"Macchiato"</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="k">true</span><span class="p">);</span>    <span class="c1">// VIP</span>
        
        <span class="c1">// Commande qui √©choue</span>
        <span class="n">cafe</span><span class="p">.</span><span class="nf">PasserCommande</span><span class="p">(</span><span class="s">"Alex"</span><span class="p">,</span> <span class="s">"Cappuccino"</span><span class="p">,</span> <span class="m">20</span><span class="p">);</span>        <span class="c1">// Stock insuffisant</span>
        
        <span class="c1">// Afficher les statistiques</span>
        <span class="n">cafe</span><span class="p">.</span><span class="nf">AfficherStatistiques</span><span class="p">();</span>
        
        <span class="c1">// Afficher le stock actuel</span>
        <span class="n">cafe</span><span class="p">.</span><span class="nf">AfficherMenu</span><span class="p">();</span>
        
        <span class="c1">// R√©approvisionner</span>
        <span class="n">cafe</span><span class="p">.</span><span class="nf">ReinitialiserStock</span><span class="p">();</span>
        <span class="n">cafe</span><span class="p">.</span><span class="nf">AfficherMenu</span><span class="p">();</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="9-bonnes-pratiques-pour-les-m√©thodes">9. Bonnes pratiques pour les m√©thodes</h2>

<h3 id="-nommage-clair-et-expressif">‚úÖ Nommage clair et expressif</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// ‚úÖ Bon - nom explicite</span>
<span class="k">public</span> <span class="k">static</span> <span class="kt">double</span> <span class="nf">CalculerPrixAvecRemise</span><span class="p">(</span><span class="kt">double</span> <span class="n">prixBase</span><span class="p">,</span> <span class="kt">double</span> <span class="n">tauxRemise</span><span class="p">)</span>

<span class="c1">// ‚ùå √âviter - nom peu clair</span>
<span class="k">public</span> <span class="k">static</span> <span class="kt">double</span> <span class="nf">Calc</span><span class="p">(</span><span class="kt">double</span> <span class="n">p</span><span class="p">,</span> <span class="kt">double</span> <span class="n">r</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="-une-responsabilit√©-par-m√©thode">‚úÖ Une responsabilit√© par m√©thode</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// ‚úÖ Bon - une seule responsabilit√©</span>
<span class="k">public</span> <span class="k">static</span> <span class="kt">double</span> <span class="nf">CalculerPrix</span><span class="p">(</span><span class="kt">string</span> <span class="n">produit</span><span class="p">,</span> <span class="kt">int</span> <span class="n">quantite</span><span class="p">)</span>
<span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">AfficherCommande</span><span class="p">(</span><span class="n">Commande</span> <span class="n">commande</span><span class="p">)</span>
<span class="k">public</span> <span class="k">static</span> <span class="kt">bool</span> <span class="nf">ValiderStock</span><span class="p">(</span><span class="kt">string</span> <span class="n">produit</span><span class="p">,</span> <span class="kt">int</span> <span class="n">quantite</span><span class="p">)</span>

<span class="c1">// ‚ùå √âviter - trop de responsabilit√©s</span>
<span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">TraiterTout</span><span class="p">(</span><span class="kt">string</span> <span class="n">produit</span><span class="p">,</span> <span class="kt">int</span> <span class="n">quantite</span><span class="p">,</span> <span class="kt">string</span> <span class="n">client</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// Calcul + Affichage + Validation + Stockage = trop !</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="-param√®tres-raisonnables">‚úÖ Param√®tres raisonnables</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// ‚úÖ Bon - param√®tres clairs</span>
<span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">CreerCommande</span><span class="p">(</span><span class="kt">string</span> <span class="n">client</span><span class="p">,</span> <span class="kt">string</span> <span class="n">produit</span><span class="p">,</span> <span class="kt">int</span> <span class="n">quantite</span><span class="p">)</span>

<span class="c1">// ‚ùå √âviter - trop de param√®tres</span>
<span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">CreerCommande</span><span class="p">(</span><span class="kt">string</span> <span class="n">client</span><span class="p">,</span> <span class="kt">string</span> <span class="n">produit</span><span class="p">,</span> <span class="kt">int</span> <span class="n">quantite</span><span class="p">,</span> 
    <span class="kt">string</span> <span class="n">taille</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">sucre</span><span class="p">,</span> <span class="kt">string</span> <span class="n">lait</span><span class="p">,</span> <span class="kt">double</span> <span class="n">temp</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">vip</span><span class="p">,</span> <span class="kt">string</span> <span class="n">notes</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="-gestion-derreurs-appropri√©e">‚úÖ Gestion d‚Äôerreurs appropri√©e</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// ‚úÖ Bon - validation et gestion d'erreurs</span>
<span class="k">public</span> <span class="k">static</span> <span class="kt">double</span> <span class="nf">CalculerPrix</span><span class="p">(</span><span class="kt">string</span> <span class="n">produit</span><span class="p">,</span> <span class="kt">int</span> <span class="n">quantite</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="kt">string</span><span class="p">.</span><span class="nf">IsNullOrWhiteSpace</span><span class="p">(</span><span class="n">produit</span><span class="p">))</span>
        <span class="k">throw</span> <span class="k">new</span> <span class="nf">ArgumentException</span><span class="p">(</span><span class="s">"Produit requis"</span><span class="p">);</span>
    
    <span class="k">if</span> <span class="p">(</span><span class="n">quantite</span> <span class="p">&lt;=</span> <span class="m">0</span><span class="p">)</span>
        <span class="k">throw</span> <span class="k">new</span> <span class="nf">ArgumentOutOfRangeException</span><span class="p">(</span><span class="k">nameof</span><span class="p">(</span><span class="n">quantite</span><span class="p">));</span>
    
    <span class="c1">// Calcul...</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="exercices-pratiques">Exercices pratiques</h2>

<h3 id="exercice-1--calculatrice-de-caf√©">Exercice 1 : Calculatrice de caf√©</h3>
<p>Cr√©ez une classe avec des m√©thodes pour calculer diff√©rents aspects d‚Äôune commande (prix, temps, calories).</p>

<h3 id="exercice-2--g√©n√©rateur-de-recettes">Exercice 2 : G√©n√©rateur de recettes</h3>
<p>Cr√©ez des m√©thodes qui g√©n√®rent automatiquement des recettes de caf√© selon les ingr√©dients disponibles.</p>

<h3 id="exercice-3--syst√®me-de-fid√©lit√©">Exercice 3 : Syst√®me de fid√©lit√©</h3>
<p>Cr√©ez des m√©thodes surcharg√©es pour calculer les points de fid√©lit√© selon diff√©rents crit√®res.</p>

<hr />

<h2 id="conclusion">Conclusion</h2>

<p>Les m√©thodes sont les <strong>recettes r√©utilisables</strong> de la programmation ! Elles nous permettent de :</p>

<ul>
  <li>‚úÖ <strong>Organiser le code</strong> en blocs logiques</li>
  <li>‚úÖ <strong>R√©utiliser des fonctionnalit√©s</strong> sans duplication</li>
  <li>‚úÖ <strong>Param√©trer les comportements</strong> selon les besoins</li>
  <li>‚úÖ <strong>Faciliter la maintenance</strong> et les tests</li>
  <li>‚úÖ <strong>Am√©liorer la lisibilit√©</strong> du code</li>
</ul>

<p>Comme un barista expert qui ma√Ætrise toutes ses recettes, un d√©veloppeur qui sait cr√©er de bonnes m√©thodes peut construire des applications √©l√©gantes et efficaces !</p>

<p><strong>F√©licitations !</strong> Vous avez maintenant d√©couvert les concepts fondamentaux de la programmation C# √† travers l‚Äôunivers du caf√© ! ‚òï</p>

<hr />

<p><em>Continuez √† pratiquer ces concepts et √† cr√©er vos propres m√©thodes. La programmation, comme l‚Äôart du caf√©, se perfectionne avec la pratique et la passion ! üöÄ</em></p>]]></content><author><name>MattDevBzh</name></author><summary type="html"><![CDATA[Dans un caf√©, chaque barista a ses recettes secr√®tes : comment obtenir la mousse parfaite, pr√©parer l‚Äôespresso id√©al, ou calculer rapidement les prix. En programmation C#, les m√©thodes et fonctions sont ces recettes r√©utilisables qui rendent notre code organis√© et efficace ! ‚òï]]></summary></entry><entry><title type="html">Gestion des exceptions en C# : G√©rer les pannes de votre caf√© avec √©l√©gance</title><link href="http://0.0.0.0:4000/2025/01/30/gestion-exceptions.html" rel="alternate" type="text/html" title="Gestion des exceptions en C# : G√©rer les pannes de votre caf√© avec √©l√©gance" /><published>2025-01-30T00:00:00+00:00</published><updated>2025-01-30T00:00:00+00:00</updated><id>http://0.0.0.0:4000/2025/01/30/gestion-exceptions</id><content type="html" xml:base="http://0.0.0.0:4000/2025/01/30/gestion-exceptions.html"><![CDATA[<p>Dans un caf√©, tout ne se passe pas toujours comme pr√©vu ! <strong>Machine en panne, stock √©puis√©, commande incorrecte‚Ä¶</strong> En programmation C#, les <strong>exceptions</strong> nous permettent de g√©rer ces situations inattendues avec √©l√©gance et professionnalisme. ‚òï</p>

<p>D√©couvrons ensemble comment transformer les probl√®mes en solutions gr√¢ce √† la gestion d‚Äôexceptions !</p>

<h2 id="sommaire">Sommaire</h2>
<ul id="markdown-toc">
  <li><a href="#sommaire" id="markdown-toc-sommaire">Sommaire</a></li>
  <li><a href="#quest-ce-quune-exception-" id="markdown-toc-quest-ce-quune-exception-">Qu‚Äôest-ce qu‚Äôune exception ?</a></li>
  <li><a href="#1-la-structure-trycatch--attraper-les-erreurs" id="markdown-toc-1-la-structure-trycatch--attraper-les-erreurs">1. La structure <code class="language-plaintext highlighter-rouge">try...catch</code> : Attraper les erreurs</a>    <ul>
      <li><a href="#syntaxe-de-base" id="markdown-toc-syntaxe-de-base">Syntaxe de base</a></li>
      <li><a href="#exemple--division-par-z√©ro-dans-le-calcul-de-prix" id="markdown-toc-exemple--division-par-z√©ro-dans-le-calcul-de-prix">Exemple : Division par z√©ro dans le calcul de prix</a></li>
      <li><a href="#exemple--acc√®s-√†-un-index-inexistant" id="markdown-toc-exemple--acc√®s-√†-un-index-inexistant">Exemple : Acc√®s √† un index inexistant</a></li>
    </ul>
  </li>
  <li><a href="#2-plusieurs-types-dexceptions--catch-multiples" id="markdown-toc-2-plusieurs-types-dexceptions--catch-multiples">2. Plusieurs types d‚Äôexceptions : <code class="language-plaintext highlighter-rouge">catch</code> multiples</a>    <ul>
      <li><a href="#exemple--gestion-compl√®te-dune-commande" id="markdown-toc-exemple--gestion-compl√®te-dune-commande">Exemple : Gestion compl√®te d‚Äôune commande</a></li>
    </ul>
  </li>
  <li><a href="#3-le-bloc-finally--nettoyage-garanti" id="markdown-toc-3-le-bloc-finally--nettoyage-garanti">3. Le bloc <code class="language-plaintext highlighter-rouge">finally</code> : Nettoyage garanti</a>    <ul>
      <li><a href="#exemple--gestion-dune-machine-√†-caf√©" id="markdown-toc-exemple--gestion-dune-machine-√†-caf√©">Exemple : Gestion d‚Äôune machine √† caf√©</a></li>
    </ul>
  </li>
  <li><a href="#4-cr√©er-des-exceptions-personnalis√©es" id="markdown-toc-4-cr√©er-des-exceptions-personnalis√©es">4. Cr√©er des exceptions personnalis√©es</a>    <ul>
      <li><a href="#exemple--exceptions-m√©tier-pour-un-caf√©" id="markdown-toc-exemple--exceptions-m√©tier-pour-un-caf√©">Exemple : Exceptions m√©tier pour un caf√©</a></li>
    </ul>
  </li>
  <li><a href="#5-validation-et-exceptions-pr√©ventives" id="markdown-toc-5-validation-et-exceptions-pr√©ventives">5. Validation et exceptions pr√©ventives</a>    <ul>
      <li><a href="#exemple--validation-robuste-de-commande" id="markdown-toc-exemple--validation-robuste-de-commande">Exemple : Validation robuste de commande</a></li>
    </ul>
  </li>
  <li><a href="#6-logging-et-tra√ßabilit√©-des-erreurs" id="markdown-toc-6-logging-et-tra√ßabilit√©-des-erreurs">6. Logging et tra√ßabilit√© des erreurs</a>    <ul>
      <li><a href="#exemple--syst√®me-de-logs-derreurs" id="markdown-toc-exemple--syst√®me-de-logs-derreurs">Exemple : Syst√®me de logs d‚Äôerreurs</a></li>
    </ul>
  </li>
  <li><a href="#7-exemple-complet--syst√®me-robuste-de-caf√©" id="markdown-toc-7-exemple-complet--syst√®me-robuste-de-caf√©">7. Exemple complet : Syst√®me robuste de caf√©</a></li>
  <li><a href="#8-bonnes-pratiques-de-gestion-dexceptions" id="markdown-toc-8-bonnes-pratiques-de-gestion-dexceptions">8. Bonnes pratiques de gestion d‚Äôexceptions</a>    <ul>
      <li><a href="#-exceptions-sp√©cifiques" id="markdown-toc--exceptions-sp√©cifiques">‚úÖ Exceptions sp√©cifiques</a></li>
      <li><a href="#-messages-derreur-utiles" id="markdown-toc--messages-derreur-utiles">‚úÖ Messages d‚Äôerreur utiles</a></li>
      <li><a href="#-logging-appropri√©" id="markdown-toc--logging-appropri√©">‚úÖ Logging appropri√©</a></li>
      <li><a href="#-nettoyage-avec-finally-ou-using" id="markdown-toc--nettoyage-avec-finally-ou-using">‚úÖ Nettoyage avec <code class="language-plaintext highlighter-rouge">finally</code> ou <code class="language-plaintext highlighter-rouge">using</code></a></li>
    </ul>
  </li>
  <li><a href="#exercices-pratiques" id="markdown-toc-exercices-pratiques">Exercices pratiques</a>    <ul>
      <li><a href="#exercice-1--calculatrice-robuste" id="markdown-toc-exercice-1--calculatrice-robuste">Exercice 1 : Calculatrice robuste</a></li>
      <li><a href="#exercice-2--lecteur-de-fichier-s√©curis√©" id="markdown-toc-exercice-2--lecteur-de-fichier-s√©curis√©">Exercice 2 : Lecteur de fichier s√©curis√©</a></li>
      <li><a href="#exercice-3--api-de-caf√©-resiliente" id="markdown-toc-exercice-3--api-de-caf√©-resiliente">Exercice 3 : API de caf√© resiliente</a></li>
    </ul>
  </li>
  <li><a href="#conclusion" id="markdown-toc-conclusion">Conclusion</a></li>
</ul>

<hr />

<h2 id="quest-ce-quune-exception-">Qu‚Äôest-ce qu‚Äôune exception ?</h2>

<p>Une <strong>exception</strong> est un √©v√©nement inattendu qui interrompt le cours normal d‚Äôun programme. C‚Äôest comme :</p>

<ul>
  <li>‚ö° <strong>Panne de courant</strong> pendant la pr√©paration d‚Äôun caf√©</li>
  <li>üì¶ <strong>Stock vide</strong> alors qu‚Äôun client commande</li>
  <li>üîß <strong>Machine en maintenance</strong> non signal√©e</li>
  <li>üí≥ <strong>Carte bancaire refus√©e</strong> au moment du paiement</li>
</ul>

<p>Sans gestion appropri√©e, ces probl√®mes peuvent faire ‚Äúplanter‚Äù votre programme !</p>

<hr />

<h2 id="1-la-structure-trycatch--attraper-les-erreurs">1. La structure <code class="language-plaintext highlighter-rouge">try...catch</code> : Attraper les erreurs</h2>

<p>La structure <code class="language-plaintext highlighter-rouge">try...catch</code> permet d‚Äôessayer une op√©ration et de g√©rer les erreurs qui peuvent survenir.</p>

<h3 id="syntaxe-de-base">Syntaxe de base</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">try</span>
<span class="p">{</span>
    <span class="c1">// Code qui peut g√©n√©rer une exception</span>
<span class="p">}</span>
<span class="k">catch</span> <span class="p">(</span><span class="n">TypeException</span> <span class="n">ex</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// Gestion de l'erreur</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="exemple--division-par-z√©ro-dans-le-calcul-de-prix">Exemple : Division par z√©ro dans le calcul de prix</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">double</span> <span class="nf">calculerPrixUnitaire</span><span class="p">(</span><span class="kt">double</span> <span class="n">prixTotal</span><span class="p">,</span> <span class="kt">int</span> <span class="n">quantite</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">try</span>
    <span class="p">{</span>
        <span class="kt">double</span> <span class="n">prixUnitaire</span> <span class="p">=</span> <span class="n">prixTotal</span> <span class="p">/</span> <span class="n">quantite</span><span class="p">;</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"Prix unitaire : </span><span class="p">{</span><span class="n">prixUnitaire</span><span class="p">:</span><span class="n">C2</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="k">return</span> <span class="n">prixUnitaire</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">catch</span> <span class="p">(</span><span class="n">DivideByZeroException</span> <span class="n">ex</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚ùå Erreur : Impossible de diviser par z√©ro !"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"V√©rifiez que la quantit√© est sup√©rieure √† 0."</span><span class="p">);</span>
        <span class="k">return</span> <span class="m">0</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// Test</span>
<span class="nf">calculerPrixUnitaire</span><span class="p">(</span><span class="m">15.50</span><span class="p">,</span> <span class="m">0</span><span class="p">);</span> <span class="c1">// Va d√©clencher l'exception</span>
<span class="nf">calculerPrixUnitaire</span><span class="p">(</span><span class="m">15.50</span><span class="p">,</span> <span class="m">3</span><span class="p">);</span> <span class="c1">// Fonctionne normalement</span>
</code></pre></div></div>

<h3 id="exemple--acc√®s-√†-un-index-inexistant">Exemple : Acc√®s √† un index inexistant</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">string</span><span class="p">[]</span> <span class="n">menuCafes</span> <span class="p">=</span> <span class="p">{</span><span class="s">"Espresso"</span><span class="p">,</span> <span class="s">"Cappuccino"</span><span class="p">,</span> <span class="s">"Latte"</span><span class="p">};</span>

<span class="k">void</span> <span class="nf">afficherCafe</span><span class="p">(</span><span class="kt">int</span> <span class="n">index</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">try</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"Caf√© s√©lectionn√© : </span><span class="p">{</span><span class="n">menuCafes</span><span class="p">[</span><span class="n">index</span><span class="p">]}</span><span class="s">"</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">catch</span> <span class="p">(</span><span class="n">IndexOutOfRangeException</span> <span class="n">ex</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚ùå Erreur : Index </span><span class="p">{</span><span class="n">index</span><span class="p">}</span><span class="s"> n'existe pas !"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"Indices valides : 0 √† </span><span class="p">{</span><span class="n">menuCafes</span><span class="p">.</span><span class="n">Length</span> <span class="p">-</span> <span class="m">1</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        
        <span class="c1">// Afficher le menu complet</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"Menu disponible :"</span><span class="p">);</span>
        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">menuCafes</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"  </span><span class="p">{</span><span class="n">i</span><span class="p">}</span><span class="s">. </span><span class="p">{</span><span class="n">menuCafes</span><span class="p">[</span><span class="n">i</span><span class="p">]}</span><span class="s">"</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// Test</span>
<span class="nf">afficherCafe</span><span class="p">(</span><span class="m">1</span><span class="p">);</span>  <span class="c1">// Fonctionne</span>
<span class="nf">afficherCafe</span><span class="p">(</span><span class="m">5</span><span class="p">);</span>  <span class="c1">// D√©clenche l'exception</span>
</code></pre></div></div>

<hr />

<h2 id="2-plusieurs-types-dexceptions--catch-multiples">2. Plusieurs types d‚Äôexceptions : <code class="language-plaintext highlighter-rouge">catch</code> multiples</h2>

<p>Un m√™me bloc <code class="language-plaintext highlighter-rouge">try</code> peut avoir plusieurs <code class="language-plaintext highlighter-rouge">catch</code> pour diff√©rents types d‚Äôerreurs.</p>

<h3 id="exemple--gestion-compl√®te-dune-commande">Exemple : Gestion compl√®te d‚Äôune commande</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">GestionCommande</span>
<span class="p">{</span>
    <span class="k">private</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">double</span><span class="p">&gt;</span> <span class="n">prix</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">double</span><span class="p">&gt;</span>
    <span class="p">{</span>
        <span class="p">{</span><span class="s">"Espresso"</span><span class="p">,</span> <span class="m">2.50</span><span class="p">},</span>
        <span class="p">{</span><span class="s">"Cappuccino"</span><span class="p">,</span> <span class="m">4.00</span><span class="p">},</span>
        <span class="p">{</span><span class="s">"Latte"</span><span class="p">,</span> <span class="m">4.50</span><span class="p">}</span>
    <span class="p">};</span>
    
    <span class="k">private</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">int</span><span class="p">&gt;</span> <span class="n">stock</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">int</span><span class="p">&gt;</span>
    <span class="p">{</span>
        <span class="p">{</span><span class="s">"Espresso"</span><span class="p">,</span> <span class="m">10</span><span class="p">},</span>
        <span class="p">{</span><span class="s">"Cappuccino"</span><span class="p">,</span> <span class="m">5</span><span class="p">},</span>
        <span class="p">{</span><span class="s">"Latte"</span><span class="p">,</span> <span class="m">0</span><span class="p">}</span>
    <span class="p">};</span>

    <span class="k">public</span> <span class="k">void</span> <span class="nf">PasserCommande</span><span class="p">(</span><span class="kt">string</span> <span class="n">produit</span><span class="p">,</span> <span class="kt">int</span> <span class="n">quantite</span><span class="p">,</span> <span class="kt">string</span> <span class="n">carteCredit</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">try</span>
        <span class="p">{</span>
            <span class="c1">// V√©rifier que le produit existe</span>
            <span class="k">if</span> <span class="p">(!</span><span class="n">prix</span><span class="p">.</span><span class="nf">ContainsKey</span><span class="p">(</span><span class="n">produit</span><span class="p">))</span>
            <span class="p">{</span>
                <span class="k">throw</span> <span class="k">new</span> <span class="nf">ArgumentException</span><span class="p">(</span><span class="s">$"Produit '</span><span class="p">{</span><span class="n">produit</span><span class="p">}</span><span class="s">' introuvable"</span><span class="p">);</span>
            <span class="p">}</span>
            
            <span class="c1">// V√©rifier le stock</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">stock</span><span class="p">[</span><span class="n">produit</span><span class="p">]</span> <span class="p">&lt;</span> <span class="n">quantite</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">throw</span> <span class="k">new</span> <span class="nf">InvalidOperationException</span><span class="p">(</span><span class="s">$"Stock insuffisant pour </span><span class="p">{</span><span class="n">produit</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
            <span class="p">}</span>
            
            <span class="c1">// Simuler une erreur de carte</span>
            <span class="k">if</span> <span class="p">(</span><span class="kt">string</span><span class="p">.</span><span class="nf">IsNullOrEmpty</span><span class="p">(</span><span class="n">carteCredit</span><span class="p">))</span>
            <span class="p">{</span>
                <span class="k">throw</span> <span class="k">new</span> <span class="nf">ArgumentNullException</span><span class="p">(</span><span class="k">nameof</span><span class="p">(</span><span class="n">carteCredit</span><span class="p">),</span> <span class="s">"Carte de cr√©dit requise"</span><span class="p">);</span>
            <span class="p">}</span>
            
            <span class="c1">// Calculer le total</span>
            <span class="kt">double</span> <span class="n">total</span> <span class="p">=</span> <span class="n">prix</span><span class="p">[</span><span class="n">produit</span><span class="p">]</span> <span class="p">*</span> <span class="n">quantite</span><span class="p">;</span>
            
            <span class="c1">// Simuler le paiement</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">carteCredit</span> <span class="p">==</span> <span class="s">"CARTE_REFUSEE"</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">throw</span> <span class="k">new</span> <span class="nf">InvalidOperationException</span><span class="p">(</span><span class="s">"Paiement refus√© par la banque"</span><span class="p">);</span>
            <span class="p">}</span>
            
            <span class="c1">// Commande r√©ussie</span>
            <span class="n">stock</span><span class="p">[</span><span class="n">produit</span><span class="p">]</span> <span class="p">-=</span> <span class="n">quantite</span><span class="p">;</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚úÖ Commande r√©ussie !"</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Produit : </span><span class="p">{</span><span class="n">quantite</span><span class="p">}</span><span class="s">x </span><span class="p">{</span><span class="n">produit</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Total : </span><span class="p">{</span><span class="n">total</span><span class="p">:</span><span class="n">C2</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Stock restant : </span><span class="p">{</span><span class="n">stock</span><span class="p">[</span><span class="n">produit</span><span class="p">]}</span><span class="s">"</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">catch</span> <span class="p">(</span><span class="n">ArgumentException</span> <span class="n">ex</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚ùå Erreur de produit : </span><span class="p">{</span><span class="n">ex</span><span class="p">.</span><span class="n">Message</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"Produits disponibles :"</span><span class="p">);</span>
            <span class="k">foreach</span> <span class="p">(</span><span class="kt">var</span> <span class="n">p</span> <span class="k">in</span> <span class="n">prix</span><span class="p">.</span><span class="n">Keys</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"  - </span><span class="p">{</span><span class="n">p</span><span class="p">}</span><span class="s"> (</span><span class="p">{</span><span class="n">prix</span><span class="p">[</span><span class="n">p</span><span class="p">]:</span><span class="n">C2</span><span class="p">}</span><span class="s">)"</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">catch</span> <span class="p">(</span><span class="n">ArgumentNullException</span> <span class="n">ex</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚ùå Erreur de saisie : </span><span class="p">{</span><span class="n">ex</span><span class="p">.</span><span class="n">Message</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"Veuillez fournir une carte de cr√©dit valide."</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">catch</span> <span class="p">(</span><span class="n">InvalidOperationException</span> <span class="n">ex</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚ùå Erreur d'op√©ration : </span><span class="p">{</span><span class="n">ex</span><span class="p">.</span><span class="n">Message</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
            
            <span class="k">if</span> <span class="p">(</span><span class="n">ex</span><span class="p">.</span><span class="n">Message</span><span class="p">.</span><span class="nf">Contains</span><span class="p">(</span><span class="s">"Stock"</span><span class="p">))</span>
            <span class="p">{</span>
                <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"Stock disponible pour </span><span class="p">{</span><span class="n">produit</span><span class="p">}</span><span class="s"> : </span><span class="p">{</span><span class="n">stock</span><span class="p">[</span><span class="n">produit</span><span class="p">]}</span><span class="s"> unit√©s"</span><span class="p">);</span>
            <span class="p">}</span>
            <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">ex</span><span class="p">.</span><span class="n">Message</span><span class="p">.</span><span class="nf">Contains</span><span class="p">(</span><span class="s">"Paiement"</span><span class="p">))</span>
            <span class="p">{</span>
                <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"Veuillez essayer avec une autre carte ou payer en esp√®ces."</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span> <span class="n">ex</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚ùå Erreur inattendue : </span><span class="p">{</span><span class="n">ex</span><span class="p">.</span><span class="n">Message</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"Veuillez contacter le support technique."</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// Tests</span>
<span class="kt">var</span> <span class="n">gestion</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">GestionCommande</span><span class="p">();</span>

<span class="n">gestion</span><span class="p">.</span><span class="nf">PasserCommande</span><span class="p">(</span><span class="s">"Cappuccino"</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="s">"1234-5678-9012-3456"</span><span class="p">);</span>  <span class="c1">// ‚úÖ Succ√®s</span>
<span class="n">gestion</span><span class="p">.</span><span class="nf">PasserCommande</span><span class="p">(</span><span class="s">"Mocha"</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="s">"1234-5678-9012-3456"</span><span class="p">);</span>       <span class="c1">// ‚ùå Produit inexistant</span>
<span class="n">gestion</span><span class="p">.</span><span class="nf">PasserCommande</span><span class="p">(</span><span class="s">"Latte"</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="s">"1234-5678-9012-3456"</span><span class="p">);</span>       <span class="c1">// ‚ùå Stock insuffisant</span>
<span class="n">gestion</span><span class="p">.</span><span class="nf">PasserCommande</span><span class="p">(</span><span class="s">"Espresso"</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="k">null</span><span class="p">);</span>                     <span class="c1">// ‚ùå Carte manquante</span>
<span class="n">gestion</span><span class="p">.</span><span class="nf">PasserCommande</span><span class="p">(</span><span class="s">"Espresso"</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="s">"CARTE_REFUSEE"</span><span class="p">);</span>          <span class="c1">// ‚ùå Paiement refus√©</span>
</code></pre></div></div>

<hr />

<h2 id="3-le-bloc-finally--nettoyage-garanti">3. Le bloc <code class="language-plaintext highlighter-rouge">finally</code> : Nettoyage garanti</h2>

<p>Le bloc <code class="language-plaintext highlighter-rouge">finally</code> s‚Äôex√©cute toujours, qu‚Äôil y ait eu exception ou non. Parfait pour le nettoyage !</p>

<h3 id="exemple--gestion-dune-machine-√†-caf√©">Exemple : Gestion d‚Äôune machine √† caf√©</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">MachineACafe</span>
<span class="p">{</span>
    <span class="k">private</span> <span class="kt">bool</span> <span class="n">machineAllumee</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
    <span class="k">private</span> <span class="kt">bool</span> <span class="n">enPreparation</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>

    <span class="k">public</span> <span class="k">void</span> <span class="nf">PreparerCafe</span><span class="p">(</span><span class="kt">string</span> <span class="n">typeCafe</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">try</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"üîÑ D√©marrage de la machine..."</span><span class="p">);</span>
            <span class="n">machineAllumee</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
            
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚òï Pr√©paration du </span><span class="p">{</span><span class="n">typeCafe</span><span class="p">}</span><span class="s">..."</span><span class="p">);</span>
            <span class="n">enPreparation</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
            
            <span class="c1">// Simuler des erreurs possibles</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">typeCafe</span> <span class="p">==</span> <span class="s">"ERREUR_GRAIN"</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">throw</span> <span class="k">new</span> <span class="nf">InvalidOperationException</span><span class="p">(</span><span class="s">"Plus de grains de caf√© !"</span><span class="p">);</span>
            <span class="p">}</span>
            
            <span class="k">if</span> <span class="p">(</span><span class="n">typeCafe</span> <span class="p">==</span> <span class="s">"ERREUR_EAU"</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">throw</span> <span class="k">new</span> <span class="nf">InvalidOperationException</span><span class="p">(</span><span class="s">"R√©servoir d'eau vide !"</span><span class="p">);</span>
            <span class="p">}</span>
            
            <span class="c1">// Simulation du temps de pr√©paration</span>
            <span class="n">System</span><span class="p">.</span><span class="n">Threading</span><span class="p">.</span><span class="n">Thread</span><span class="p">.</span><span class="nf">Sleep</span><span class="p">(</span><span class="m">2000</span><span class="p">);</span>
            
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚úÖ </span><span class="p">{</span><span class="n">typeCafe</span><span class="p">}</span><span class="s"> pr√™t !"</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">catch</span> <span class="p">(</span><span class="n">InvalidOperationException</span> <span class="n">ex</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚ùå Erreur de pr√©paration : </span><span class="p">{</span><span class="n">ex</span><span class="p">.</span><span class="n">Message</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"Veuillez v√©rifier la machine avant de recommencer."</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">finally</span>
        <span class="p">{</span>
            <span class="c1">// Nettoyage toujours ex√©cut√©</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">enPreparation</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"üßπ Nettoyage de la machine en cours..."</span><span class="p">);</span>
                <span class="n">enPreparation</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
            <span class="p">}</span>
            
            <span class="k">if</span> <span class="p">(</span><span class="n">machineAllumee</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"üîå Arr√™t de la machine..."</span><span class="p">);</span>
                <span class="n">machineAllumee</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
            <span class="p">}</span>
            
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚úÖ Machine pr√™te pour la prochaine commande.\n"</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// Tests</span>
<span class="kt">var</span> <span class="n">machine</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">MachineACafe</span><span class="p">();</span>

<span class="n">machine</span><span class="p">.</span><span class="nf">PreparerCafe</span><span class="p">(</span><span class="s">"Espresso"</span><span class="p">);</span>       <span class="c1">// ‚úÖ Succ√®s</span>
<span class="n">machine</span><span class="p">.</span><span class="nf">PreparerCafe</span><span class="p">(</span><span class="s">"ERREUR_GRAIN"</span><span class="p">);</span>   <span class="c1">// ‚ùå Erreur mais nettoyage</span>
<span class="n">machine</span><span class="p">.</span><span class="nf">PreparerCafe</span><span class="p">(</span><span class="s">"ERREUR_EAU"</span><span class="p">);</span>     <span class="c1">// ‚ùå Erreur mais nettoyage</span>
</code></pre></div></div>

<hr />

<h2 id="4-cr√©er-des-exceptions-personnalis√©es">4. Cr√©er des exceptions personnalis√©es</h2>

<p>Pour des erreurs sp√©cifiques √† votre application, cr√©ez vos propres exceptions.</p>

<h3 id="exemple--exceptions-m√©tier-pour-un-caf√©">Exemple : Exceptions m√©tier pour un caf√©</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Exception personnalis√©e pour stock insuffisant</span>
<span class="k">public</span> <span class="k">class</span> <span class="nc">StockInsuffisantException</span> <span class="p">:</span> <span class="n">Exception</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">Produit</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">public</span> <span class="kt">int</span> <span class="n">StockDisponible</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">public</span> <span class="kt">int</span> <span class="n">QuantiteDemandee</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="p">}</span>

    <span class="k">public</span> <span class="nf">StockInsuffisantException</span><span class="p">(</span><span class="kt">string</span> <span class="n">produit</span><span class="p">,</span> <span class="kt">int</span> <span class="n">stockDisponible</span><span class="p">,</span> <span class="kt">int</span> <span class="n">quantiteDemandee</span><span class="p">)</span>
        <span class="p">:</span> <span class="k">base</span><span class="p">(</span><span class="s">$"Stock insuffisant pour </span><span class="p">{</span><span class="n">produit</span><span class="p">}</span><span class="s">. Disponible: </span><span class="p">{</span><span class="n">stockDisponible</span><span class="p">}</span><span class="s">, Demand√©: </span><span class="p">{</span><span class="n">quantiteDemandee</span><span class="p">}</span><span class="s">"</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Produit</span> <span class="p">=</span> <span class="n">produit</span><span class="p">;</span>
        <span class="n">StockDisponible</span> <span class="p">=</span> <span class="n">stockDisponible</span><span class="p">;</span>
        <span class="n">QuantiteDemandee</span> <span class="p">=</span> <span class="n">quantiteDemandee</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// Exception pour machine en panne</span>
<span class="k">public</span> <span class="k">class</span> <span class="nc">MachineEnPanneException</span> <span class="p">:</span> <span class="n">Exception</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">TypeMachine</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">CodeErreur</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="p">}</span>

    <span class="k">public</span> <span class="nf">MachineEnPanneException</span><span class="p">(</span><span class="kt">string</span> <span class="n">typeMachine</span><span class="p">,</span> <span class="kt">string</span> <span class="n">codeErreur</span><span class="p">,</span> <span class="kt">string</span> <span class="n">message</span><span class="p">)</span>
        <span class="p">:</span> <span class="k">base</span><span class="p">(</span><span class="n">message</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">TypeMachine</span> <span class="p">=</span> <span class="n">typeMachine</span><span class="p">;</span>
        <span class="n">CodeErreur</span> <span class="p">=</span> <span class="n">codeErreur</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// Exception pour client non autoris√©</span>
<span class="k">public</span> <span class="k">class</span> <span class="nc">ClientNonAutoriseException</span> <span class="p">:</span> <span class="n">Exception</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">NomClient</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">Raison</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="p">}</span>

    <span class="k">public</span> <span class="nf">ClientNonAutoriseException</span><span class="p">(</span><span class="kt">string</span> <span class="n">nomClient</span><span class="p">,</span> <span class="kt">string</span> <span class="n">raison</span><span class="p">)</span>
        <span class="p">:</span> <span class="k">base</span><span class="p">(</span><span class="s">$"Client </span><span class="p">{</span><span class="n">nomClient</span><span class="p">}</span><span class="s"> non autoris√©: </span><span class="p">{</span><span class="n">raison</span><span class="p">}</span><span class="s">"</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">NomClient</span> <span class="p">=</span> <span class="n">nomClient</span><span class="p">;</span>
        <span class="n">Raison</span> <span class="p">=</span> <span class="n">raison</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// Utilisation</span>
<span class="k">class</span> <span class="nc">CafeAvecExceptionsPersonnalisees</span>
<span class="p">{</span>
    <span class="k">private</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">int</span><span class="p">&gt;</span> <span class="n">stock</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">int</span><span class="p">&gt;</span>
    <span class="p">{</span>
        <span class="p">{</span><span class="s">"Espresso"</span><span class="p">,</span> <span class="m">5</span><span class="p">},</span>
        <span class="p">{</span><span class="s">"Cappuccino"</span><span class="p">,</span> <span class="m">2</span><span class="p">}</span>
    <span class="p">};</span>
    
    <span class="k">private</span> <span class="n">HashSet</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="n">clientsBannis</span> <span class="p">=</span> <span class="k">new</span> <span class="n">HashSet</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="p">{</span><span class="s">"ClientProblematique"</span><span class="p">};</span>

    <span class="k">public</span> <span class="k">void</span> <span class="nf">TraiterCommande</span><span class="p">(</span><span class="kt">string</span> <span class="n">client</span><span class="p">,</span> <span class="kt">string</span> <span class="n">produit</span><span class="p">,</span> <span class="kt">int</span> <span class="n">quantite</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">try</span>
        <span class="p">{</span>
            <span class="c1">// V√©rifier le client</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">clientsBannis</span><span class="p">.</span><span class="nf">Contains</span><span class="p">(</span><span class="n">client</span><span class="p">))</span>
            <span class="p">{</span>
                <span class="k">throw</span> <span class="k">new</span> <span class="nf">ClientNonAutoriseException</span><span class="p">(</span><span class="n">client</span><span class="p">,</span> <span class="s">"Client banni pour impay√©s"</span><span class="p">);</span>
            <span class="p">}</span>
            
            <span class="c1">// V√©rifier le stock</span>
            <span class="k">if</span> <span class="p">(!</span><span class="n">stock</span><span class="p">.</span><span class="nf">ContainsKey</span><span class="p">(</span><span class="n">produit</span><span class="p">)</span> <span class="p">||</span> <span class="n">stock</span><span class="p">[</span><span class="n">produit</span><span class="p">]</span> <span class="p">&lt;</span> <span class="n">quantite</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="kt">int</span> <span class="n">stockDisponible</span> <span class="p">=</span> <span class="n">stock</span><span class="p">.</span><span class="nf">ContainsKey</span><span class="p">(</span><span class="n">produit</span><span class="p">)</span> <span class="p">?</span> <span class="n">stock</span><span class="p">[</span><span class="n">produit</span><span class="p">]</span> <span class="p">:</span> <span class="m">0</span><span class="p">;</span>
                <span class="k">throw</span> <span class="k">new</span> <span class="nf">StockInsuffisantException</span><span class="p">(</span><span class="n">produit</span><span class="p">,</span> <span class="n">stockDisponible</span><span class="p">,</span> <span class="n">quantite</span><span class="p">);</span>
            <span class="p">}</span>
            
            <span class="c1">// Simuler une panne de machine</span>
            <span class="n">Random</span> <span class="n">random</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Random</span><span class="p">();</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">random</span><span class="p">.</span><span class="nf">Next</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="m">10</span><span class="p">)</span> <span class="p">==</span> <span class="m">1</span><span class="p">)</span> <span class="c1">// 10% de chance de panne</span>
            <span class="p">{</span>
                <span class="k">throw</span> <span class="k">new</span> <span class="nf">MachineEnPanneException</span><span class="p">(</span><span class="s">"Broyeur"</span><span class="p">,</span> <span class="s">"ERR_001"</span><span class="p">,</span> <span class="s">"Grains coinc√©s dans le broyeur"</span><span class="p">);</span>
            <span class="p">}</span>
            
            <span class="c1">// Traitement r√©ussi</span>
            <span class="n">stock</span><span class="p">[</span><span class="n">produit</span><span class="p">]</span> <span class="p">-=</span> <span class="n">quantite</span><span class="p">;</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚úÖ Commande trait√©e pour </span><span class="p">{</span><span class="n">client</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   </span><span class="p">{</span><span class="n">quantite</span><span class="p">}</span><span class="s">x </span><span class="p">{</span><span class="n">produit</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Stock restant : </span><span class="p">{</span><span class="n">stock</span><span class="p">[</span><span class="n">produit</span><span class="p">]}</span><span class="s">"</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">catch</span> <span class="p">(</span><span class="n">ClientNonAutoriseException</span> <span class="n">ex</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"üö´ Acc√®s refus√© : </span><span class="p">{</span><span class="n">ex</span><span class="p">.</span><span class="n">Message</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Client : </span><span class="p">{</span><span class="n">ex</span><span class="p">.</span><span class="n">NomClient</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Raison : </span><span class="p">{</span><span class="n">ex</span><span class="p">.</span><span class="n">Raison</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">catch</span> <span class="p">(</span><span class="n">StockInsuffisantException</span> <span class="n">ex</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"üì¶ </span><span class="p">{</span><span class="n">ex</span><span class="p">.</span><span class="n">Message</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Suggestion : Commander </span><span class="p">{</span><span class="n">ex</span><span class="p">.</span><span class="n">QuantiteDemandee</span> <span class="p">-</span> <span class="n">ex</span><span class="p">.</span><span class="n">StockDisponible</span><span class="p">}</span><span class="s"> unit√©s suppl√©mentaires"</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">catch</span> <span class="p">(</span><span class="n">MachineEnPanneException</span> <span class="n">ex</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"üîß Panne machine : </span><span class="p">{</span><span class="n">ex</span><span class="p">.</span><span class="n">Message</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Machine : </span><span class="p">{</span><span class="n">ex</span><span class="p">.</span><span class="n">TypeMachine</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Code erreur : </span><span class="p">{</span><span class="n">ex</span><span class="p">.</span><span class="n">CodeErreur</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Action : Contacter le technicien"</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// Test</span>
<span class="kt">var</span> <span class="n">cafe</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">CafeAvecExceptionsPersonnalisees</span><span class="p">();</span>

<span class="n">cafe</span><span class="p">.</span><span class="nf">TraiterCommande</span><span class="p">(</span><span class="s">"Marie"</span><span class="p">,</span> <span class="s">"Espresso"</span><span class="p">,</span> <span class="m">2</span><span class="p">);</span>           <span class="c1">// ‚úÖ Possible</span>
<span class="n">cafe</span><span class="p">.</span><span class="nf">TraiterCommande</span><span class="p">(</span><span class="s">"Paul"</span><span class="p">,</span> <span class="s">"Cappuccino"</span><span class="p">,</span> <span class="m">5</span><span class="p">);</span>          <span class="c1">// ‚ùå Stock insuffisant</span>
<span class="n">cafe</span><span class="p">.</span><span class="nf">TraiterCommande</span><span class="p">(</span><span class="s">"ClientProblematique"</span><span class="p">,</span> <span class="s">"Latte"</span><span class="p">,</span> <span class="m">1</span><span class="p">);</span> <span class="c1">// ‚ùå Client banni</span>
</code></pre></div></div>

<hr />

<h2 id="5-validation-et-exceptions-pr√©ventives">5. Validation et exceptions pr√©ventives</h2>

<p>Il vaut mieux valider les donn√©es avant qu‚Äôelles causent des erreurs.</p>

<h3 id="exemple--validation-robuste-de-commande">Exemple : Validation robuste de commande</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">public</span> <span class="k">class</span> <span class="nc">ValidateurCommande</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">ValiderCommande</span><span class="p">(</span><span class="kt">string</span> <span class="n">client</span><span class="p">,</span> <span class="kt">string</span> <span class="n">produit</span><span class="p">,</span> <span class="kt">int</span> <span class="n">quantite</span><span class="p">,</span> <span class="kt">double</span> <span class="n">montant</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="c1">// Validation du nom client</span>
        <span class="k">if</span> <span class="p">(</span><span class="kt">string</span><span class="p">.</span><span class="nf">IsNullOrWhiteSpace</span><span class="p">(</span><span class="n">client</span><span class="p">))</span>
        <span class="p">{</span>
            <span class="k">throw</span> <span class="k">new</span> <span class="nf">ArgumentException</span><span class="p">(</span><span class="s">"Le nom du client ne peut pas √™tre vide"</span><span class="p">,</span> <span class="k">nameof</span><span class="p">(</span><span class="n">client</span><span class="p">));</span>
        <span class="p">}</span>
        
        <span class="k">if</span> <span class="p">(</span><span class="n">client</span><span class="p">.</span><span class="n">Length</span> <span class="p">&lt;</span> <span class="m">2</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">throw</span> <span class="k">new</span> <span class="nf">ArgumentException</span><span class="p">(</span><span class="s">"Le nom du client doit contenir au moins 2 caract√®res"</span><span class="p">,</span> <span class="k">nameof</span><span class="p">(</span><span class="n">client</span><span class="p">));</span>
        <span class="p">}</span>
        
        <span class="c1">// Validation du produit</span>
        <span class="k">if</span> <span class="p">(</span><span class="kt">string</span><span class="p">.</span><span class="nf">IsNullOrWhiteSpace</span><span class="p">(</span><span class="n">produit</span><span class="p">))</span>
        <span class="p">{</span>
            <span class="k">throw</span> <span class="k">new</span> <span class="nf">ArgumentException</span><span class="p">(</span><span class="s">"Le nom du produit ne peut pas √™tre vide"</span><span class="p">,</span> <span class="k">nameof</span><span class="p">(</span><span class="n">produit</span><span class="p">));</span>
        <span class="p">}</span>
        
        <span class="c1">// Validation de la quantit√©</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">quantite</span> <span class="p">&lt;=</span> <span class="m">0</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">throw</span> <span class="k">new</span> <span class="nf">ArgumentOutOfRangeException</span><span class="p">(</span><span class="k">nameof</span><span class="p">(</span><span class="n">quantite</span><span class="p">),</span> <span class="s">"La quantit√© doit √™tre sup√©rieure √† 0"</span><span class="p">);</span>
        <span class="p">}</span>
        
        <span class="k">if</span> <span class="p">(</span><span class="n">quantite</span> <span class="p">&gt;</span> <span class="m">10</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">throw</span> <span class="k">new</span> <span class="nf">ArgumentOutOfRangeException</span><span class="p">(</span><span class="k">nameof</span><span class="p">(</span><span class="n">quantite</span><span class="p">),</span> <span class="s">"Maximum 10 unit√©s par commande"</span><span class="p">);</span>
        <span class="p">}</span>
        
        <span class="c1">// Validation du montant</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">montant</span> <span class="p">&lt;</span> <span class="m">0</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">throw</span> <span class="k">new</span> <span class="nf">ArgumentOutOfRangeException</span><span class="p">(</span><span class="k">nameof</span><span class="p">(</span><span class="n">montant</span><span class="p">),</span> <span class="s">"Le montant ne peut pas √™tre n√©gatif"</span><span class="p">);</span>
        <span class="p">}</span>
        
        <span class="k">if</span> <span class="p">(</span><span class="n">montant</span> <span class="p">&gt;</span> <span class="m">1000</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">throw</span> <span class="k">new</span> <span class="nf">ArgumentOutOfRangeException</span><span class="p">(</span><span class="k">nameof</span><span class="p">(</span><span class="n">montant</span><span class="p">),</span> <span class="s">"Montant maximum : 1000‚Ç¨"</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// Service de commande s√©curis√©</span>
<span class="k">public</span> <span class="k">class</span> <span class="nc">ServiceCommande</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">void</span> <span class="nf">CreerCommande</span><span class="p">(</span><span class="kt">string</span> <span class="n">client</span><span class="p">,</span> <span class="kt">string</span> <span class="n">produit</span><span class="p">,</span> <span class="kt">int</span> <span class="n">quantite</span><span class="p">,</span> <span class="kt">double</span> <span class="n">montant</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">try</span>
        <span class="p">{</span>
            <span class="c1">// Validation pr√©ventive</span>
            <span class="n">ValidateurCommande</span><span class="p">.</span><span class="nf">ValiderCommande</span><span class="p">(</span><span class="n">client</span><span class="p">,</span> <span class="n">produit</span><span class="p">,</span> <span class="n">quantite</span><span class="p">,</span> <span class="n">montant</span><span class="p">);</span>
            
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚úÖ Commande valid√©e :"</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Client : </span><span class="p">{</span><span class="n">client</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Produit : </span><span class="p">{</span><span class="n">quantite</span><span class="p">}</span><span class="s">x </span><span class="p">{</span><span class="n">produit</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Montant : </span><span class="p">{</span><span class="n">montant</span><span class="p">:</span><span class="n">C2</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">catch</span> <span class="p">(</span><span class="n">ArgumentException</span> <span class="n">ex</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚ùå Erreur de validation : </span><span class="p">{</span><span class="n">ex</span><span class="p">.</span><span class="n">Message</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Param√®tre : </span><span class="p">{</span><span class="n">ex</span><span class="p">.</span><span class="n">ParamName</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">catch</span> <span class="p">(</span><span class="n">ArgumentOutOfRangeException</span> <span class="n">ex</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚ùå Valeur hors limites : </span><span class="p">{</span><span class="n">ex</span><span class="p">.</span><span class="n">Message</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Param√®tre : </span><span class="p">{</span><span class="n">ex</span><span class="p">.</span><span class="n">ParamName</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// Tests de validation</span>
<span class="kt">var</span> <span class="n">service</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">ServiceCommande</span><span class="p">();</span>

<span class="n">service</span><span class="p">.</span><span class="nf">CreerCommande</span><span class="p">(</span><span class="s">"Marie"</span><span class="p">,</span> <span class="s">"Cappuccino"</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">8.00</span><span class="p">);</span>    <span class="c1">// ‚úÖ Valide</span>
<span class="n">service</span><span class="p">.</span><span class="nf">CreerCommande</span><span class="p">(</span><span class="s">""</span><span class="p">,</span> <span class="s">"Espresso"</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">2.50</span><span class="p">);</span>           <span class="c1">// ‚ùå Nom vide</span>
<span class="n">service</span><span class="p">.</span><span class="nf">CreerCommande</span><span class="p">(</span><span class="s">"A"</span><span class="p">,</span> <span class="s">"Latte"</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">4.50</span><span class="p">);</span>             <span class="c1">// ‚ùå Nom trop court</span>
<span class="n">service</span><span class="p">.</span><span class="nf">CreerCommande</span><span class="p">(</span><span class="s">"Paul"</span><span class="p">,</span> <span class="s">""</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">3.00</span><span class="p">);</span>               <span class="c1">// ‚ùå Produit vide</span>
<span class="n">service</span><span class="p">.</span><span class="nf">CreerCommande</span><span class="p">(</span><span class="s">"Julie"</span><span class="p">,</span> <span class="s">"Americano"</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">3.00</span><span class="p">);</span>     <span class="c1">// ‚ùå Quantit√© invalide</span>
<span class="n">service</span><span class="p">.</span><span class="nf">CreerCommande</span><span class="p">(</span><span class="s">"Tom"</span><span class="p">,</span> <span class="s">"Mocha"</span><span class="p">,</span> <span class="m">15</span><span class="p">,</span> <span class="m">75.00</span><span class="p">);</span>         <span class="c1">// ‚ùå Trop de quantit√©</span>
<span class="n">service</span><span class="p">.</span><span class="nf">CreerCommande</span><span class="p">(</span><span class="s">"Emma"</span><span class="p">,</span> <span class="s">"Latte"</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="p">-</span><span class="m">5.00</span><span class="p">);</span>         <span class="c1">// ‚ùå Montant n√©gatif</span>
</code></pre></div></div>

<hr />

<h2 id="6-logging-et-tra√ßabilit√©-des-erreurs">6. Logging et tra√ßabilit√© des erreurs</h2>

<p>Il est important de garder une trace des erreurs pour le d√©bogage.</p>

<h3 id="exemple--syst√®me-de-logs-derreurs">Exemple : Syst√®me de logs d‚Äôerreurs</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">using</span> <span class="nn">System.IO</span><span class="p">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">LoggerErreurs</span>
<span class="p">{</span>
    <span class="k">private</span> <span class="k">static</span> <span class="kt">string</span> <span class="n">cheminLog</span> <span class="p">=</span> <span class="s">"erreurs_cafe.log"</span><span class="p">;</span>

    <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">EcrireErreur</span><span class="p">(</span><span class="n">Exception</span> <span class="n">ex</span><span class="p">,</span> <span class="kt">string</span> <span class="n">contexte</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="kt">string</span> <span class="n">ligneLog</span> <span class="p">=</span> <span class="s">$"[</span><span class="p">{</span><span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">:</span><span class="n">yyyy</span><span class="p">-</span><span class="n">MM</span><span class="p">-</span><span class="n">dd</span> <span class="n">HH</span><span class="p">:</span><span class="n">mm</span><span class="p">:</span><span class="n">ss</span><span class="p">}</span><span class="s">] </span><span class="p">{</span><span class="n">contexte</span><span class="p">}</span><span class="s"> - </span><span class="p">{</span><span class="n">ex</span><span class="p">.</span><span class="nf">GetType</span><span class="p">().</span><span class="n">Name</span><span class="p">}</span><span class="s">: </span><span class="p">{</span><span class="n">ex</span><span class="p">.</span><span class="n">Message</span><span class="p">}</span><span class="s">"</span><span class="p">;</span>
        
        <span class="k">try</span>
        <span class="p">{</span>
            <span class="n">File</span><span class="p">.</span><span class="nf">AppendAllText</span><span class="p">(</span><span class="n">cheminLog</span><span class="p">,</span> <span class="n">ligneLog</span> <span class="p">+</span> <span class="n">Environment</span><span class="p">.</span><span class="n">NewLine</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">catch</span>
        <span class="p">{</span>
            <span class="c1">// Si on ne peut pas √©crire dans le fichier, au moins afficher</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"ERREUR LOG: </span><span class="p">{</span><span class="n">ligneLog</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">AfficherLogs</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">try</span>
        <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">File</span><span class="p">.</span><span class="nf">Exists</span><span class="p">(</span><span class="n">cheminLog</span><span class="p">))</span>
            <span class="p">{</span>
                <span class="kt">string</span> <span class="n">contenu</span> <span class="p">=</span> <span class="n">File</span><span class="p">.</span><span class="nf">ReadAllText</span><span class="p">(</span><span class="n">cheminLog</span><span class="p">);</span>
                <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"üìã === HISTORIQUE DES ERREURS ==="</span><span class="p">);</span>
                <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="n">contenu</span><span class="p">);</span>
            <span class="p">}</span>
            <span class="k">else</span>
            <span class="p">{</span>
                <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚úÖ Aucune erreur enregistr√©e"</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span> <span class="n">ex</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚ùå Impossible de lire le fichier de log : </span><span class="p">{</span><span class="n">ex</span><span class="p">.</span><span class="n">Message</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">CafeAvecLogs</span>
<span class="p">{</span>
    <span class="k">private</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">int</span><span class="p">&gt;</span> <span class="n">stock</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">int</span><span class="p">&gt;</span>
    <span class="p">{</span>
        <span class="p">{</span><span class="s">"Espresso"</span><span class="p">,</span> <span class="m">3</span><span class="p">},</span>
        <span class="p">{</span><span class="s">"Cappuccino"</span><span class="p">,</span> <span class="m">1</span><span class="p">}</span>
    <span class="p">};</span>

    <span class="k">public</span> <span class="k">void</span> <span class="nf">PreparerCafe</span><span class="p">(</span><span class="kt">string</span> <span class="n">produit</span><span class="p">,</span> <span class="kt">string</span> <span class="n">client</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">try</span>
        <span class="p">{</span>
            <span class="k">if</span> <span class="p">(!</span><span class="n">stock</span><span class="p">.</span><span class="nf">ContainsKey</span><span class="p">(</span><span class="n">produit</span><span class="p">))</span>
            <span class="p">{</span>
                <span class="k">throw</span> <span class="k">new</span> <span class="nf">ArgumentException</span><span class="p">(</span><span class="s">$"Produit </span><span class="p">{</span><span class="n">produit</span><span class="p">}</span><span class="s"> non disponible"</span><span class="p">);</span>
            <span class="p">}</span>
            
            <span class="k">if</span> <span class="p">(</span><span class="n">stock</span><span class="p">[</span><span class="n">produit</span><span class="p">]</span> <span class="p">&lt;=</span> <span class="m">0</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">throw</span> <span class="k">new</span> <span class="nf">InvalidOperationException</span><span class="p">(</span><span class="s">$"Stock √©puis√© pour </span><span class="p">{</span><span class="n">produit</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
            <span class="p">}</span>
            
            <span class="n">stock</span><span class="p">[</span><span class="n">produit</span><span class="p">]--;</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚úÖ </span><span class="p">{</span><span class="n">produit</span><span class="p">}</span><span class="s"> pr√©par√© pour </span><span class="p">{</span><span class="n">client</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span> <span class="n">ex</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="c1">// Log de l'erreur</span>
            <span class="kt">string</span> <span class="n">contexte</span> <span class="p">=</span> <span class="s">$"Pr√©paration caf√© - Client: </span><span class="p">{</span><span class="n">client</span><span class="p">}</span><span class="s">, Produit: </span><span class="p">{</span><span class="n">produit</span><span class="p">}</span><span class="s">"</span><span class="p">;</span>
            <span class="n">LoggerErreurs</span><span class="p">.</span><span class="nf">EcrireErreur</span><span class="p">(</span><span class="n">ex</span><span class="p">,</span> <span class="n">contexte</span><span class="p">);</span>
            
            <span class="c1">// Affichage utilisateur</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚ùå Erreur : </span><span class="p">{</span><span class="n">ex</span><span class="p">.</span><span class="n">Message</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// Test avec logging</span>
<span class="kt">var</span> <span class="n">cafeLog</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">CafeAvecLogs</span><span class="p">();</span>

<span class="n">cafeLog</span><span class="p">.</span><span class="nf">PreparerCafe</span><span class="p">(</span><span class="s">"Espresso"</span><span class="p">,</span> <span class="s">"Marie"</span><span class="p">);</span>      <span class="c1">// ‚úÖ Succ√®s</span>
<span class="n">cafeLog</span><span class="p">.</span><span class="nf">PreparerCafe</span><span class="p">(</span><span class="s">"Latte"</span><span class="p">,</span> <span class="s">"Paul"</span><span class="p">);</span>          <span class="c1">// ‚ùå Produit inexistant (logg√©)</span>
<span class="n">cafeLog</span><span class="p">.</span><span class="nf">PreparerCafe</span><span class="p">(</span><span class="s">"Cappuccino"</span><span class="p">,</span> <span class="s">"Julie"</span><span class="p">);</span>    <span class="c1">// ‚úÖ Succ√®s</span>
<span class="n">cafeLog</span><span class="p">.</span><span class="nf">PreparerCafe</span><span class="p">(</span><span class="s">"Cappuccino"</span><span class="p">,</span> <span class="s">"Tom"</span><span class="p">);</span>      <span class="c1">// ‚ùå Stock √©puis√© (logg√©)</span>

<span class="c1">// Afficher l'historique</span>
<span class="n">LoggerErreurs</span><span class="p">.</span><span class="nf">AfficherLogs</span><span class="p">();</span>
</code></pre></div></div>

<hr />

<h2 id="7-exemple-complet--syst√®me-robuste-de-caf√©">7. Exemple complet : Syst√®me robuste de caf√©</h2>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.IO</span><span class="p">;</span>

<span class="c1">// Exceptions personnalis√©es</span>
<span class="k">public</span> <span class="k">class</span> <span class="nc">CafeException</span> <span class="p">:</span> <span class="n">Exception</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="nf">CafeException</span><span class="p">(</span><span class="kt">string</span> <span class="n">message</span><span class="p">)</span> <span class="p">:</span> <span class="k">base</span><span class="p">(</span><span class="n">message</span><span class="p">)</span> <span class="p">{</span> <span class="p">}</span>
    <span class="k">public</span> <span class="nf">CafeException</span><span class="p">(</span><span class="kt">string</span> <span class="n">message</span><span class="p">,</span> <span class="n">Exception</span> <span class="n">innerException</span><span class="p">)</span> <span class="p">:</span> <span class="k">base</span><span class="p">(</span><span class="n">message</span><span class="p">,</span> <span class="n">innerException</span><span class="p">)</span> <span class="p">{</span> <span class="p">}</span>
<span class="p">}</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">StockEpuiseException</span> <span class="p">:</span> <span class="n">CafeException</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">Produit</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">public</span> <span class="nf">StockEpuiseException</span><span class="p">(</span><span class="kt">string</span> <span class="n">produit</span><span class="p">)</span> <span class="p">:</span> <span class="k">base</span><span class="p">(</span><span class="s">$"Stock √©puis√© pour </span><span class="p">{</span><span class="n">produit</span><span class="p">}</span><span class="s">"</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Produit</span> <span class="p">=</span> <span class="n">produit</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// Syst√®me robuste</span>
<span class="k">public</span> <span class="k">class</span> <span class="nc">SystemeCafeRobuste</span>
<span class="p">{</span>
    <span class="k">private</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">decimal</span><span class="p">&gt;</span> <span class="n">prix</span><span class="p">;</span>
    <span class="k">private</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">int</span><span class="p">&gt;</span> <span class="n">stock</span><span class="p">;</span>
    <span class="k">private</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="n">historiqueErreurs</span><span class="p">;</span>

    <span class="k">public</span> <span class="nf">SystemeCafeRobuste</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nf">InitialiserDonnees</span><span class="p">();</span>
        <span class="n">historiqueErreurs</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;();</span>
    <span class="p">}</span>

    <span class="k">private</span> <span class="k">void</span> <span class="nf">InitialiserDonnees</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="n">prix</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">decimal</span><span class="p">&gt;</span>
        <span class="p">{</span>
            <span class="p">{</span><span class="s">"Espresso"</span><span class="p">,</span> <span class="m">2.50</span><span class="n">m</span><span class="p">},</span>
            <span class="p">{</span><span class="s">"Cappuccino"</span><span class="p">,</span> <span class="m">4.00</span><span class="n">m</span><span class="p">},</span>
            <span class="p">{</span><span class="s">"Latte"</span><span class="p">,</span> <span class="m">4.50</span><span class="n">m</span><span class="p">},</span>
            <span class="p">{</span><span class="s">"Americano"</span><span class="p">,</span> <span class="m">3.00</span><span class="n">m</span><span class="p">}</span>
        <span class="p">};</span>

        <span class="n">stock</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">int</span><span class="p">&gt;</span>
        <span class="p">{</span>
            <span class="p">{</span><span class="s">"Espresso"</span><span class="p">,</span> <span class="m">10</span><span class="p">},</span>
            <span class="p">{</span><span class="s">"Cappuccino"</span><span class="p">,</span> <span class="m">5</span><span class="p">},</span>
            <span class="p">{</span><span class="s">"Latte"</span><span class="p">,</span> <span class="m">3</span><span class="p">},</span>
            <span class="p">{</span><span class="s">"Americano"</span><span class="p">,</span> <span class="m">8</span><span class="p">}</span>
        <span class="p">};</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">void</span> <span class="nf">ProcesserCommande</span><span class="p">(</span><span class="kt">string</span> <span class="n">client</span><span class="p">,</span> <span class="kt">string</span> <span class="n">produit</span><span class="p">,</span> <span class="kt">int</span> <span class="n">quantite</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="kt">string</span> <span class="n">idCommande</span> <span class="p">=</span> <span class="n">Guid</span><span class="p">.</span><span class="nf">NewGuid</span><span class="p">().</span><span class="nf">ToString</span><span class="p">()[..</span><span class="m">8</span><span class="p">];</span>
        
        <span class="k">try</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"üîÑ Commande </span><span class="p">{</span><span class="n">idCommande</span><span class="p">}</span><span class="s"> - Traitement en cours..."</span><span class="p">);</span>
            
            <span class="c1">// Validations</span>
            <span class="nf">ValiderParametres</span><span class="p">(</span><span class="n">client</span><span class="p">,</span> <span class="n">produit</span><span class="p">,</span> <span class="n">quantite</span><span class="p">);</span>
            <span class="nf">ValiderDisponibilite</span><span class="p">(</span><span class="n">produit</span><span class="p">,</span> <span class="n">quantite</span><span class="p">);</span>
            
            <span class="c1">// Traitement</span>
            <span class="kt">decimal</span> <span class="n">total</span> <span class="p">=</span> <span class="nf">CalculerTotal</span><span class="p">(</span><span class="n">produit</span><span class="p">,</span> <span class="n">quantite</span><span class="p">);</span>
            <span class="nf">ProcesserPaiement</span><span class="p">(</span><span class="n">total</span><span class="p">);</span>
            <span class="nf">MettreAJourStock</span><span class="p">(</span><span class="n">produit</span><span class="p">,</span> <span class="n">quantite</span><span class="p">);</span>
            
            <span class="c1">// Succ√®s</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚úÖ Commande </span><span class="p">{</span><span class="n">idCommande</span><span class="p">}</span><span class="s"> termin√©e avec succ√®s !"</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Client : </span><span class="p">{</span><span class="n">client</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Produit : </span><span class="p">{</span><span class="n">quantite</span><span class="p">}</span><span class="s">x </span><span class="p">{</span><span class="n">produit</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Total : </span><span class="p">{</span><span class="n">total</span><span class="p">:</span><span class="n">C2</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">catch</span> <span class="p">(</span><span class="n">ArgumentException</span> <span class="n">ex</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="nf">GererErreur</span><span class="p">(</span><span class="s">$"Commande </span><span class="p">{</span><span class="n">idCommande</span><span class="p">}</span><span class="s">"</span><span class="p">,</span> <span class="n">ex</span><span class="p">,</span> <span class="s">"Param√®tres invalides"</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">catch</span> <span class="p">(</span><span class="n">StockEpuiseException</span> <span class="n">ex</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="nf">GererErreur</span><span class="p">(</span><span class="s">$"Commande </span><span class="p">{</span><span class="n">idCommande</span><span class="p">}</span><span class="s">"</span><span class="p">,</span> <span class="n">ex</span><span class="p">,</span> <span class="s">"Probl√®me de stock"</span><span class="p">);</span>
            <span class="nf">ProposerAlternatives</span><span class="p">(</span><span class="n">ex</span><span class="p">.</span><span class="n">Produit</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">catch</span> <span class="p">(</span><span class="n">InvalidOperationException</span> <span class="n">ex</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="nf">GererErreur</span><span class="p">(</span><span class="s">$"Commande </span><span class="p">{</span><span class="n">idCommande</span><span class="p">}</span><span class="s">"</span><span class="p">,</span> <span class="n">ex</span><span class="p">,</span> <span class="s">"Erreur de traitement"</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span> <span class="n">ex</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="nf">GererErreur</span><span class="p">(</span><span class="s">$"Commande </span><span class="p">{</span><span class="n">idCommande</span><span class="p">}</span><span class="s">"</span><span class="p">,</span> <span class="n">ex</span><span class="p">,</span> <span class="s">"Erreur inattendue"</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">finally</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"üìù Commande </span><span class="p">{</span><span class="n">idCommande</span><span class="p">}</span><span class="s"> archiv√©e.\n"</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">private</span> <span class="k">void</span> <span class="nf">ValiderParametres</span><span class="p">(</span><span class="kt">string</span> <span class="n">client</span><span class="p">,</span> <span class="kt">string</span> <span class="n">produit</span><span class="p">,</span> <span class="kt">int</span> <span class="n">quantite</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="kt">string</span><span class="p">.</span><span class="nf">IsNullOrWhiteSpace</span><span class="p">(</span><span class="n">client</span><span class="p">))</span>
            <span class="k">throw</span> <span class="k">new</span> <span class="nf">ArgumentException</span><span class="p">(</span><span class="s">"Nom client requis"</span><span class="p">);</span>
        
        <span class="k">if</span> <span class="p">(</span><span class="kt">string</span><span class="p">.</span><span class="nf">IsNullOrWhiteSpace</span><span class="p">(</span><span class="n">produit</span><span class="p">))</span>
            <span class="k">throw</span> <span class="k">new</span> <span class="nf">ArgumentException</span><span class="p">(</span><span class="s">"Nom produit requis"</span><span class="p">);</span>
        
        <span class="k">if</span> <span class="p">(</span><span class="n">quantite</span> <span class="p">&lt;=</span> <span class="m">0</span> <span class="p">||</span> <span class="n">quantite</span> <span class="p">&gt;</span> <span class="m">10</span><span class="p">)</span>
            <span class="k">throw</span> <span class="k">new</span> <span class="nf">ArgumentException</span><span class="p">(</span><span class="s">"Quantit√© doit √™tre entre 1 et 10"</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">private</span> <span class="k">void</span> <span class="nf">ValiderDisponibilite</span><span class="p">(</span><span class="kt">string</span> <span class="n">produit</span><span class="p">,</span> <span class="kt">int</span> <span class="n">quantite</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span> <span class="p">(!</span><span class="n">prix</span><span class="p">.</span><span class="nf">ContainsKey</span><span class="p">(</span><span class="n">produit</span><span class="p">))</span>
            <span class="k">throw</span> <span class="k">new</span> <span class="nf">ArgumentException</span><span class="p">(</span><span class="s">$"Produit '</span><span class="p">{</span><span class="n">produit</span><span class="p">}</span><span class="s">' non disponible au menu"</span><span class="p">);</span>
        
        <span class="k">if</span> <span class="p">(!</span><span class="n">stock</span><span class="p">.</span><span class="nf">ContainsKey</span><span class="p">(</span><span class="n">produit</span><span class="p">)</span> <span class="p">||</span> <span class="n">stock</span><span class="p">[</span><span class="n">produit</span><span class="p">]</span> <span class="p">&lt;</span> <span class="n">quantite</span><span class="p">)</span>
            <span class="k">throw</span> <span class="k">new</span> <span class="nf">StockEpuiseException</span><span class="p">(</span><span class="n">produit</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">private</span> <span class="kt">decimal</span> <span class="nf">CalculerTotal</span><span class="p">(</span><span class="kt">string</span> <span class="n">produit</span><span class="p">,</span> <span class="kt">int</span> <span class="n">quantite</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="n">prix</span><span class="p">[</span><span class="n">produit</span><span class="p">]</span> <span class="p">*</span> <span class="n">quantite</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">private</span> <span class="k">void</span> <span class="nf">ProcesserPaiement</span><span class="p">(</span><span class="kt">decimal</span> <span class="n">montant</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="c1">// Simulation d'un paiement qui peut √©chouer</span>
        <span class="n">Random</span> <span class="n">random</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Random</span><span class="p">();</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">random</span><span class="p">.</span><span class="nf">Next</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="m">20</span><span class="p">)</span> <span class="p">==</span> <span class="m">1</span><span class="p">)</span> <span class="c1">// 5% de chance d'√©chec</span>
        <span class="p">{</span>
            <span class="k">throw</span> <span class="k">new</span> <span class="nf">InvalidOperationException</span><span class="p">(</span><span class="s">"Erreur de paiement - Carte refus√©e"</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">private</span> <span class="k">void</span> <span class="nf">MettreAJourStock</span><span class="p">(</span><span class="kt">string</span> <span class="n">produit</span><span class="p">,</span> <span class="kt">int</span> <span class="n">quantite</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">stock</span><span class="p">[</span><span class="n">produit</span><span class="p">]</span> <span class="p">-=</span> <span class="n">quantite</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">private</span> <span class="k">void</span> <span class="nf">GererErreur</span><span class="p">(</span><span class="kt">string</span> <span class="n">contexte</span><span class="p">,</span> <span class="n">Exception</span> <span class="n">ex</span><span class="p">,</span> <span class="kt">string</span> <span class="n">type</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="kt">string</span> <span class="n">messageErreur</span> <span class="p">=</span> <span class="s">$"[</span><span class="p">{</span><span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">:</span><span class="n">HH</span><span class="p">:</span><span class="n">mm</span><span class="p">:</span><span class="n">ss</span><span class="p">}</span><span class="s">] </span><span class="p">{</span><span class="n">contexte</span><span class="p">}</span><span class="s"> - </span><span class="p">{</span><span class="n">type</span><span class="p">}</span><span class="s">: </span><span class="p">{</span><span class="n">ex</span><span class="p">.</span><span class="n">Message</span><span class="p">}</span><span class="s">"</span><span class="p">;</span>
        <span class="n">historiqueErreurs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="n">messageErreur</span><span class="p">);</span>
        
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚ùå </span><span class="p">{</span><span class="n">type</span><span class="p">}</span><span class="s">: </span><span class="p">{</span><span class="n">ex</span><span class="p">.</span><span class="n">Message</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        
        <span class="c1">// Log d√©taill√© pour debug</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   D√©tail technique: </span><span class="p">{</span><span class="n">ex</span><span class="p">.</span><span class="nf">GetType</span><span class="p">().</span><span class="n">Name</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">private</span> <span class="k">void</span> <span class="nf">ProposerAlternatives</span><span class="p">(</span><span class="kt">string</span> <span class="n">produitDemande</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"üí° Alternatives disponibles :"</span><span class="p">);</span>
        <span class="k">foreach</span> <span class="p">(</span><span class="kt">var</span> <span class="n">item</span> <span class="k">in</span> <span class="n">stock</span><span class="p">.</span><span class="nf">Where</span><span class="p">(</span><span class="n">s</span> <span class="p">=&gt;</span> <span class="n">s</span><span class="p">.</span><span class="n">Value</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">))</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   - </span><span class="p">{</span><span class="n">item</span><span class="p">.</span><span class="n">Key</span><span class="p">}</span><span class="s"> (</span><span class="p">{</span><span class="n">item</span><span class="p">.</span><span class="n">Value</span><span class="p">}</span><span class="s"> disponibles) - </span><span class="p">{</span><span class="n">prix</span><span class="p">[</span><span class="n">item</span><span class="p">.</span><span class="n">Key</span><span class="p">]:</span><span class="n">C2</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">void</span> <span class="nf">AfficherStatut</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"üìä === STATUT DU SYST√àME ==="</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"Stock actuel :"</span><span class="p">);</span>
        <span class="k">foreach</span> <span class="p">(</span><span class="kt">var</span> <span class="n">item</span> <span class="k">in</span> <span class="n">stock</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">string</span> <span class="n">statut</span> <span class="p">=</span> <span class="n">item</span><span class="p">.</span><span class="n">Value</span> <span class="p">&gt;</span> <span class="m">5</span> <span class="p">?</span> <span class="s">"‚úÖ"</span> <span class="p">:</span> <span class="n">item</span><span class="p">.</span><span class="n">Value</span> <span class="p">&gt;</span> <span class="m">0</span> <span class="p">?</span> <span class="s">"‚ö†Ô∏è"</span> <span class="p">:</span> <span class="s">"‚ùå"</span><span class="p">;</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"  </span><span class="p">{</span><span class="n">statut</span><span class="p">}</span><span class="s"> </span><span class="p">{</span><span class="n">item</span><span class="p">.</span><span class="n">Key</span><span class="p">}</span><span class="s"> : </span><span class="p">{</span><span class="n">item</span><span class="p">.</span><span class="n">Value</span><span class="p">}</span><span class="s"> unit√©s"</span><span class="p">);</span>
        <span class="p">}</span>
        
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"\nErreurs enregistr√©es : </span><span class="p">{</span><span class="n">historiqueErreurs</span><span class="p">.</span><span class="n">Count</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">historiqueErreurs</span><span class="p">.</span><span class="n">Count</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"Derni√®res erreurs :"</span><span class="p">);</span>
            <span class="k">foreach</span> <span class="p">(</span><span class="kt">string</span> <span class="n">erreur</span> <span class="k">in</span> <span class="n">historiqueErreurs</span><span class="p">.</span><span class="nf">TakeLast</span><span class="p">(</span><span class="m">3</span><span class="p">))</span>
            <span class="p">{</span>
                <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"  </span><span class="p">{</span><span class="n">erreur</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="kt">var</span> <span class="n">systeme</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">SystemeCafeRobuste</span><span class="p">();</span>
        
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚òï === SYST√àME DE CAF√â ROBUSTE ===\n"</span><span class="p">);</span>
        
        <span class="c1">// Tests de commandes</span>
        <span class="n">systeme</span><span class="p">.</span><span class="nf">ProcesserCommande</span><span class="p">(</span><span class="s">"Marie"</span><span class="p">,</span> <span class="s">"Cappuccino"</span><span class="p">,</span> <span class="m">2</span><span class="p">);</span>      <span class="c1">// ‚úÖ Normal</span>
        <span class="n">systeme</span><span class="p">.</span><span class="nf">ProcesserCommande</span><span class="p">(</span><span class="s">""</span><span class="p">,</span> <span class="s">"Espresso"</span><span class="p">,</span> <span class="m">1</span><span class="p">);</span>             <span class="c1">// ‚ùå Client vide</span>
        <span class="n">systeme</span><span class="p">.</span><span class="nf">ProcesserCommande</span><span class="p">(</span><span class="s">"Paul"</span><span class="p">,</span> <span class="s">"Th√©"</span><span class="p">,</span> <span class="m">1</span><span class="p">);</span>              <span class="c1">// ‚ùå Produit inexistant</span>
        <span class="n">systeme</span><span class="p">.</span><span class="nf">ProcesserCommande</span><span class="p">(</span><span class="s">"Julie"</span><span class="p">,</span> <span class="s">"Latte"</span><span class="p">,</span> <span class="m">5</span><span class="p">);</span>           <span class="c1">// ‚ùå Stock insuffisant</span>
        <span class="n">systeme</span><span class="p">.</span><span class="nf">ProcesserCommande</span><span class="p">(</span><span class="s">"Tom"</span><span class="p">,</span> <span class="s">"Americano"</span><span class="p">,</span> <span class="m">15</span><span class="p">);</span>        <span class="c1">// ‚ùå Quantit√© trop √©lev√©e</span>
        <span class="n">systeme</span><span class="p">.</span><span class="nf">ProcesserCommande</span><span class="p">(</span><span class="s">"Emma"</span><span class="p">,</span> <span class="s">"Espresso"</span><span class="p">,</span> <span class="m">2</span><span class="p">);</span>         <span class="c1">// ‚úÖ Normal</span>
        
        <span class="c1">// Statut final</span>
        <span class="n">systeme</span><span class="p">.</span><span class="nf">AfficherStatut</span><span class="p">();</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="8-bonnes-pratiques-de-gestion-dexceptions">8. Bonnes pratiques de gestion d‚Äôexceptions</h2>

<h3 id="-exceptions-sp√©cifiques">‚úÖ Exceptions sp√©cifiques</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// ‚úÖ Bon - Exception sp√©cifique</span>
<span class="k">catch</span> <span class="p">(</span><span class="n">FileNotFoundException</span> <span class="n">ex</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"Fichier non trouv√©"</span><span class="p">);</span>
<span class="p">}</span>

<span class="c1">// ‚ùå √âviter - Trop g√©n√©ral</span>
<span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span> <span class="n">ex</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// Capture tout, difficile √† d√©boguer</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="-messages-derreur-utiles">‚úÖ Messages d‚Äôerreur utiles</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// ‚úÖ Message informatif</span>
<span class="k">throw</span> <span class="k">new</span> <span class="nf">ArgumentException</span><span class="p">(</span><span class="s">$"Stock insuffisant pour </span><span class="p">{</span><span class="n">produit</span><span class="p">}</span><span class="s">. Disponible: </span><span class="p">{</span><span class="n">stockActuel</span><span class="p">}</span><span class="s">, Demand√©: </span><span class="p">{</span><span class="n">quantite</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>

<span class="c1">// ‚ùå Message peu utile</span>
<span class="k">throw</span> <span class="k">new</span> <span class="nf">Exception</span><span class="p">(</span><span class="s">"Erreur"</span><span class="p">);</span>
</code></pre></div></div>

<h3 id="-logging-appropri√©">‚úÖ Logging appropri√©</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// ‚úÖ Log avec contexte</span>
<span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span> <span class="n">ex</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">logger</span><span class="p">.</span><span class="nf">LogError</span><span class="p">(</span><span class="s">$"Erreur lors de la commande </span><span class="p">{</span><span class="n">commandeId</span><span class="p">}</span><span class="s"> pour </span><span class="p">{</span><span class="n">client</span><span class="p">}</span><span class="s">: </span><span class="p">{</span><span class="n">ex</span><span class="p">.</span><span class="n">Message</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
    <span class="c1">// Puis gestion utilisateur</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="-nettoyage-avec-finally-ou-using">‚úÖ Nettoyage avec <code class="language-plaintext highlighter-rouge">finally</code> ou <code class="language-plaintext highlighter-rouge">using</code></h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// ‚úÖ Avec using (automatique)</span>
<span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">connexion</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">DatabaseConnection</span><span class="p">())</span>
<span class="p">{</span>
    <span class="c1">// Travail avec la connexion</span>
<span class="p">}</span> <span class="c1">// Fermeture automatique</span>

<span class="c1">// ‚úÖ Avec finally (manuel)</span>
<span class="n">FileStream</span> <span class="n">fichier</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>
<span class="k">try</span>
<span class="p">{</span>
    <span class="n">fichier</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">FileStream</span><span class="p">(</span><span class="s">"data.txt"</span><span class="p">,</span> <span class="n">FileMode</span><span class="p">.</span><span class="n">Open</span><span class="p">);</span>
    <span class="c1">// Travail avec le fichier</span>
<span class="p">}</span>
<span class="k">finally</span>
<span class="p">{</span>
    <span class="n">fichier</span><span class="p">?.</span><span class="nf">Close</span><span class="p">();</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="exercices-pratiques">Exercices pratiques</h2>

<h3 id="exercice-1--calculatrice-robuste">Exercice 1 : Calculatrice robuste</h3>
<p>Cr√©ez une calculatrice qui g√®re toutes les erreurs possibles (division par z√©ro, formats invalides, etc.).</p>

<h3 id="exercice-2--lecteur-de-fichier-s√©curis√©">Exercice 2 : Lecteur de fichier s√©curis√©</h3>
<p>Cr√©ez un syst√®me qui lit des commandes depuis un fichier avec gestion compl√®te des erreurs.</p>

<h3 id="exercice-3--api-de-caf√©-resiliente">Exercice 3 : API de caf√© resiliente</h3>
<p>Cr√©ez une classe qui simule un service web avec retry automatique en cas d‚Äôerreur.</p>

<hr />

<h2 id="conclusion">Conclusion</h2>

<p>La gestion d‚Äôexceptions est l‚Äôart de <strong>transformer les probl√®mes en solutions</strong> ! Elle nous permet de :</p>

<ul>
  <li>‚úÖ <strong>Anticiper les erreurs</strong> avec des validations</li>
  <li>‚úÖ <strong>G√©rer les exceptions</strong> avec <code class="language-plaintext highlighter-rouge">try...catch...finally</code></li>
  <li>‚úÖ <strong>Cr√©er des exceptions m√©tier</strong> sp√©cifiques</li>
  <li>‚úÖ <strong>Logger et tracer</strong> pour le d√©bogage</li>
  <li>‚úÖ <strong>Offrir une exp√©rience utilisateur</strong> fluide m√™me en cas d‚Äôerreur</li>
</ul>

<p>Comme un barista exp√©riment√© qui sait g√©rer toutes les situations impr√©vues, un d√©veloppeur ma√Ætrisant les exceptions cr√©e des applications fiables et professionnelles !</p>

<p><strong>Prochaine √©tape :</strong> Nous d√©couvrirons les m√©thodes et fonctions pour organiser et r√©utiliser notre code ! ‚òï</p>

<hr />

<p><em>Pratiquez avec ces exemples et cr√©ez vos propres gestionnaires d‚Äôerreurs. Un bon code, c‚Äôest comme un bon caf√© : pr√©par√© avec soin et attention aux d√©tails ! üöÄ</em></p>]]></content><author><name>MattDevBzh</name></author><summary type="html"><![CDATA[Dans un caf√©, tout ne se passe pas toujours comme pr√©vu ! Machine en panne, stock √©puis√©, commande incorrecte‚Ä¶ En programmation C#, les exceptions nous permettent de g√©rer ces situations inattendues avec √©l√©gance et professionnalisme. ‚òï]]></summary></entry><entry><title type="html">Collections et tableaux en C# : Organiser l‚Äôinventaire de votre caf√©</title><link href="http://0.0.0.0:4000/2025/01/29/collections-tableaux.html" rel="alternate" type="text/html" title="Collections et tableaux en C# : Organiser l‚Äôinventaire de votre caf√©" /><published>2025-01-29T00:00:00+00:00</published><updated>2025-01-29T00:00:00+00:00</updated><id>http://0.0.0.0:4000/2025/01/29/collections-tableaux</id><content type="html" xml:base="http://0.0.0.0:4000/2025/01/29/collections-tableaux.html"><![CDATA[<p>Un caf√© bien g√©r√©, c‚Äôest un caf√© o√π tout est <strong>organis√© et facilement accessible</strong> ! Comme les √©tag√®res de grains, les collections de tasses ou la liste des clients fid√®les. En C#, les <strong>collections et tableaux</strong> nous permettent de stocker et organiser efficacement nos donn√©es. ‚òï</p>

<p>D√©couvrons ensemble comment g√©rer l‚Äôinventaire complet de notre caf√© virtuel !</p>

<h2 id="sommaire">Sommaire</h2>
<ul id="markdown-toc">
  <li><a href="#sommaire" id="markdown-toc-sommaire">Sommaire</a></li>
  <li><a href="#quest-ce-quune-collection-" id="markdown-toc-quest-ce-quune-collection-">Qu‚Äôest-ce qu‚Äôune collection ?</a></li>
  <li><a href="#1-les-tableaux-array--des-cases-fixes" id="markdown-toc-1-les-tableaux-array--des-cases-fixes">1. Les tableaux (<code class="language-plaintext highlighter-rouge">Array</code>) : Des cases fixes</a>    <ul>
      <li><a href="#d√©claration-et-initialisation" id="markdown-toc-d√©claration-et-initialisation">D√©claration et initialisation</a></li>
      <li><a href="#exemple--stock-de-grains-par-origine" id="markdown-toc-exemple--stock-de-grains-par-origine">Exemple : Stock de grains par origine</a></li>
      <li><a href="#exemple--ventes-par-jour-de-la-semaine" id="markdown-toc-exemple--ventes-par-jour-de-la-semaine">Exemple : Ventes par jour de la semaine</a></li>
    </ul>
  </li>
  <li><a href="#2-les-tableaux-multidimensionnels--organiser-en-grille" id="markdown-toc-2-les-tableaux-multidimensionnels--organiser-en-grille">2. Les tableaux multidimensionnels : Organiser en grille</a>    <ul>
      <li><a href="#tableau-√†-2-dimensions--menu-avec-prix-et-stocks" id="markdown-toc-tableau-√†-2-dimensions--menu-avec-prix-et-stocks">Tableau √† 2 dimensions : Menu avec prix et stocks</a></li>
      <li><a href="#exemple--planning-des-baristas" id="markdown-toc-exemple--planning-des-baristas">Exemple : Planning des baristas</a></li>
    </ul>
  </li>
  <li><a href="#3-les-listes-listt--taille-dynamique" id="markdown-toc-3-les-listes-listt--taille-dynamique">3. Les listes (<code class="language-plaintext highlighter-rouge">List&lt;T&gt;</code>) : Taille dynamique</a>    <ul>
      <li><a href="#d√©claration-et-manipulation-de-base" id="markdown-toc-d√©claration-et-manipulation-de-base">D√©claration et manipulation de base</a></li>
      <li><a href="#exemple--gestion-dynamique-du-stock" id="markdown-toc-exemple--gestion-dynamique-du-stock">Exemple : Gestion dynamique du stock</a></li>
      <li><a href="#exemple--file-dattente-dynamique" id="markdown-toc-exemple--file-dattente-dynamique">Exemple : File d‚Äôattente dynamique</a></li>
    </ul>
  </li>
  <li><a href="#4-les-dictionnaires-dictionarykv--cl√©-valeur" id="markdown-toc-4-les-dictionnaires-dictionarykv--cl√©-valeur">4. Les dictionnaires (<code class="language-plaintext highlighter-rouge">Dictionary&lt;K,V&gt;</code>) : Cl√©-valeur</a>    <ul>
      <li><a href="#exemple--carte-des-prix" id="markdown-toc-exemple--carte-des-prix">Exemple : Carte des prix</a></li>
      <li><a href="#exemple--pr√©f√©rences-des-clients" id="markdown-toc-exemple--pr√©f√©rences-des-clients">Exemple : Pr√©f√©rences des clients</a></li>
    </ul>
  </li>
  <li><a href="#5-les-hashset--collections-uniques" id="markdown-toc-5-les-hashset--collections-uniques">5. Les HashSet : Collections uniques</a>    <ul>
      <li><a href="#exemple--gestion-des-allerg√®nes" id="markdown-toc-exemple--gestion-des-allerg√®nes">Exemple : Gestion des allerg√®nes</a></li>
    </ul>
  </li>
  <li><a href="#6-linq--requ√™tes-sur-les-collections" id="markdown-toc-6-linq--requ√™tes-sur-les-collections">6. LINQ : Requ√™tes sur les collections</a>    <ul>
      <li><a href="#exemple--analyses-de-ventes" id="markdown-toc-exemple--analyses-de-ventes">Exemple : Analyses de ventes</a></li>
    </ul>
  </li>
  <li><a href="#7-exemple-complet--syst√®me-de-gestion-de-caf√©" id="markdown-toc-7-exemple-complet--syst√®me-de-gestion-de-caf√©">7. Exemple complet : Syst√®me de gestion de caf√©</a></li>
  <li><a href="#8-bonnes-pratiques-et-performance" id="markdown-toc-8-bonnes-pratiques-et-performance">8. Bonnes pratiques et performance</a>    <ul>
      <li><a href="#-choisir-la-bonne-collection" id="markdown-toc--choisir-la-bonne-collection">‚úÖ Choisir la bonne collection</a></li>
      <li><a href="#-initialiser-avec-la-bonne-capacit√©" id="markdown-toc--initialiser-avec-la-bonne-capacit√©">‚úÖ Initialiser avec la bonne capacit√©</a></li>
      <li><a href="#-utiliser-linq-avec-mod√©ration" id="markdown-toc--utiliser-linq-avec-mod√©ration">‚úÖ Utiliser LINQ avec mod√©ration</a></li>
    </ul>
  </li>
  <li><a href="#exercices-pratiques" id="markdown-toc-exercices-pratiques">Exercices pratiques</a>    <ul>
      <li><a href="#exercice-1--gestionnaire-de-stock" id="markdown-toc-exercice-1--gestionnaire-de-stock">Exercice 1 : Gestionnaire de stock</a></li>
      <li><a href="#exercice-2--analyseur-de-pr√©f√©rences" id="markdown-toc-exercice-2--analyseur-de-pr√©f√©rences">Exercice 2 : Analyseur de pr√©f√©rences</a></li>
      <li><a href="#exercice-3--planificateur-de-tourn√©es" id="markdown-toc-exercice-3--planificateur-de-tourn√©es">Exercice 3 : Planificateur de tourn√©es</a></li>
    </ul>
  </li>
  <li><a href="#conclusion" id="markdown-toc-conclusion">Conclusion</a></li>
</ul>

<hr />

<h2 id="quest-ce-quune-collection-">Qu‚Äôest-ce qu‚Äôune collection ?</h2>

<p>Une <strong>collection</strong> est un conteneur qui peut stocker plusieurs √©l√©ments du m√™me type. C‚Äôest comme :</p>

<ul>
  <li>üì¶ <strong>Un bac de grains</strong> contenant diff√©rentes vari√©t√©s</li>
  <li>üìã <strong>Une liste de commandes</strong> en attente</li>
  <li>üè™ <strong>Un inventaire de produits</strong> avec leurs prix</li>
  <li>üë• <strong>Un fichier clients</strong> avec leurs pr√©f√©rences</li>
</ul>

<hr />

<h2 id="1-les-tableaux-array--des-cases-fixes">1. Les tableaux (<code class="language-plaintext highlighter-rouge">Array</code>) : Des cases fixes</h2>

<p>Un tableau a une <strong>taille fixe</strong> d√©finie √† la cr√©ation. C‚Äôest comme un portoir √† tasses qui a exactement 20 emplacements.</p>

<h3 id="d√©claration-et-initialisation">D√©claration et initialisation</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// D√©claration avec taille</span>
<span class="kt">string</span><span class="p">[]</span> <span class="n">menuCafes</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">string</span><span class="p">[</span><span class="m">5</span><span class="p">];</span>

<span class="c1">// Initialisation avec valeurs</span>
<span class="kt">string</span><span class="p">[]</span> <span class="n">varietesGrains</span> <span class="p">=</span> <span class="p">{</span><span class="s">"Arabica"</span><span class="p">,</span> <span class="s">"Robusta"</span><span class="p">,</span> <span class="s">"Liberica"</span><span class="p">,</span> <span class="s">"Excelsa"</span><span class="p">};</span>

<span class="c1">// D√©claration et initialisation en une fois</span>
<span class="kt">double</span><span class="p">[]</span> <span class="n">prixMenu</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">double</span><span class="p">[]</span> <span class="p">{</span><span class="m">2.50</span><span class="p">,</span> <span class="m">4.00</span><span class="p">,</span> <span class="m">4.50</span><span class="p">,</span> <span class="m">3.00</span><span class="p">,</span> <span class="m">3.80</span><span class="p">};</span>
</code></pre></div></div>

<h3 id="exemple--stock-de-grains-par-origine">Exemple : Stock de grains par origine</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Inventaire des grains par pays</span>
<span class="kt">string</span><span class="p">[]</span> <span class="n">origines</span> <span class="p">=</span> <span class="p">{</span><span class="s">"Colombie"</span><span class="p">,</span> <span class="s">"√âthiopie"</span><span class="p">,</span> <span class="s">"Guatemala"</span><span class="p">,</span> <span class="s">"Jama√Øque"</span><span class="p">,</span> <span class="s">"Yemen"</span><span class="p">};</span>
<span class="kt">int</span><span class="p">[]</span> <span class="n">stockKilos</span> <span class="p">=</span> <span class="p">{</span><span class="m">25</span><span class="p">,</span> <span class="m">18</span><span class="p">,</span> <span class="m">12</span><span class="p">,</span> <span class="m">8</span><span class="p">,</span> <span class="m">15</span><span class="p">};</span>

<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚òï === STOCK DE GRAINS PAR ORIGINE ==="</span><span class="p">);</span>

<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">origines</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"</span><span class="p">{</span><span class="n">origines</span><span class="p">[</span><span class="n">i</span><span class="p">]}</span><span class="s"> : </span><span class="p">{</span><span class="n">stockKilos</span><span class="p">[</span><span class="n">i</span><span class="p">]}</span><span class="s"> kg"</span><span class="p">);</span>
    
    <span class="k">if</span> <span class="p">(</span><span class="n">stockKilos</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">&lt;</span> <span class="m">10</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   ‚ö†Ô∏è Stock faible pour </span><span class="p">{</span><span class="n">origines</span><span class="p">[</span><span class="n">i</span><span class="p">]}</span><span class="s"> !"</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// Calcul du stock total</span>
<span class="kt">int</span> <span class="n">stockTotal</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
<span class="k">foreach</span> <span class="p">(</span><span class="kt">int</span> <span class="n">stock</span> <span class="k">in</span> <span class="n">stockKilos</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">stockTotal</span> <span class="p">+=</span> <span class="n">stock</span><span class="p">;</span>
<span class="p">}</span>

<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"\nüìä Stock total : </span><span class="p">{</span><span class="n">stockTotal</span><span class="p">}</span><span class="s"> kg"</span><span class="p">);</span>
</code></pre></div></div>

<h3 id="exemple--ventes-par-jour-de-la-semaine">Exemple : Ventes par jour de la semaine</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">string</span><span class="p">[]</span> <span class="n">joursSemaine</span> <span class="p">=</span> <span class="p">{</span><span class="s">"Lundi"</span><span class="p">,</span> <span class="s">"Mardi"</span><span class="p">,</span> <span class="s">"Mercredi"</span><span class="p">,</span> <span class="s">"Jeudi"</span><span class="p">,</span> <span class="s">"Vendredi"</span><span class="p">,</span> <span class="s">"Samedi"</span><span class="p">,</span> <span class="s">"Dimanche"</span><span class="p">};</span>
<span class="kt">double</span><span class="p">[]</span> <span class="n">ventesJour</span> <span class="p">=</span> <span class="p">{</span><span class="m">320.50</span><span class="p">,</span> <span class="m">385.20</span><span class="p">,</span> <span class="m">410.80</span><span class="p">,</span> <span class="m">445.30</span><span class="p">,</span> <span class="m">520.90</span><span class="p">,</span> <span class="m">680.40</span><span class="p">,</span> <span class="m">580.70</span><span class="p">};</span>

<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"üìä === VENTES HEBDOMADAIRES ==="</span><span class="p">);</span>

<span class="c1">// Affichage des ventes</span>
<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">joursSemaine</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"</span><span class="p">{</span><span class="n">joursSemaine</span><span class="p">[</span><span class="n">i</span><span class="p">]}</span><span class="s"> : </span><span class="p">{</span><span class="n">ventesJour</span><span class="p">[</span><span class="n">i</span><span class="p">]:</span><span class="n">C2</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
<span class="p">}</span>

<span class="c1">// Jour avec le plus de ventes</span>
<span class="kt">double</span> <span class="n">maxVentes</span> <span class="p">=</span> <span class="n">ventesJour</span><span class="p">[</span><span class="m">0</span><span class="p">];</span>
<span class="kt">int</span> <span class="n">jourMax</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>

<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">ventesJour</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">ventesJour</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">&gt;</span> <span class="n">maxVentes</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">maxVentes</span> <span class="p">=</span> <span class="n">ventesJour</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        <span class="n">jourMax</span> <span class="p">=</span> <span class="n">i</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"\nüèÜ Meilleur jour : </span><span class="p">{</span><span class="n">joursSemaine</span><span class="p">[</span><span class="n">jourMax</span><span class="p">]}</span><span class="s"> (</span><span class="p">{</span><span class="n">maxVentes</span><span class="p">:</span><span class="n">C2</span><span class="p">}</span><span class="s">)"</span><span class="p">);</span>
</code></pre></div></div>

<hr />

<h2 id="2-les-tableaux-multidimensionnels--organiser-en-grille">2. Les tableaux multidimensionnels : Organiser en grille</h2>

<h3 id="tableau-√†-2-dimensions--menu-avec-prix-et-stocks">Tableau √† 2 dimensions : Menu avec prix et stocks</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// [produit, 0=prix, 1=stock]</span>
<span class="kt">double</span><span class="p">[,]</span> <span class="n">inventaireCafe</span> <span class="p">=</span> <span class="p">{</span>
    <span class="p">{</span><span class="m">2.50</span><span class="p">,</span> <span class="m">50</span><span class="p">},</span>  <span class="c1">// Espresso : 2.50‚Ç¨, 50 unit√©s</span>
    <span class="p">{</span><span class="m">4.00</span><span class="p">,</span> <span class="m">35</span><span class="p">},</span>  <span class="c1">// Cappuccino : 4.00‚Ç¨, 35 unit√©s  </span>
    <span class="p">{</span><span class="m">4.50</span><span class="p">,</span> <span class="m">28</span><span class="p">},</span>  <span class="c1">// Latte : 4.50‚Ç¨, 28 unit√©s</span>
    <span class="p">{</span><span class="m">3.00</span><span class="p">,</span> <span class="m">42</span><span class="p">},</span>  <span class="c1">// Americano : 3.00‚Ç¨, 42 unit√©s</span>
    <span class="p">{</span><span class="m">3.80</span><span class="p">,</span> <span class="m">31</span><span class="p">}</span>   <span class="c1">// Macchiato : 3.80‚Ç¨, 31 unit√©s</span>
<span class="p">};</span>

<span class="kt">string</span><span class="p">[]</span> <span class="n">nomsProduits</span> <span class="p">=</span> <span class="p">{</span><span class="s">"Espresso"</span><span class="p">,</span> <span class="s">"Cappuccino"</span><span class="p">,</span> <span class="s">"Latte"</span><span class="p">,</span> <span class="s">"Americano"</span><span class="p">,</span> <span class="s">"Macchiato"</span><span class="p">};</span>

<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"üìã === INVENTAIRE D√âTAILL√â ==="</span><span class="p">);</span>
<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"Produit      | Prix   | Stock"</span><span class="p">);</span>
<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"-------------|--------|-------"</span><span class="p">);</span>

<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">nomsProduits</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
<span class="p">{</span>
    <span class="kt">double</span> <span class="n">prix</span> <span class="p">=</span> <span class="n">inventaireCafe</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="m">0</span><span class="p">];</span>
    <span class="kt">double</span> <span class="n">stock</span> <span class="p">=</span> <span class="n">inventaireCafe</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="m">1</span><span class="p">];</span>
    
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"</span><span class="p">{</span><span class="n">nomsProduits</span><span class="p">[</span><span class="n">i</span><span class="p">],-</span><span class="m">12</span><span class="p">}</span><span class="s"> | </span><span class="p">{</span><span class="n">prix</span><span class="p">,</span><span class="m">6</span><span class="p">:</span><span class="n">C2</span><span class="p">}</span><span class="s"> | </span><span class="p">{</span><span class="n">stock</span><span class="p">,</span><span class="m">5</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="exemple--planning-des-baristas">Exemple : Planning des baristas</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">string</span><span class="p">[,]</span> <span class="n">planningBaristas</span> <span class="p">=</span> <span class="p">{</span>
    <span class="p">{</span><span class="s">"Marie"</span><span class="p">,</span> <span class="s">"Paul"</span><span class="p">,</span> <span class="s">"Julie"</span><span class="p">},</span>    <span class="c1">// Lundi</span>
    <span class="p">{</span><span class="s">"Paul"</span><span class="p">,</span> <span class="s">"Tom"</span><span class="p">,</span> <span class="s">"Marie"</span><span class="p">},</span>      <span class="c1">// Mardi</span>
    <span class="p">{</span><span class="s">"Julie"</span><span class="p">,</span> <span class="s">"Marie"</span><span class="p">,</span> <span class="s">"Paul"</span><span class="p">},</span>    <span class="c1">// Mercredi</span>
    <span class="p">{</span><span class="s">"Tom"</span><span class="p">,</span> <span class="s">"Julie"</span><span class="p">,</span> <span class="s">"Marie"</span><span class="p">},</span>     <span class="c1">// Jeudi</span>
    <span class="p">{</span><span class="s">"Marie"</span><span class="p">,</span> <span class="s">"Paul"</span><span class="p">,</span> <span class="s">"Tom"</span><span class="p">}</span>       <span class="c1">// Vendredi</span>
<span class="p">};</span>

<span class="kt">string</span><span class="p">[]</span> <span class="n">jours</span> <span class="p">=</span> <span class="p">{</span><span class="s">"Lundi"</span><span class="p">,</span> <span class="s">"Mardi"</span><span class="p">,</span> <span class="s">"Mercredi"</span><span class="p">,</span> <span class="s">"Jeudi"</span><span class="p">,</span> <span class="s">"Vendredi"</span><span class="p">};</span>
<span class="kt">string</span><span class="p">[]</span> <span class="n">horaires</span> <span class="p">=</span> <span class="p">{</span><span class="s">"Matin"</span><span class="p">,</span> <span class="s">"Apr√®s-midi"</span><span class="p">,</span> <span class="s">"Soir"</span><span class="p">};</span>

<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"üë• === PLANNING DES BARISTAS ==="</span><span class="p">);</span>

<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">jour</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">jour</span> <span class="p">&lt;</span> <span class="m">5</span><span class="p">;</span> <span class="n">jour</span><span class="p">++)</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"\nüìÖ </span><span class="p">{</span><span class="n">jours</span><span class="p">[</span><span class="n">jour</span><span class="p">]}</span><span class="s"> :"</span><span class="p">);</span>
    
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">creneau</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">creneau</span> <span class="p">&lt;</span> <span class="m">3</span><span class="p">;</span> <span class="n">creneau</span><span class="p">++)</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"  </span><span class="p">{</span><span class="n">horaires</span><span class="p">[</span><span class="n">creneau</span><span class="p">]}</span><span class="s"> : </span><span class="p">{</span><span class="n">planningBaristas</span><span class="p">[</span><span class="n">jour</span><span class="p">,</span> <span class="n">creneau</span><span class="p">]}</span><span class="s">"</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="3-les-listes-listt--taille-dynamique">3. Les listes (<code class="language-plaintext highlighter-rouge">List&lt;T&gt;</code>) : Taille dynamique</h2>

<p>Les listes peuvent grandir ou diminuer selon les besoins. C‚Äôest comme une √©tag√®re extensible !</p>

<h3 id="d√©claration-et-manipulation-de-base">D√©claration et manipulation de base</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>

<span class="c1">// Cr√©ation d'une liste vide</span>
<span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="n">commandesEnCours</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;();</span>

<span class="c1">// Cr√©ation avec valeurs initiales</span>
<span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="n">clientsVIP</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="p">{</span><span class="s">"Marie Dupont"</span><span class="p">,</span> <span class="s">"Paul Martin"</span><span class="p">,</span> <span class="s">"Julie Leblanc"</span><span class="p">};</span>

<span class="c1">// Ajout d'√©l√©ments</span>
<span class="n">commandesEnCours</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="s">"Cappuccino pour Table 3"</span><span class="p">);</span>
<span class="n">commandesEnCours</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="s">"2 Espressos pour Emporter"</span><span class="p">);</span>
<span class="n">commandesEnCours</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="s">"Latte Art pour Marie"</span><span class="p">);</span>

<span class="c1">// Affichage</span>
<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"üìã === COMMANDES EN COURS ==="</span><span class="p">);</span>
<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">commandesEnCours</span><span class="p">.</span><span class="n">Count</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"</span><span class="p">{</span><span class="n">i</span> <span class="p">+</span> <span class="m">1</span><span class="p">}</span><span class="s">. </span><span class="p">{</span><span class="n">commandesEnCours</span><span class="p">[</span><span class="n">i</span><span class="p">]}</span><span class="s">"</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="exemple--gestion-dynamique-du-stock">Exemple : Gestion dynamique du stock</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="n">produitsManquants</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;();</span>
<span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">int</span><span class="p">&gt;</span> <span class="n">stocks</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">int</span><span class="p">&gt;</span>
<span class="p">{</span>
    <span class="p">{</span><span class="s">"Caf√© Arabica"</span><span class="p">,</span> <span class="m">25</span><span class="p">},</span>
    <span class="p">{</span><span class="s">"Lait entier"</span><span class="p">,</span> <span class="m">8</span><span class="p">},</span>
    <span class="p">{</span><span class="s">"Sucre blanc"</span><span class="p">,</span> <span class="m">15</span><span class="p">},</span>
    <span class="p">{</span><span class="s">"Tasses carton"</span><span class="p">,</span> <span class="m">45</span><span class="p">},</span>
    <span class="p">{</span><span class="s">"Couvercles"</span><span class="p">,</span> <span class="m">12</span><span class="p">}</span>
<span class="p">};</span>

<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"üîç === V√âRIFICATION DU STOCK ==="</span><span class="p">);</span>

<span class="k">foreach</span> <span class="p">(</span><span class="kt">var</span> <span class="n">produit</span> <span class="k">in</span> <span class="n">stocks</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"</span><span class="p">{</span><span class="n">produit</span><span class="p">.</span><span class="n">Key</span><span class="p">}</span><span class="s"> : </span><span class="p">{</span><span class="n">produit</span><span class="p">.</span><span class="n">Value</span><span class="p">}</span><span class="s"> unit√©s"</span><span class="p">);</span>
    
    <span class="k">if</span> <span class="p">(</span><span class="n">produit</span><span class="p">.</span><span class="n">Value</span> <span class="p">&lt;</span> <span class="m">20</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">produitsManquants</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="n">produit</span><span class="p">.</span><span class="n">Key</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   ‚ö†Ô∏è Stock faible !"</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"\nüì¶ === COMMANDE √Ä PASSER (</span><span class="p">{</span><span class="n">produitsManquants</span><span class="p">.</span><span class="n">Count</span><span class="p">}</span><span class="s"> produits) ==="</span><span class="p">);</span>
<span class="k">foreach</span> <span class="p">(</span><span class="kt">string</span> <span class="n">produit</span> <span class="k">in</span> <span class="n">produitsManquants</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"- </span><span class="p">{</span><span class="n">produit</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="exemple--file-dattente-dynamique">Exemple : File d‚Äôattente dynamique</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Client</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">Nom</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">Commande</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">public</span> <span class="n">DateTime</span> <span class="n">HeureCommande</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
<span class="p">}</span>

<span class="n">List</span><span class="p">&lt;</span><span class="n">Client</span><span class="p">&gt;</span> <span class="n">fileAttente</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">Client</span><span class="p">&gt;();</span>

<span class="c1">// Arriv√©e de clients</span>
<span class="n">fileAttente</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="n">Client</span> <span class="p">{</span> <span class="n">Nom</span> <span class="p">=</span> <span class="s">"Sophie"</span><span class="p">,</span> <span class="n">Commande</span> <span class="p">=</span> <span class="s">"Cappuccino"</span><span class="p">,</span> <span class="n">HeureCommande</span> <span class="p">=</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span> <span class="p">});</span>
<span class="n">fileAttente</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="n">Client</span> <span class="p">{</span> <span class="n">Nom</span> <span class="p">=</span> <span class="s">"Marc"</span><span class="p">,</span> <span class="n">Commande</span> <span class="p">=</span> <span class="s">"Espresso"</span><span class="p">,</span> <span class="n">HeureCommande</span> <span class="p">=</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">.</span><span class="nf">AddMinutes</span><span class="p">(</span><span class="m">1</span><span class="p">)</span> <span class="p">});</span>
<span class="n">fileAttente</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="n">Client</span> <span class="p">{</span> <span class="n">Nom</span> <span class="p">=</span> <span class="s">"Emma"</span><span class="p">,</span> <span class="n">Commande</span> <span class="p">=</span> <span class="s">"Latte"</span><span class="p">,</span> <span class="n">HeureCommande</span> <span class="p">=</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">.</span><span class="nf">AddMinutes</span><span class="p">(</span><span class="m">2</span><span class="p">)</span> <span class="p">});</span>

<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"üë• === FILE D'ATTENTE ==="</span><span class="p">);</span>
<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">fileAttente</span><span class="p">.</span><span class="n">Count</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
<span class="p">{</span>
    <span class="kt">var</span> <span class="n">client</span> <span class="p">=</span> <span class="n">fileAttente</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"</span><span class="p">{</span><span class="n">i</span> <span class="p">+</span> <span class="m">1</span><span class="p">}</span><span class="s">. </span><span class="p">{</span><span class="n">client</span><span class="p">.</span><span class="n">Nom</span><span class="p">}</span><span class="s"> - </span><span class="p">{</span><span class="n">client</span><span class="p">.</span><span class="n">Commande</span><span class="p">}</span><span class="s"> (</span><span class="p">{</span><span class="n">client</span><span class="p">.</span><span class="n">HeureCommande</span><span class="p">:</span><span class="n">HH</span><span class="p">:</span><span class="n">mm</span><span class="p">}</span><span class="s">)"</span><span class="p">);</span>
<span class="p">}</span>

<span class="c1">// Servir le premier client</span>
<span class="k">if</span> <span class="p">(</span><span class="n">fileAttente</span><span class="p">.</span><span class="n">Count</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">Client</span> <span class="n">clientServi</span> <span class="p">=</span> <span class="n">fileAttente</span><span class="p">[</span><span class="m">0</span><span class="p">];</span>
    <span class="n">fileAttente</span><span class="p">.</span><span class="nf">RemoveAt</span><span class="p">(</span><span class="m">0</span><span class="p">);</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"\n‚úÖ </span><span class="p">{</span><span class="n">clientServi</span><span class="p">.</span><span class="n">Nom</span><span class="p">}</span><span class="s"> servi(e) ! Plus que </span><span class="p">{</span><span class="n">fileAttente</span><span class="p">.</span><span class="n">Count</span><span class="p">}</span><span class="s"> clients en attente."</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="4-les-dictionnaires-dictionarykv--cl√©-valeur">4. Les dictionnaires (<code class="language-plaintext highlighter-rouge">Dictionary&lt;K,V&gt;</code>) : Cl√©-valeur</h2>

<p>Les dictionnaires stockent des paires cl√©-valeur. Parfait pour associer des informations !</p>

<h3 id="exemple--carte-des-prix">Exemple : Carte des prix</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">double</span><span class="p">&gt;</span> <span class="n">cartePrix</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">double</span><span class="p">&gt;</span>
<span class="p">{</span>
    <span class="p">{</span><span class="s">"Espresso"</span><span class="p">,</span> <span class="m">2.50</span><span class="p">},</span>
    <span class="p">{</span><span class="s">"Cappuccino"</span><span class="p">,</span> <span class="m">4.00</span><span class="p">},</span>
    <span class="p">{</span><span class="s">"Latte"</span><span class="p">,</span> <span class="m">4.50</span><span class="p">},</span>
    <span class="p">{</span><span class="s">"Americano"</span><span class="p">,</span> <span class="m">3.00</span><span class="p">},</span>
    <span class="p">{</span><span class="s">"Macchiato"</span><span class="p">,</span> <span class="m">3.80</span><span class="p">},</span>
    <span class="p">{</span><span class="s">"Mocha"</span><span class="p">,</span> <span class="m">5.00</span><span class="p">}</span>
<span class="p">};</span>

<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"üí∞ === CARTE DES PRIX ==="</span><span class="p">);</span>
<span class="k">foreach</span> <span class="p">(</span><span class="kt">var</span> <span class="n">item</span> <span class="k">in</span> <span class="n">cartePrix</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"</span><span class="p">{</span><span class="n">item</span><span class="p">.</span><span class="n">Key</span><span class="p">,-</span><span class="m">12</span><span class="p">}</span><span class="s"> : </span><span class="p">{</span><span class="n">item</span><span class="p">.</span><span class="n">Value</span><span class="p">:</span><span class="n">C2</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
<span class="p">}</span>

<span class="c1">// Recherche d'un prix</span>
<span class="kt">string</span> <span class="n">cafeRecherche</span> <span class="p">=</span> <span class="s">"Latte"</span><span class="p">;</span>
<span class="k">if</span> <span class="p">(</span><span class="n">cartePrix</span><span class="p">.</span><span class="nf">ContainsKey</span><span class="p">(</span><span class="n">cafeRecherche</span><span class="p">))</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"\nüîç Prix du </span><span class="p">{</span><span class="n">cafeRecherche</span><span class="p">}</span><span class="s"> : </span><span class="p">{</span><span class="n">cartePrix</span><span class="p">[</span><span class="n">cafeRecherche</span><span class="p">]:</span><span class="n">C2</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
<span class="p">}</span>
<span class="k">else</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"\n‚ùå </span><span class="p">{</span><span class="n">cafeRecherche</span><span class="p">}</span><span class="s"> non trouv√© dans la carte"</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="exemple--pr√©f√©rences-des-clients">Exemple : Pr√©f√©rences des clients</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;&gt;</span> <span class="n">preferencesClients</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;&gt;</span>
<span class="p">{</span>
    <span class="p">{</span><span class="s">"Marie"</span><span class="p">,</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="p">{</span><span class="s">"Cappuccino"</span><span class="p">,</span> <span class="s">"Sucre brun"</span><span class="p">,</span> <span class="s">"Lait d'avoine"</span><span class="p">}},</span>
    <span class="p">{</span><span class="s">"Paul"</span><span class="p">,</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="p">{</span><span class="s">"Espresso"</span><span class="p">,</span> <span class="s">"Sans sucre"</span><span class="p">,</span> <span class="s">"Double dose"</span><span class="p">}},</span>
    <span class="p">{</span><span class="s">"Julie"</span><span class="p">,</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="p">{</span><span class="s">"Latte"</span><span class="p">,</span> <span class="s">"Vanille"</span><span class="p">,</span> <span class="s">"Lait √©cr√©m√©"</span><span class="p">}},</span>
    <span class="p">{</span><span class="s">"Tom"</span><span class="p">,</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="p">{</span><span class="s">"Americano"</span><span class="p">,</span> <span class="s">"Miel"</span><span class="p">,</span> <span class="s">"Grande taille"</span><span class="p">}}</span>
<span class="p">};</span>

<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"üí° === PR√âF√âRENCES CLIENTS ==="</span><span class="p">);</span>

<span class="k">foreach</span> <span class="p">(</span><span class="kt">var</span> <span class="n">client</span> <span class="k">in</span> <span class="n">preferencesClients</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"\nüë§ </span><span class="p">{</span><span class="n">client</span><span class="p">.</span><span class="n">Key</span><span class="p">}</span><span class="s"> :"</span><span class="p">);</span>
    <span class="k">foreach</span> <span class="p">(</span><span class="kt">string</span> <span class="n">preference</span> <span class="k">in</span> <span class="n">client</span><span class="p">.</span><span class="n">Value</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   ‚Ä¢ </span><span class="p">{</span><span class="n">preference</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// Personnaliser une commande</span>
<span class="kt">string</span> <span class="n">clientActuel</span> <span class="p">=</span> <span class="s">"Marie"</span><span class="p">;</span>
<span class="k">if</span> <span class="p">(</span><span class="n">preferencesClients</span><span class="p">.</span><span class="nf">ContainsKey</span><span class="p">(</span><span class="n">clientActuel</span><span class="p">))</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"\n‚òï Pr√©paration personnalis√©e pour </span><span class="p">{</span><span class="n">clientActuel</span><span class="p">}</span><span class="s"> :"</span><span class="p">);</span>
    <span class="k">foreach</span> <span class="p">(</span><span class="kt">string</span> <span class="n">pref</span> <span class="k">in</span> <span class="n">preferencesClients</span><span class="p">[</span><span class="n">clientActuel</span><span class="p">])</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚úì </span><span class="p">{</span><span class="n">pref</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="5-les-hashset--collections-uniques">5. Les HashSet : Collections uniques</h2>

<p>Un HashSet ne contient pas de doublons. Parfait pour les listes d‚Äôallerg√®nes ou d‚Äôingr√©dients !</p>

<h3 id="exemple--gestion-des-allerg√®nes">Exemple : Gestion des allerg√®nes</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">HashSet</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="n">allergenesPresents</span> <span class="p">=</span> <span class="k">new</span> <span class="n">HashSet</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;();</span>

<span class="c1">// Ajouter des allerg√®nes</span>
<span class="n">allergenesPresents</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="s">"Lait"</span><span class="p">);</span>
<span class="n">allergenesPresents</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="s">"Gluten"</span><span class="p">);</span>
<span class="n">allergenesPresents</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="s">"Fruits √† coque"</span><span class="p">);</span>
<span class="n">allergenesPresents</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="s">"Lait"</span><span class="p">);</span> <span class="c1">// Sera ignor√© (doublon)</span>

<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚ö†Ô∏è === ALLERG√àNES PR√âSENTS ==="</span><span class="p">);</span>
<span class="k">foreach</span> <span class="p">(</span><span class="kt">string</span> <span class="n">allergene</span> <span class="k">in</span> <span class="n">allergenesPresents</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"- </span><span class="p">{</span><span class="n">allergene</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
<span class="p">}</span>

<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"\nNombre d'allerg√®nes diff√©rents : </span><span class="p">{</span><span class="n">allergenesPresents</span><span class="p">.</span><span class="n">Count</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>

<span class="c1">// V√©rifier la pr√©sence d'un allerg√®ne</span>
<span class="kt">string</span> <span class="n">allergeneTest</span> <span class="p">=</span> <span class="s">"Lait"</span><span class="p">;</span>
<span class="k">if</span> <span class="p">(</span><span class="n">allergenesPresents</span><span class="p">.</span><span class="nf">Contains</span><span class="p">(</span><span class="n">allergeneTest</span><span class="p">))</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"\n‚ö†Ô∏è Attention : Produits contenant du </span><span class="p">{</span><span class="n">allergeneTest</span><span class="p">}</span><span class="s"> !"</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="6-linq--requ√™tes-sur-les-collections">6. LINQ : Requ√™tes sur les collections</h2>

<p>LINQ (Language Integrated Query) permet de faire des requ√™tes sophistiqu√©es sur les collections.</p>

<h3 id="exemple--analyses-de-ventes">Exemple : Analyses de ventes</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">using</span> <span class="nn">System.Linq</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Vente</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">Produit</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">public</span> <span class="kt">double</span> <span class="n">Prix</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">public</span> <span class="n">DateTime</span> <span class="n">Date</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">Client</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
<span class="p">}</span>

<span class="n">List</span><span class="p">&lt;</span><span class="n">Vente</span><span class="p">&gt;</span> <span class="n">ventesJour</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">Vente</span><span class="p">&gt;</span>
<span class="p">{</span>
    <span class="k">new</span> <span class="n">Vente</span> <span class="p">{</span> <span class="n">Produit</span> <span class="p">=</span> <span class="s">"Cappuccino"</span><span class="p">,</span> <span class="n">Prix</span> <span class="p">=</span> <span class="m">4.00</span><span class="p">,</span> <span class="n">Date</span> <span class="p">=</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Today</span><span class="p">.</span><span class="nf">AddHours</span><span class="p">(</span><span class="m">8</span><span class="p">),</span> <span class="n">Client</span> <span class="p">=</span> <span class="s">"Marie"</span> <span class="p">},</span>
    <span class="k">new</span> <span class="n">Vente</span> <span class="p">{</span> <span class="n">Produit</span> <span class="p">=</span> <span class="s">"Espresso"</span><span class="p">,</span> <span class="n">Prix</span> <span class="p">=</span> <span class="m">2.50</span><span class="p">,</span> <span class="n">Date</span> <span class="p">=</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Today</span><span class="p">.</span><span class="nf">AddHours</span><span class="p">(</span><span class="m">9</span><span class="p">),</span> <span class="n">Client</span> <span class="p">=</span> <span class="s">"Paul"</span> <span class="p">},</span>
    <span class="k">new</span> <span class="n">Vente</span> <span class="p">{</span> <span class="n">Produit</span> <span class="p">=</span> <span class="s">"Latte"</span><span class="p">,</span> <span class="n">Prix</span> <span class="p">=</span> <span class="m">4.50</span><span class="p">,</span> <span class="n">Date</span> <span class="p">=</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Today</span><span class="p">.</span><span class="nf">AddHours</span><span class="p">(</span><span class="m">10</span><span class="p">),</span> <span class="n">Client</span> <span class="p">=</span> <span class="s">"Julie"</span> <span class="p">},</span>
    <span class="k">new</span> <span class="n">Vente</span> <span class="p">{</span> <span class="n">Produit</span> <span class="p">=</span> <span class="s">"Cappuccino"</span><span class="p">,</span> <span class="n">Prix</span> <span class="p">=</span> <span class="m">4.00</span><span class="p">,</span> <span class="n">Date</span> <span class="p">=</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Today</span><span class="p">.</span><span class="nf">AddHours</span><span class="p">(</span><span class="m">11</span><span class="p">),</span> <span class="n">Client</span> <span class="p">=</span> <span class="s">"Tom"</span> <span class="p">},</span>
    <span class="k">new</span> <span class="n">Vente</span> <span class="p">{</span> <span class="n">Produit</span> <span class="p">=</span> <span class="s">"Americano"</span><span class="p">,</span> <span class="n">Prix</span> <span class="p">=</span> <span class="m">3.00</span><span class="p">,</span> <span class="n">Date</span> <span class="p">=</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Today</span><span class="p">.</span><span class="nf">AddHours</span><span class="p">(</span><span class="m">12</span><span class="p">),</span> <span class="n">Client</span> <span class="p">=</span> <span class="s">"Emma"</span> <span class="p">}</span>
<span class="p">};</span>

<span class="c1">// Ventes de plus de 3‚Ç¨</span>
<span class="kt">var</span> <span class="n">ventesCheres</span> <span class="p">=</span> <span class="n">ventesJour</span><span class="p">.</span><span class="nf">Where</span><span class="p">(</span><span class="n">v</span> <span class="p">=&gt;</span> <span class="n">v</span><span class="p">.</span><span class="n">Prix</span> <span class="p">&gt;</span> <span class="m">3.00</span><span class="p">);</span>
<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"üí∞ === VENTES &gt; 3‚Ç¨ ==="</span><span class="p">);</span>
<span class="k">foreach</span> <span class="p">(</span><span class="kt">var</span> <span class="n">vente</span> <span class="k">in</span> <span class="n">ventesCheres</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"</span><span class="p">{</span><span class="n">vente</span><span class="p">.</span><span class="n">Produit</span><span class="p">}</span><span class="s"> - </span><span class="p">{</span><span class="n">vente</span><span class="p">.</span><span class="n">Prix</span><span class="p">:</span><span class="n">C2</span><span class="p">}</span><span class="s"> (</span><span class="p">{</span><span class="n">vente</span><span class="p">.</span><span class="n">Client</span><span class="p">}</span><span class="s">)"</span><span class="p">);</span>
<span class="p">}</span>

<span class="c1">// Ventes group√©es par produit</span>
<span class="kt">var</span> <span class="n">ventesParProduit</span> <span class="p">=</span> <span class="n">ventesJour</span><span class="p">.</span><span class="nf">GroupBy</span><span class="p">(</span><span class="n">v</span> <span class="p">=&gt;</span> <span class="n">v</span><span class="p">.</span><span class="n">Produit</span><span class="p">);</span>
<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"\nüìä === VENTES PAR PRODUIT ==="</span><span class="p">);</span>
<span class="k">foreach</span> <span class="p">(</span><span class="kt">var</span> <span class="n">groupe</span> <span class="k">in</span> <span class="n">ventesParProduit</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">quantite</span> <span class="p">=</span> <span class="n">groupe</span><span class="p">.</span><span class="nf">Count</span><span class="p">();</span>
    <span class="kt">double</span> <span class="n">total</span> <span class="p">=</span> <span class="n">groupe</span><span class="p">.</span><span class="nf">Sum</span><span class="p">(</span><span class="n">v</span> <span class="p">=&gt;</span> <span class="n">v</span><span class="p">.</span><span class="n">Prix</span><span class="p">);</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"</span><span class="p">{</span><span class="n">groupe</span><span class="p">.</span><span class="n">Key</span><span class="p">}</span><span class="s"> : </span><span class="p">{</span><span class="n">quantite</span><span class="p">}</span><span class="s"> unit√©s, </span><span class="p">{</span><span class="n">total</span><span class="p">:</span><span class="n">C2</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
<span class="p">}</span>

<span class="c1">// Chiffre d'affaires total</span>
<span class="kt">double</span> <span class="n">totalJournee</span> <span class="p">=</span> <span class="n">ventesJour</span><span class="p">.</span><span class="nf">Sum</span><span class="p">(</span><span class="n">v</span> <span class="p">=&gt;</span> <span class="n">v</span><span class="p">.</span><span class="n">Prix</span><span class="p">);</span>
<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"\nüí∞ Total journ√©e : </span><span class="p">{</span><span class="n">totalJournee</span><span class="p">:</span><span class="n">C2</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>

<span class="c1">// Produit le plus vendu</span>
<span class="kt">var</span> <span class="n">produitPopulaire</span> <span class="p">=</span> <span class="n">ventesJour</span><span class="p">.</span><span class="nf">GroupBy</span><span class="p">(</span><span class="n">v</span> <span class="p">=&gt;</span> <span class="n">v</span><span class="p">.</span><span class="n">Produit</span><span class="p">)</span>
                                <span class="p">.</span><span class="nf">OrderByDescending</span><span class="p">(</span><span class="n">g</span> <span class="p">=&gt;</span> <span class="n">g</span><span class="p">.</span><span class="nf">Count</span><span class="p">())</span>
                                <span class="p">.</span><span class="nf">First</span><span class="p">();</span>
<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"üèÜ Produit populaire : </span><span class="p">{</span><span class="n">produitPopulaire</span><span class="p">.</span><span class="n">Key</span><span class="p">}</span><span class="s"> (</span><span class="p">{</span><span class="n">produitPopulaire</span><span class="p">.</span><span class="nf">Count</span><span class="p">()}</span><span class="s"> ventes)"</span><span class="p">);</span>
</code></pre></div></div>

<hr />

<h2 id="7-exemple-complet--syst√®me-de-gestion-de-caf√©">7. Exemple complet : Syst√®me de gestion de caf√©</h2>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Linq</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Produit</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">Nom</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">public</span> <span class="kt">double</span> <span class="n">Prix</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">public</span> <span class="kt">int</span> <span class="n">Stock</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">public</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="n">Ingredients</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
<span class="p">}</span>

<span class="k">class</span> <span class="nc">Commande</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">Client</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">public</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="n">Produits</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">public</span> <span class="n">DateTime</span> <span class="n">Heure</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">public</span> <span class="kt">double</span> <span class="n">Total</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
<span class="p">}</span>

<span class="k">class</span> <span class="nc">GestionCafe</span>
<span class="p">{</span>
    <span class="k">private</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="n">Produit</span><span class="p">&gt;</span> <span class="n">catalogue</span><span class="p">;</span>
    <span class="k">private</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">Commande</span><span class="p">&gt;</span> <span class="n">commandesJour</span><span class="p">;</span>
    <span class="k">private</span> <span class="n">HashSet</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="n">clientsVIP</span><span class="p">;</span>

    <span class="k">public</span> <span class="nf">GestionCafe</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nf">InitialiserCatalogue</span><span class="p">();</span>
        <span class="n">commandesJour</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">Commande</span><span class="p">&gt;();</span>
        <span class="n">clientsVIP</span> <span class="p">=</span> <span class="k">new</span> <span class="n">HashSet</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="p">{</span><span class="s">"Marie"</span><span class="p">,</span> <span class="s">"Paul"</span><span class="p">,</span> <span class="s">"Julie"</span><span class="p">};</span>
    <span class="p">}</span>

    <span class="k">private</span> <span class="k">void</span> <span class="nf">InitialiserCatalogue</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="n">catalogue</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="n">Produit</span><span class="p">&gt;</span>
        <span class="p">{</span>
            <span class="p">[</span><span class="s">"Espresso"</span><span class="p">]</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Produit</span> 
            <span class="p">{</span> 
                <span class="n">Nom</span> <span class="p">=</span> <span class="s">"Espresso"</span><span class="p">,</span> 
                <span class="n">Prix</span> <span class="p">=</span> <span class="m">2.50</span><span class="p">,</span> 
                <span class="n">Stock</span> <span class="p">=</span> <span class="m">50</span><span class="p">,</span>
                <span class="n">Ingredients</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="p">{</span><span class="s">"Caf√© arabica"</span><span class="p">,</span> <span class="s">"Eau"</span><span class="p">}</span>
            <span class="p">},</span>
            <span class="p">[</span><span class="s">"Cappuccino"</span><span class="p">]</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Produit</span> 
            <span class="p">{</span> 
                <span class="n">Nom</span> <span class="p">=</span> <span class="s">"Cappuccino"</span><span class="p">,</span> 
                <span class="n">Prix</span> <span class="p">=</span> <span class="m">4.00</span><span class="p">,</span> 
                <span class="n">Stock</span> <span class="p">=</span> <span class="m">35</span><span class="p">,</span>
                <span class="n">Ingredients</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="p">{</span><span class="s">"Caf√© arabica"</span><span class="p">,</span> <span class="s">"Lait"</span><span class="p">,</span> <span class="s">"Mousse de lait"</span><span class="p">}</span>
            <span class="p">},</span>
            <span class="p">[</span><span class="s">"Latte"</span><span class="p">]</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Produit</span> 
            <span class="p">{</span> 
                <span class="n">Nom</span> <span class="p">=</span> <span class="s">"Latte"</span><span class="p">,</span> 
                <span class="n">Prix</span> <span class="p">=</span> <span class="m">4.50</span><span class="p">,</span> 
                <span class="n">Stock</span> <span class="p">=</span> <span class="m">28</span><span class="p">,</span>
                <span class="n">Ingredients</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="p">{</span><span class="s">"Caf√© arabica"</span><span class="p">,</span> <span class="s">"Lait"</span><span class="p">,</span> <span class="s">"Mousse l√©g√®re"</span><span class="p">}</span>
            <span class="p">}</span>
        <span class="p">};</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">void</span> <span class="nf">AfficherCatalogue</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚òï === CATALOGUE ==="</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"Produit      | Prix   | Stock | Ingr√©dients"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"-------------|--------|-------|------------------"</span><span class="p">);</span>
        
        <span class="k">foreach</span> <span class="p">(</span><span class="kt">var</span> <span class="n">item</span> <span class="k">in</span> <span class="n">catalogue</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">var</span> <span class="n">produit</span> <span class="p">=</span> <span class="n">item</span><span class="p">.</span><span class="n">Value</span><span class="p">;</span>
            <span class="kt">string</span> <span class="n">ingredients</span> <span class="p">=</span> <span class="kt">string</span><span class="p">.</span><span class="nf">Join</span><span class="p">(</span><span class="s">", "</span><span class="p">,</span> <span class="n">produit</span><span class="p">.</span><span class="n">Ingredients</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"</span><span class="p">{</span><span class="n">produit</span><span class="p">.</span><span class="n">Nom</span><span class="p">,-</span><span class="m">12</span><span class="p">}</span><span class="s"> | </span><span class="p">{</span><span class="n">produit</span><span class="p">.</span><span class="n">Prix</span><span class="p">,</span><span class="m">6</span><span class="p">:</span><span class="n">C2</span><span class="p">}</span><span class="s"> | </span><span class="p">{</span><span class="n">produit</span><span class="p">.</span><span class="n">Stock</span><span class="p">,</span><span class="m">5</span><span class="p">}</span><span class="s"> | </span><span class="p">{</span><span class="n">ingredients</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="kt">bool</span> <span class="nf">PasserCommande</span><span class="p">(</span><span class="kt">string</span> <span class="n">client</span><span class="p">,</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="n">produitsCommandes</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="c1">// V√©rifier la disponibilit√©</span>
        <span class="k">foreach</span> <span class="p">(</span><span class="kt">string</span> <span class="n">produitNom</span> <span class="k">in</span> <span class="n">produitsCommandes</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span> <span class="p">(!</span><span class="n">catalogue</span><span class="p">.</span><span class="nf">ContainsKey</span><span class="p">(</span><span class="n">produitNom</span><span class="p">)</span> <span class="p">||</span> <span class="n">catalogue</span><span class="p">[</span><span class="n">produitNom</span><span class="p">].</span><span class="n">Stock</span> <span class="p">&lt;=</span> <span class="m">0</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚ùå </span><span class="p">{</span><span class="n">produitNom</span><span class="p">}</span><span class="s"> non disponible"</span><span class="p">);</span>
                <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>

        <span class="c1">// Calculer le total</span>
        <span class="kt">double</span> <span class="n">total</span> <span class="p">=</span> <span class="n">produitsCommandes</span><span class="p">.</span><span class="nf">Sum</span><span class="p">(</span><span class="n">p</span> <span class="p">=&gt;</span> <span class="n">catalogue</span><span class="p">[</span><span class="n">p</span><span class="p">].</span><span class="n">Prix</span><span class="p">);</span>
        
        <span class="c1">// Remise VIP</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">clientsVIP</span><span class="p">.</span><span class="nf">Contains</span><span class="p">(</span><span class="n">client</span><span class="p">))</span>
        <span class="p">{</span>
            <span class="n">total</span> <span class="p">*=</span> <span class="m">0.9</span><span class="p">;</span> <span class="c1">// 10% de remise</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"üåü Remise VIP appliqu√©e pour </span><span class="p">{</span><span class="n">client</span><span class="p">}</span><span class="s"> !"</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="c1">// Cr√©er la commande</span>
        <span class="kt">var</span> <span class="n">commande</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Commande</span>
        <span class="p">{</span>
            <span class="n">Client</span> <span class="p">=</span> <span class="n">client</span><span class="p">,</span>
            <span class="n">Produits</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;(</span><span class="n">produitsCommandes</span><span class="p">),</span>
            <span class="n">Heure</span> <span class="p">=</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">,</span>
            <span class="n">Total</span> <span class="p">=</span> <span class="n">total</span>
        <span class="p">};</span>

        <span class="c1">// D√©cr√©menter le stock</span>
        <span class="k">foreach</span> <span class="p">(</span><span class="kt">string</span> <span class="n">produitNom</span> <span class="k">in</span> <span class="n">produitsCommandes</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">catalogue</span><span class="p">[</span><span class="n">produitNom</span><span class="p">].</span><span class="n">Stock</span><span class="p">--;</span>
        <span class="p">}</span>

        <span class="n">commandesJour</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="n">commande</span><span class="p">);</span>
        
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚úÖ Commande enregistr√©e pour </span><span class="p">{</span><span class="n">client</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Produits : </span><span class="p">{</span><span class="kt">string</span><span class="p">.</span><span class="nf">Join</span><span class="p">(</span><span class="s">", "</span><span class="p">,</span> <span class="n">produitsCommandes</span><span class="p">)}</span><span class="s">"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Total : </span><span class="p">{</span><span class="n">total</span><span class="p">:</span><span class="n">C2</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        
        <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">void</span> <span class="nf">AfficherStatistiques</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"\nüìä === STATISTIQUES DU JOUR ==="</span><span class="p">);</span>
        
        <span class="k">if</span> <span class="p">(</span><span class="n">commandesJour</span><span class="p">.</span><span class="n">Count</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"Aucune commande aujourd'hui."</span><span class="p">);</span>
            <span class="k">return</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="c1">// Chiffre d'affaires</span>
        <span class="kt">double</span> <span class="n">ca</span> <span class="p">=</span> <span class="n">commandesJour</span><span class="p">.</span><span class="nf">Sum</span><span class="p">(</span><span class="n">c</span> <span class="p">=&gt;</span> <span class="n">c</span><span class="p">.</span><span class="n">Total</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"üí∞ Chiffre d'affaires : </span><span class="p">{</span><span class="n">ca</span><span class="p">:</span><span class="n">C2</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        
        <span class="c1">// Nombre de commandes</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"üìã Nombre de commandes : </span><span class="p">{</span><span class="n">commandesJour</span><span class="p">.</span><span class="n">Count</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        
        <span class="c1">// Produits les plus vendus</span>
        <span class="kt">var</span> <span class="n">produitsVendus</span> <span class="p">=</span> <span class="n">commandesJour</span><span class="p">.</span><span class="nf">SelectMany</span><span class="p">(</span><span class="n">c</span> <span class="p">=&gt;</span> <span class="n">c</span><span class="p">.</span><span class="n">Produits</span><span class="p">)</span>
                                         <span class="p">.</span><span class="nf">GroupBy</span><span class="p">(</span><span class="n">p</span> <span class="p">=&gt;</span> <span class="n">p</span><span class="p">)</span>
                                         <span class="p">.</span><span class="nf">OrderByDescending</span><span class="p">(</span><span class="n">g</span> <span class="p">=&gt;</span> <span class="n">g</span><span class="p">.</span><span class="nf">Count</span><span class="p">());</span>
        
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"\nüèÜ Top des ventes :"</span><span class="p">);</span>
        <span class="k">foreach</span> <span class="p">(</span><span class="kt">var</span> <span class="n">groupe</span> <span class="k">in</span> <span class="n">produitsVendus</span><span class="p">.</span><span class="nf">Take</span><span class="p">(</span><span class="m">3</span><span class="p">))</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   </span><span class="p">{</span><span class="n">groupe</span><span class="p">.</span><span class="n">Key</span><span class="p">}</span><span class="s"> : </span><span class="p">{</span><span class="n">groupe</span><span class="p">.</span><span class="nf">Count</span><span class="p">()}</span><span class="s"> unit√©s"</span><span class="p">);</span>
        <span class="p">}</span>
        
        <span class="c1">// Clients les plus actifs</span>
        <span class="kt">var</span> <span class="n">clientsActifs</span> <span class="p">=</span> <span class="n">commandesJour</span><span class="p">.</span><span class="nf">GroupBy</span><span class="p">(</span><span class="n">c</span> <span class="p">=&gt;</span> <span class="n">c</span><span class="p">.</span><span class="n">Client</span><span class="p">)</span>
                                       <span class="p">.</span><span class="nf">OrderByDescending</span><span class="p">(</span><span class="n">g</span> <span class="p">=&gt;</span> <span class="n">g</span><span class="p">.</span><span class="nf">Count</span><span class="p">());</span>
        
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"\nüë• Clients les plus actifs :"</span><span class="p">);</span>
        <span class="k">foreach</span> <span class="p">(</span><span class="kt">var</span> <span class="n">groupe</span> <span class="k">in</span> <span class="n">clientsActifs</span><span class="p">.</span><span class="nf">Take</span><span class="p">(</span><span class="m">3</span><span class="p">))</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   </span><span class="p">{</span><span class="n">groupe</span><span class="p">.</span><span class="n">Key</span><span class="p">}</span><span class="s"> : </span><span class="p">{</span><span class="n">groupe</span><span class="p">.</span><span class="nf">Count</span><span class="p">()}</span><span class="s"> commandes"</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="n">GestionCafe</span> <span class="n">cafe</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">GestionCafe</span><span class="p">();</span>
        
        <span class="c1">// Afficher le catalogue</span>
        <span class="n">cafe</span><span class="p">.</span><span class="nf">AfficherCatalogue</span><span class="p">();</span>
        
        <span class="c1">// Passer quelques commandes</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"\nüîÑ === SIMULATION DE COMMANDES ==="</span><span class="p">);</span>
        
        <span class="n">cafe</span><span class="p">.</span><span class="nf">PasserCommande</span><span class="p">(</span><span class="s">"Marie"</span><span class="p">,</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="p">{</span><span class="s">"Cappuccino"</span><span class="p">,</span> <span class="s">"Espresso"</span><span class="p">});</span>
        <span class="n">cafe</span><span class="p">.</span><span class="nf">PasserCommande</span><span class="p">(</span><span class="s">"Paul"</span><span class="p">,</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="p">{</span><span class="s">"Latte"</span><span class="p">});</span>
        <span class="n">cafe</span><span class="p">.</span><span class="nf">PasserCommande</span><span class="p">(</span><span class="s">"Julie"</span><span class="p">,</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="p">{</span><span class="s">"Cappuccino"</span><span class="p">});</span>
        <span class="n">cafe</span><span class="p">.</span><span class="nf">PasserCommande</span><span class="p">(</span><span class="s">"Tom"</span><span class="p">,</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="p">{</span><span class="s">"Espresso"</span><span class="p">,</span> <span class="s">"Espresso"</span><span class="p">});</span>
        
        <span class="c1">// Afficher les statistiques</span>
        <span class="n">cafe</span><span class="p">.</span><span class="nf">AfficherStatistiques</span><span class="p">();</span>
        
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"\nüì¶ === STOCK RESTANT ==="</span><span class="p">);</span>
        <span class="n">cafe</span><span class="p">.</span><span class="nf">AfficherCatalogue</span><span class="p">();</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="8-bonnes-pratiques-et-performance">8. Bonnes pratiques et performance</h2>

<h3 id="-choisir-la-bonne-collection">‚úÖ Choisir la bonne collection</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// ‚úÖ Tableau pour taille fixe connue</span>
<span class="kt">string</span><span class="p">[]</span> <span class="n">joursSemaine</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">string</span><span class="p">[</span><span class="m">7</span><span class="p">];</span>

<span class="c1">// ‚úÖ List&lt;T&gt; pour taille variable</span>
<span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="n">commandesDuJour</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;();</span>

<span class="c1">// ‚úÖ Dictionary&lt;K,V&gt; pour recherche rapide par cl√©</span>
<span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">double</span><span class="p">&gt;</span> <span class="n">prix</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">double</span><span class="p">&gt;();</span>

<span class="c1">// ‚úÖ HashSet&lt;T&gt; pour unicit√©</span>
<span class="n">HashSet</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="n">allergenesPresents</span> <span class="p">=</span> <span class="k">new</span> <span class="n">HashSet</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;();</span>
</code></pre></div></div>

<h3 id="-initialiser-avec-la-bonne-capacit√©">‚úÖ Initialiser avec la bonne capacit√©</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// ‚ùå La liste va grandir 100 fois</span>
<span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="n">commandes</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;();</span>
<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="m">100</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
<span class="p">{</span>
    <span class="n">commandes</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="s">$"Commande </span><span class="p">{</span><span class="n">i</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
<span class="p">}</span>

<span class="c1">// ‚úÖ Meilleure performance</span>
<span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="n">commandes</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;(</span><span class="m">100</span><span class="p">);</span> <span class="c1">// Capacit√© initiale</span>
</code></pre></div></div>

<h3 id="-utiliser-linq-avec-mod√©ration">‚úÖ Utiliser LINQ avec mod√©ration</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// ‚úÖ Simple et lisible</span>
<span class="kt">var</span> <span class="n">ventesCheres</span> <span class="p">=</span> <span class="n">ventes</span><span class="p">.</span><span class="nf">Where</span><span class="p">(</span><span class="n">v</span> <span class="p">=&gt;</span> <span class="n">v</span><span class="p">.</span><span class="n">Prix</span> <span class="p">&gt;</span> <span class="m">5.00</span><span class="p">).</span><span class="nf">ToList</span><span class="p">();</span>

<span class="c1">// ‚ùå Trop complexe, difficile √† d√©boguer</span>
<span class="kt">var</span> <span class="n">resultat</span> <span class="p">=</span> <span class="n">ventes</span><span class="p">.</span><span class="nf">Where</span><span class="p">(</span><span class="n">v</span> <span class="p">=&gt;</span> <span class="n">v</span><span class="p">.</span><span class="n">Prix</span> <span class="p">&gt;</span> <span class="m">3</span><span class="p">)</span>
                    <span class="p">.</span><span class="nf">GroupBy</span><span class="p">(</span><span class="n">v</span> <span class="p">=&gt;</span> <span class="n">v</span><span class="p">.</span><span class="n">Client</span><span class="p">)</span>
                    <span class="p">.</span><span class="nf">Where</span><span class="p">(</span><span class="n">g</span> <span class="p">=&gt;</span> <span class="n">g</span><span class="p">.</span><span class="nf">Count</span><span class="p">()</span> <span class="p">&gt;</span> <span class="m">2</span><span class="p">)</span>
                    <span class="p">.</span><span class="nf">SelectMany</span><span class="p">(</span><span class="n">g</span> <span class="p">=&gt;</span> <span class="n">g</span><span class="p">.</span><span class="nf">Select</span><span class="p">(</span><span class="n">v</span> <span class="p">=&gt;</span> <span class="n">v</span><span class="p">.</span><span class="n">Produit</span><span class="p">))</span>
                    <span class="p">.</span><span class="nf">Distinct</span><span class="p">()</span>
                    <span class="p">.</span><span class="nf">OrderBy</span><span class="p">(</span><span class="n">p</span> <span class="p">=&gt;</span> <span class="n">p</span><span class="p">);</span>
</code></pre></div></div>

<hr />

<h2 id="exercices-pratiques">Exercices pratiques</h2>

<h3 id="exercice-1--gestionnaire-de-stock">Exercice 1 : Gestionnaire de stock</h3>
<p>Cr√©ez un syst√®me qui g√®re un inventaire avec alerte automatique pour les stocks faibles.</p>

<h3 id="exercice-2--analyseur-de-pr√©f√©rences">Exercice 2 : Analyseur de pr√©f√©rences</h3>
<p>Cr√©ez un programme qui analyse les pr√©f√©rences des clients et recommande des produits.</p>

<h3 id="exercice-3--planificateur-de-tourn√©es">Exercice 3 : Planificateur de tourn√©es</h3>
<p>Cr√©ez un syst√®me qui organise les livraisons de grains selon les distances.</p>

<hr />

<h2 id="conclusion">Conclusion</h2>

<p>Les collections sont les <strong>outils d‚Äôorganisation</strong> de la programmation ! Elles nous permettent de :</p>

<ul>
  <li>‚úÖ <strong>Stocker des donn√©es structur√©es</strong> avec les tableaux</li>
  <li>‚úÖ <strong>G√©rer des listes dynamiques</strong> avec <code class="language-plaintext highlighter-rouge">List&lt;T&gt;</code></li>
  <li>‚úÖ <strong>Associer des informations</strong> avec <code class="language-plaintext highlighter-rouge">Dictionary&lt;K,V&gt;</code></li>
  <li>‚úÖ <strong>Garantir l‚Äôunicit√©</strong> avec <code class="language-plaintext highlighter-rouge">HashSet&lt;T&gt;</code></li>
  <li>‚úÖ <strong>Analyser les donn√©es</strong> avec LINQ</li>
</ul>

<p>Comme un caf√© bien organis√© o√π chaque produit a sa place, les collections nous aident √† structurer nos programmes efficacement !</p>

<p><strong>Prochaine √©tape :</strong> Nous d√©couvrirons la gestion des exceptions pour traiter les erreurs avec √©l√©gance ! ‚òï</p>

<hr />

<p><em>Exp√©rimentez avec ces collections et cr√©ez vos propres syst√®mes de gestion. Un bon d√©veloppeur, c‚Äôest comme un bon gestionnaire de caf√© : il sait organiser ses donn√©es ! üöÄ</em></p>]]></content><author><name>MattDevBzh</name></author><summary type="html"><![CDATA[Un caf√© bien g√©r√©, c‚Äôest un caf√© o√π tout est organis√© et facilement accessible ! Comme les √©tag√®res de grains, les collections de tasses ou la liste des clients fid√®les. En C#, les collections et tableaux nous permettent de stocker et organiser efficacement nos donn√©es. ‚òï]]></summary></entry><entry><title type="html">Boucles et it√©rations en C# : Automatiser la pr√©paration de vos caf√©s</title><link href="http://0.0.0.0:4000/2025/01/28/boucles-iterations.html" rel="alternate" type="text/html" title="Boucles et it√©rations en C# : Automatiser la pr√©paration de vos caf√©s" /><published>2025-01-28T00:00:00+00:00</published><updated>2025-01-28T00:00:00+00:00</updated><id>http://0.0.0.0:4000/2025/01/28/boucles-iterations</id><content type="html" xml:base="http://0.0.0.0:4000/2025/01/28/boucles-iterations.html"><![CDATA[<p>Dans un caf√© anim√©, certaines t√¢ches se r√©p√®tent sans cesse : <strong>pr√©parer plusieurs espressos, servir une file de clients, nettoyer les tasses‚Ä¶</strong> En programmation C#, les <strong>boucles</strong> nous permettent d‚Äôautomatiser ces actions r√©p√©titives ! ‚òï</p>

<p>D√©couvrons ensemble comment utiliser les boucles pour g√©rer efficacement les t√¢ches r√©p√©titives de notre caf√© virtuel.</p>

<h2 id="sommaire">Sommaire</h2>
<ul id="markdown-toc">
  <li><a href="#sommaire" id="markdown-toc-sommaire">Sommaire</a></li>
  <li><a href="#quest-ce-quune-boucle-" id="markdown-toc-quest-ce-quune-boucle-">Qu‚Äôest-ce qu‚Äôune boucle ?</a></li>
  <li><a href="#1-la-boucle-for--r√©p√©ter-un-nombre-pr√©cis-de-fois" id="markdown-toc-1-la-boucle-for--r√©p√©ter-un-nombre-pr√©cis-de-fois">1. La boucle <code class="language-plaintext highlighter-rouge">for</code> : R√©p√©ter un nombre pr√©cis de fois</a>    <ul>
      <li><a href="#syntaxe" id="markdown-toc-syntaxe">Syntaxe</a></li>
      <li><a href="#exemple--pr√©parer-plusieurs-espressos" id="markdown-toc-exemple--pr√©parer-plusieurs-espressos">Exemple : Pr√©parer plusieurs espressos</a></li>
      <li><a href="#exemple--calcul-du-chiffre-daffaires-journalier" id="markdown-toc-exemple--calcul-du-chiffre-daffaires-journalier">Exemple : Calcul du chiffre d‚Äôaffaires journalier</a></li>
      <li><a href="#exemple--inventaire-produits" id="markdown-toc-exemple--inventaire-produits">Exemple : Inventaire produits</a></li>
    </ul>
  </li>
  <li><a href="#2-la-boucle-while--r√©p√©ter-tant-quune-condition-est-vraie" id="markdown-toc-2-la-boucle-while--r√©p√©ter-tant-quune-condition-est-vraie">2. La boucle <code class="language-plaintext highlighter-rouge">while</code> : R√©p√©ter tant qu‚Äôune condition est vraie</a>    <ul>
      <li><a href="#syntaxe-1" id="markdown-toc-syntaxe-1">Syntaxe</a></li>
      <li><a href="#exemple--servir-la-file-dattente" id="markdown-toc-exemple--servir-la-file-dattente">Exemple : Servir la file d‚Äôattente</a></li>
      <li><a href="#exemple--remplir-la-machine-jusquau-niveau-optimal" id="markdown-toc-exemple--remplir-la-machine-jusquau-niveau-optimal">Exemple : Remplir la machine jusqu‚Äôau niveau optimal</a></li>
      <li><a href="#exemple--recherche-de-grain-sp√©cifique" id="markdown-toc-exemple--recherche-de-grain-sp√©cifique">Exemple : Recherche de grain sp√©cifique</a></li>
    </ul>
  </li>
  <li><a href="#3-la-boucle-dowhile--ex√©cuter-au-moins-une-fois" id="markdown-toc-3-la-boucle-dowhile--ex√©cuter-au-moins-une-fois">3. La boucle <code class="language-plaintext highlighter-rouge">do...while</code> : Ex√©cuter au moins une fois</a>    <ul>
      <li><a href="#syntaxe-2" id="markdown-toc-syntaxe-2">Syntaxe</a></li>
      <li><a href="#exemple--menu-interactif" id="markdown-toc-exemple--menu-interactif">Exemple : Menu interactif</a></li>
      <li><a href="#exemple--validation-de-saisie" id="markdown-toc-exemple--validation-de-saisie">Exemple : Validation de saisie</a></li>
    </ul>
  </li>
  <li><a href="#4-la-boucle-foreach--parcourir-des-collections" id="markdown-toc-4-la-boucle-foreach--parcourir-des-collections">4. La boucle <code class="language-plaintext highlighter-rouge">foreach</code> : Parcourir des collections</a>    <ul>
      <li><a href="#syntaxe-3" id="markdown-toc-syntaxe-3">Syntaxe</a></li>
      <li><a href="#exemple--afficher-tous-les-produits" id="markdown-toc-exemple--afficher-tous-les-produits">Exemple : Afficher tous les produits</a></li>
      <li><a href="#exemple--calcul-de-stock-total" id="markdown-toc-exemple--calcul-de-stock-total">Exemple : Calcul de stock total</a></li>
      <li><a href="#exemple--traitement-des-commandes-en-attente" id="markdown-toc-exemple--traitement-des-commandes-en-attente">Exemple : Traitement des commandes en attente</a></li>
    </ul>
  </li>
  <li><a href="#5-contr√¥le-des-boucles--break-et-continue" id="markdown-toc-5-contr√¥le-des-boucles--break-et-continue">5. Contr√¥le des boucles : <code class="language-plaintext highlighter-rouge">break</code> et <code class="language-plaintext highlighter-rouge">continue</code></a>    <ul>
      <li><a href="#break--sortir-de-la-boucle" id="markdown-toc-break--sortir-de-la-boucle"><code class="language-plaintext highlighter-rouge">break</code> : Sortir de la boucle</a></li>
      <li><a href="#continue--passer-√†-lit√©ration-suivante" id="markdown-toc-continue--passer-√†-lit√©ration-suivante"><code class="language-plaintext highlighter-rouge">continue</code> : Passer √† l‚Äôit√©ration suivante</a></li>
    </ul>
  </li>
  <li><a href="#6-boucles-imbriqu√©es--boucles-dans-des-boucles" id="markdown-toc-6-boucles-imbriqu√©es--boucles-dans-des-boucles">6. Boucles imbriqu√©es : Boucles dans des boucles</a>    <ul>
      <li><a href="#exemple--menu-par-cat√©gorie" id="markdown-toc-exemple--menu-par-cat√©gorie">Exemple : Menu par cat√©gorie</a></li>
      <li><a href="#exemple--grille-d√©valuation-qualit√©" id="markdown-toc-exemple--grille-d√©valuation-qualit√©">Exemple : Grille d‚Äô√©valuation qualit√©</a></li>
    </ul>
  </li>
  <li><a href="#7-exemple-complet--gestion-dune-journ√©e-au-caf√©" id="markdown-toc-7-exemple-complet--gestion-dune-journ√©e-au-caf√©">7. Exemple complet : Gestion d‚Äôune journ√©e au caf√©</a></li>
  <li><a href="#8-performance-et-bonnes-pratiques" id="markdown-toc-8-performance-et-bonnes-pratiques">8. Performance et bonnes pratiques</a>    <ul>
      <li><a href="#-√©vitez-les-boucles-infinies" id="markdown-toc--√©vitez-les-boucles-infinies">‚úÖ √âvitez les boucles infinies</a></li>
      <li><a href="#-choisissez-la-bonne-boucle" id="markdown-toc--choisissez-la-bonne-boucle">‚úÖ Choisissez la bonne boucle</a></li>
      <li><a href="#-optimisez-les-boucles-imbriqu√©es" id="markdown-toc--optimisez-les-boucles-imbriqu√©es">‚úÖ Optimisez les boucles imbriqu√©es</a></li>
    </ul>
  </li>
  <li><a href="#exercices-pratiques" id="markdown-toc-exercices-pratiques">Exercices pratiques</a>    <ul>
      <li><a href="#exercice-1--calcul-de-moyenne" id="markdown-toc-exercice-1--calcul-de-moyenne">Exercice 1 : Calcul de moyenne</a></li>
      <li><a href="#exercice-2--jeu-de-devinette" id="markdown-toc-exercice-2--jeu-de-devinette">Exercice 2 : Jeu de devinette</a></li>
      <li><a href="#exercice-3--g√©n√©rateur-de-facture" id="markdown-toc-exercice-3--g√©n√©rateur-de-facture">Exercice 3 : G√©n√©rateur de facture</a></li>
    </ul>
  </li>
  <li><a href="#conclusion" id="markdown-toc-conclusion">Conclusion</a></li>
</ul>

<hr />

<h2 id="quest-ce-quune-boucle-">Qu‚Äôest-ce qu‚Äôune boucle ?</h2>

<p>Une <strong>boucle</strong> est une structure qui permet de r√©p√©ter un bloc de code plusieurs fois. C‚Äôest comme avoir un barista infatigable qui peut :</p>

<ul>
  <li>Pr√©parer 50 caf√©s identiques</li>
  <li>Servir tous les clients en file d‚Äôattente</li>
  <li>Nettoyer toutes les tasses de la journ√©e</li>
  <li>V√©rifier le stock de chaque produit</li>
</ul>

<hr />

<h2 id="1-la-boucle-for--r√©p√©ter-un-nombre-pr√©cis-de-fois">1. La boucle <code class="language-plaintext highlighter-rouge">for</code> : R√©p√©ter un nombre pr√©cis de fois</h2>

<p>La boucle <code class="language-plaintext highlighter-rouge">for</code> est parfaite quand on sait exactement combien de fois r√©p√©ter une action.</p>

<h3 id="syntaxe">Syntaxe</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="p">(</span><span class="n">initialisation</span><span class="p">;</span> <span class="n">condition</span><span class="p">;</span> <span class="n">incr</span><span class="err">√©</span><span class="n">mentation</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// Code √† r√©p√©ter</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="exemple--pr√©parer-plusieurs-espressos">Exemple : Pr√©parer plusieurs espressos</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">nombreEspressos</span> <span class="p">=</span> <span class="m">5</span><span class="p">;</span>

<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚òï Pr√©paration de la commande groupe"</span><span class="p">);</span>

<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;=</span> <span class="n">nombreEspressos</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"Espresso n¬∞</span><span class="p">{</span><span class="n">i</span><span class="p">}</span><span class="s"> en cours..."</span><span class="p">);</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"- Moudre 18g de grains"</span><span class="p">);</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"- Tasser le caf√©"</span><span class="p">);</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"- Extraction 25 secondes"</span><span class="p">);</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚úÖ Espresso n¬∞</span><span class="p">{</span><span class="n">i</span><span class="p">}</span><span class="s"> termin√© !"</span><span class="p">);</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">();</span>
<span class="p">}</span>

<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"üéâ Commande termin√©e ! </span><span class="p">{</span><span class="n">nombreEspressos</span><span class="p">}</span><span class="s"> espressos pr√™ts"</span><span class="p">);</span>
</code></pre></div></div>

<h3 id="exemple--calcul-du-chiffre-daffaires-journalier">Exemple : Calcul du chiffre d‚Äôaffaires journalier</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">double</span><span class="p">[]</span> <span class="n">ventesParHeure</span> <span class="p">=</span> <span class="p">{</span><span class="m">120.50</span><span class="p">,</span> <span class="m">89.30</span><span class="p">,</span> <span class="m">156.80</span><span class="p">,</span> <span class="m">203.45</span><span class="p">,</span> <span class="m">178.90</span><span class="p">,</span> <span class="m">134.20</span><span class="p">,</span> <span class="m">95.60</span><span class="p">,</span> <span class="m">87.30</span><span class="p">};</span>
<span class="kt">double</span> <span class="n">totalJournee</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>

<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"üìä Calcul du chiffre d'affaires :"</span><span class="p">);</span>

<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">heure</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">heure</span> <span class="p">&lt;</span> <span class="n">ventesParHeure</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">heure</span><span class="p">++)</span>
<span class="p">{</span>
    <span class="n">totalJournee</span> <span class="p">+=</span> <span class="n">ventesParHeure</span><span class="p">[</span><span class="n">heure</span><span class="p">];</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"Heure </span><span class="p">{</span><span class="n">heure</span> <span class="p">+</span> <span class="m">8</span><span class="p">}</span><span class="s">h : </span><span class="p">{</span><span class="n">ventesParHeure</span><span class="p">[</span><span class="n">heure</span><span class="p">]:</span><span class="n">C2</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
<span class="p">}</span>

<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"\nüí∞ Total de la journ√©e : </span><span class="p">{</span><span class="n">totalJournee</span><span class="p">:</span><span class="n">C2</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
</code></pre></div></div>

<h3 id="exemple--inventaire-produits">Exemple : Inventaire produits</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">string</span><span class="p">[]</span> <span class="n">produits</span> <span class="p">=</span> <span class="p">{</span><span class="s">"Espresso"</span><span class="p">,</span> <span class="s">"Cappuccino"</span><span class="p">,</span> <span class="s">"Latte"</span><span class="p">,</span> <span class="s">"Americano"</span><span class="p">,</span> <span class="s">"Macchiato"</span><span class="p">};</span>
<span class="kt">double</span><span class="p">[]</span> <span class="n">prix</span> <span class="p">=</span> <span class="p">{</span><span class="m">2.50</span><span class="p">,</span> <span class="m">4.00</span><span class="p">,</span> <span class="m">4.50</span><span class="p">,</span> <span class="m">3.00</span><span class="p">,</span> <span class="m">3.80</span><span class="p">};</span>

<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"üìã MENU DU JOUR"</span><span class="p">);</span>
<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"================"</span><span class="p">);</span>

<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">produits</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"</span><span class="p">{</span><span class="n">i</span> <span class="p">+</span> <span class="m">1</span><span class="p">}</span><span class="s">. </span><span class="p">{</span><span class="n">produits</span><span class="p">[</span><span class="n">i</span><span class="p">]}</span><span class="s"> - </span><span class="p">{</span><span class="n">prix</span><span class="p">[</span><span class="n">i</span><span class="p">]:</span><span class="n">C2</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="2-la-boucle-while--r√©p√©ter-tant-quune-condition-est-vraie">2. La boucle <code class="language-plaintext highlighter-rouge">while</code> : R√©p√©ter tant qu‚Äôune condition est vraie</h2>

<p>La boucle <code class="language-plaintext highlighter-rouge">while</code> continue tant qu‚Äôune condition reste vraie. Parfaite pour traiter une file d‚Äôattente !</p>

<h3 id="syntaxe-1">Syntaxe</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">while</span> <span class="p">(</span><span class="n">condition</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// Code √† r√©p√©ter</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="exemple--servir-la-file-dattente">Exemple : Servir la file d‚Äôattente</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">clientsEnAttente</span> <span class="p">=</span> <span class="m">8</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">clientServi</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>

<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚òï D√©but du service - </span><span class="p">{</span><span class="n">clientsEnAttente</span><span class="p">}</span><span class="s"> clients en attente"</span><span class="p">);</span>

<span class="k">while</span> <span class="p">(</span><span class="n">clientsEnAttente</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">clientServi</span><span class="p">++;</span>
    <span class="n">clientsEnAttente</span><span class="p">--;</span>
    
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"üîÑ Service du client n¬∞</span><span class="p">{</span><span class="n">clientServi</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Clients restants : </span><span class="p">{</span><span class="n">clientsEnAttente</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
    
    <span class="c1">// Simulation du temps de service</span>
    <span class="n">System</span><span class="p">.</span><span class="n">Threading</span><span class="p">.</span><span class="n">Thread</span><span class="p">.</span><span class="nf">Sleep</span><span class="p">(</span><span class="m">500</span><span class="p">);</span>
<span class="p">}</span>

<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚úÖ Tous les clients ont √©t√© servis !"</span><span class="p">);</span>
</code></pre></div></div>

<h3 id="exemple--remplir-la-machine-jusquau-niveau-optimal">Exemple : Remplir la machine jusqu‚Äôau niveau optimal</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">niveauEau</span> <span class="p">=</span> <span class="m">20</span><span class="p">;</span>        <span class="c1">// Niveau actuel en %</span>
<span class="kt">int</span> <span class="n">niveauOptimal</span> <span class="p">=</span> <span class="m">100</span><span class="p">;</span>   <span class="c1">// Niveau souhait√©</span>
<span class="kt">int</span> <span class="n">ajoutParEtape</span> <span class="p">=</span> <span class="m">15</span><span class="p">;</span>    <span class="c1">// % ajout√© √† chaque fois</span>

<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"üíß Niveau d'eau initial : </span><span class="p">{</span><span class="n">niveauEau</span><span class="p">}</span><span class="s">%"</span><span class="p">);</span>

<span class="k">while</span> <span class="p">(</span><span class="n">niveauEau</span> <span class="p">&lt;</span> <span class="n">niveauOptimal</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">niveauEau</span> <span class="p">+=</span> <span class="n">ajoutParEtape</span><span class="p">;</span>
    
    <span class="c1">// Ne pas d√©passer 100%</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">niveauEau</span> <span class="p">&gt;</span> <span class="n">niveauOptimal</span><span class="p">)</span>
        <span class="n">niveauEau</span> <span class="p">=</span> <span class="n">niveauOptimal</span><span class="p">;</span>
    
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"üíß Remplissage... Niveau : </span><span class="p">{</span><span class="n">niveauEau</span><span class="p">}</span><span class="s">%"</span><span class="p">);</span>
<span class="p">}</span>

<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚úÖ R√©servoir d'eau plein !"</span><span class="p">);</span>
</code></pre></div></div>

<h3 id="exemple--recherche-de-grain-sp√©cifique">Exemple : Recherche de grain sp√©cifique</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">string</span><span class="p">[]</span> <span class="n">grainsDisponibles</span> <span class="p">=</span> <span class="p">{</span><span class="s">"Arabica Colombie"</span><span class="p">,</span> <span class="s">"Robusta Vietnam"</span><span class="p">,</span> <span class="s">"Arabica √âthiopie"</span><span class="p">,</span> <span class="s">"Blend Maison"</span><span class="p">};</span>
<span class="kt">string</span> <span class="n">grainRecherche</span> <span class="p">=</span> <span class="s">"Arabica √âthiopie"</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">index</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
<span class="kt">bool</span> <span class="n">trouve</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>

<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"üîç Recherche de : </span><span class="p">{</span><span class="n">grainRecherche</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>

<span class="k">while</span> <span class="p">(</span><span class="n">index</span> <span class="p">&lt;</span> <span class="n">grainsDisponibles</span><span class="p">.</span><span class="n">Length</span> <span class="p">&amp;&amp;</span> <span class="p">!</span><span class="n">trouve</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"V√©rification : </span><span class="p">{</span><span class="n">grainsDisponibles</span><span class="p">[</span><span class="n">index</span><span class="p">]}</span><span class="s">"</span><span class="p">);</span>
    
    <span class="k">if</span> <span class="p">(</span><span class="n">grainsDisponibles</span><span class="p">[</span><span class="n">index</span><span class="p">]</span> <span class="p">==</span> <span class="n">grainRecherche</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">trouve</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚úÖ Trouv√© √† la position </span><span class="p">{</span><span class="n">index</span> <span class="p">+</span> <span class="m">1</span><span class="p">}</span><span class="s"> !"</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">else</span>
    <span class="p">{</span>
        <span class="n">index</span><span class="p">++;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="k">if</span> <span class="p">(!</span><span class="n">trouve</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚ùå Grain non trouv√© dans le stock"</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="3-la-boucle-dowhile--ex√©cuter-au-moins-une-fois">3. La boucle <code class="language-plaintext highlighter-rouge">do...while</code> : Ex√©cuter au moins une fois</h2>

<p>Cette boucle ex√©cute le code au moins une fois, puis v√©rifie la condition.</p>

<h3 id="syntaxe-2">Syntaxe</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">do</span>
<span class="p">{</span>
    <span class="c1">// Code √† r√©p√©ter</span>
<span class="p">}</span> <span class="k">while</span> <span class="p">(</span><span class="n">condition</span><span class="p">);</span>
</code></pre></div></div>

<h3 id="exemple--menu-interactif">Exemple : Menu interactif</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">string</span> <span class="n">choix</span><span class="p">;</span>

<span class="k">do</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"\n‚òï === MENU CAF√â ==="</span><span class="p">);</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"1. Commander un caf√©"</span><span class="p">);</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"2. Voir le stock"</span><span class="p">);</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"3. Afficher les ventes"</span><span class="p">);</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"4. Quitter"</span><span class="p">);</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">Write</span><span class="p">(</span><span class="s">"Votre choix : "</span><span class="p">);</span>
    
    <span class="n">choix</span> <span class="p">=</span> <span class="n">Console</span><span class="p">.</span><span class="nf">ReadLine</span><span class="p">();</span>
    
    <span class="k">switch</span> <span class="p">(</span><span class="n">choix</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">case</span> <span class="s">"1"</span><span class="p">:</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚òï Commande enregistr√©e !"</span><span class="p">);</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="k">case</span> <span class="s">"2"</span><span class="p">:</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"üì¶ Stock : 250g caf√©, 500ml lait"</span><span class="p">);</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="k">case</span> <span class="s">"3"</span><span class="p">:</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"üí∞ Ventes du jour : 450‚Ç¨"</span><span class="p">);</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="k">case</span> <span class="s">"4"</span><span class="p">:</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"üëã √Ä bient√¥t !"</span><span class="p">);</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="k">default</span><span class="p">:</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚ùå Choix invalide !"</span><span class="p">);</span>
            <span class="k">break</span><span class="p">;</span>
    <span class="p">}</span>
    
<span class="p">}</span> <span class="k">while</span> <span class="p">(</span><span class="n">choix</span> <span class="p">!=</span> <span class="s">"4"</span><span class="p">);</span>
</code></pre></div></div>

<h3 id="exemple--validation-de-saisie">Exemple : Validation de saisie</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">quantite</span><span class="p">;</span>
<span class="kt">string</span> <span class="n">saisie</span><span class="p">;</span>

<span class="k">do</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">Write</span><span class="p">(</span><span class="s">"Combien de caf√©s voulez-vous ? (1-10) : "</span><span class="p">);</span>
    <span class="n">saisie</span> <span class="p">=</span> <span class="n">Console</span><span class="p">.</span><span class="nf">ReadLine</span><span class="p">();</span>
    
    <span class="k">if</span> <span class="p">(!</span><span class="kt">int</span><span class="p">.</span><span class="nf">TryParse</span><span class="p">(</span><span class="n">saisie</span><span class="p">,</span> <span class="k">out</span> <span class="n">quantite</span><span class="p">))</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚ùå Veuillez saisir un nombre !"</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">quantite</span> <span class="p">&lt;</span> <span class="m">1</span> <span class="p">||</span> <span class="n">quantite</span> <span class="p">&gt;</span> <span class="m">10</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚ùå Quantit√© doit √™tre entre 1 et 10 !"</span><span class="p">);</span>
    <span class="p">}</span>
    
<span class="p">}</span> <span class="k">while</span> <span class="p">(</span><span class="n">quantite</span> <span class="p">&lt;</span> <span class="m">1</span> <span class="p">||</span> <span class="n">quantite</span> <span class="p">&gt;</span> <span class="m">10</span><span class="p">);</span>

<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚úÖ Commande valid√©e : </span><span class="p">{</span><span class="n">quantite</span><span class="p">}</span><span class="s"> caf√©(s)"</span><span class="p">);</span>
</code></pre></div></div>

<hr />

<h2 id="4-la-boucle-foreach--parcourir-des-collections">4. La boucle <code class="language-plaintext highlighter-rouge">foreach</code> : Parcourir des collections</h2>

<p>La boucle <code class="language-plaintext highlighter-rouge">foreach</code> est parfaite pour traiter chaque √©l√©ment d‚Äôune collection.</p>

<h3 id="syntaxe-3">Syntaxe</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">foreach</span> <span class="p">(</span><span class="n">type</span> <span class="n">element</span> <span class="k">in</span> <span class="n">collection</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// Utiliser element</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="exemple--afficher-tous-les-produits">Exemple : Afficher tous les produits</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">string</span><span class="p">[]</span> <span class="n">menuCafes</span> <span class="p">=</span> <span class="p">{</span><span class="s">"Espresso"</span><span class="p">,</span> <span class="s">"Americano"</span><span class="p">,</span> <span class="s">"Cappuccino"</span><span class="p">,</span> <span class="s">"Latte"</span><span class="p">,</span> <span class="s">"Macchiato"</span><span class="p">,</span> <span class="s">"Mocha"</span><span class="p">};</span>

<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚òï === NOTRE CARTE ==="</span><span class="p">);</span>

<span class="k">foreach</span> <span class="p">(</span><span class="kt">string</span> <span class="n">cafe</span> <span class="k">in</span> <span class="n">menuCafes</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"- </span><span class="p">{</span><span class="n">cafe</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="exemple--calcul-de-stock-total">Exemple : Calcul de stock total</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span><span class="p">[]</span> <span class="n">stockParProduit</span> <span class="p">=</span> <span class="p">{</span><span class="m">45</span><span class="p">,</span> <span class="m">32</span><span class="p">,</span> <span class="m">28</span><span class="p">,</span> <span class="m">51</span><span class="p">,</span> <span class="m">19</span><span class="p">,</span> <span class="m">37</span><span class="p">};</span> <span class="c1">// en unit√©s</span>
<span class="kt">string</span><span class="p">[]</span> <span class="n">nomsProduits</span> <span class="p">=</span> <span class="p">{</span><span class="s">"Caf√© grain"</span><span class="p">,</span> <span class="s">"Lait"</span><span class="p">,</span> <span class="s">"Sucre"</span><span class="p">,</span> <span class="s">"Cups"</span><span class="p">,</span> <span class="s">"Couvercles"</span><span class="p">,</span> <span class="s">"Serviettes"</span><span class="p">};</span>
<span class="kt">int</span> <span class="n">stockTotal</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>

<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"üì¶ === √âTAT DU STOCK ==="</span><span class="p">);</span>

<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">stockParProduit</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"</span><span class="p">{</span><span class="n">nomsProduits</span><span class="p">[</span><span class="n">i</span><span class="p">]}</span><span class="s"> : </span><span class="p">{</span><span class="n">stockParProduit</span><span class="p">[</span><span class="n">i</span><span class="p">]}</span><span class="s"> unit√©s"</span><span class="p">);</span>
    <span class="n">stockTotal</span> <span class="p">+=</span> <span class="n">stockParProduit</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
<span class="p">}</span>

<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"\nüìä Stock total : </span><span class="p">{</span><span class="n">stockTotal</span><span class="p">}</span><span class="s"> articles"</span><span class="p">);</span>

<span class="c1">// Utilisation de foreach pour les alertes</span>
<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"\n‚ö†Ô∏è === ALERTES STOCK ==="</span><span class="p">);</span>
<span class="k">foreach</span> <span class="p">(</span><span class="kt">int</span> <span class="n">stock</span> <span class="k">in</span> <span class="n">stockParProduit</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">stock</span> <span class="p">&lt;</span> <span class="m">30</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"Stock faible d√©tect√© : </span><span class="p">{</span><span class="n">stock</span><span class="p">}</span><span class="s"> unit√©s"</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="exemple--traitement-des-commandes-en-attente">Exemple : Traitement des commandes en attente</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Commande</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">Client</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">Produit</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">public</span> <span class="kt">double</span> <span class="n">Prix</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
<span class="p">}</span>

<span class="n">List</span><span class="p">&lt;</span><span class="n">Commande</span><span class="p">&gt;</span> <span class="n">commandesEnAttente</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">Commande</span><span class="p">&gt;</span>
<span class="p">{</span>
    <span class="k">new</span> <span class="n">Commande</span> <span class="p">{</span> <span class="n">Client</span> <span class="p">=</span> <span class="s">"Marie"</span><span class="p">,</span> <span class="n">Produit</span> <span class="p">=</span> <span class="s">"Cappuccino"</span><span class="p">,</span> <span class="n">Prix</span> <span class="p">=</span> <span class="m">4.00</span> <span class="p">},</span>
    <span class="k">new</span> <span class="n">Commande</span> <span class="p">{</span> <span class="n">Client</span> <span class="p">=</span> <span class="s">"Paul"</span><span class="p">,</span> <span class="n">Produit</span> <span class="p">=</span> <span class="s">"Espresso"</span><span class="p">,</span> <span class="n">Prix</span> <span class="p">=</span> <span class="m">2.50</span> <span class="p">},</span>
    <span class="k">new</span> <span class="n">Commande</span> <span class="p">{</span> <span class="n">Client</span> <span class="p">=</span> <span class="s">"Julie"</span><span class="p">,</span> <span class="n">Produit</span> <span class="p">=</span> <span class="s">"Latte"</span><span class="p">,</span> <span class="n">Prix</span> <span class="p">=</span> <span class="m">4.50</span> <span class="p">},</span>
    <span class="k">new</span> <span class="n">Commande</span> <span class="p">{</span> <span class="n">Client</span> <span class="p">=</span> <span class="s">"Tom"</span><span class="p">,</span> <span class="n">Produit</span> <span class="p">=</span> <span class="s">"Americano"</span><span class="p">,</span> <span class="n">Prix</span> <span class="p">=</span> <span class="m">3.00</span> <span class="p">}</span>
<span class="p">};</span>

<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"üìã === TRAITEMENT DES COMMANDES ==="</span><span class="p">);</span>
<span class="kt">double</span> <span class="n">totalVentes</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>

<span class="k">foreach</span> <span class="p">(</span><span class="n">Commande</span> <span class="n">cmd</span> <span class="k">in</span> <span class="n">commandesEnAttente</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"üîÑ Pr√©paration de </span><span class="p">{</span><span class="n">cmd</span><span class="p">.</span><span class="n">Produit</span><span class="p">}</span><span class="s"> pour </span><span class="p">{</span><span class="n">cmd</span><span class="p">.</span><span class="n">Client</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"   Prix : </span><span class="p">{</span><span class="n">cmd</span><span class="p">.</span><span class="n">Prix</span><span class="p">:</span><span class="n">C2</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
    <span class="n">totalVentes</span> <span class="p">+=</span> <span class="n">cmd</span><span class="p">.</span><span class="n">Prix</span><span class="p">;</span>
    
    <span class="c1">// Simulation du temps de pr√©paration</span>
    <span class="n">System</span><span class="p">.</span><span class="n">Threading</span><span class="p">.</span><span class="n">Thread</span><span class="p">.</span><span class="nf">Sleep</span><span class="p">(</span><span class="m">800</span><span class="p">);</span>
    
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚úÖ </span><span class="p">{</span><span class="n">cmd</span><span class="p">.</span><span class="n">Produit</span><span class="p">}</span><span class="s"> pr√™t pour </span><span class="p">{</span><span class="n">cmd</span><span class="p">.</span><span class="n">Client</span><span class="p">}</span><span class="s"> !"</span><span class="p">);</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">();</span>
<span class="p">}</span>

<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"üí∞ Total des ventes : </span><span class="p">{</span><span class="n">totalVentes</span><span class="p">:</span><span class="n">C2</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
</code></pre></div></div>

<hr />

<h2 id="5-contr√¥le-des-boucles--break-et-continue">5. Contr√¥le des boucles : <code class="language-plaintext highlighter-rouge">break</code> et <code class="language-plaintext highlighter-rouge">continue</code></h2>

<h3 id="break--sortir-de-la-boucle"><code class="language-plaintext highlighter-rouge">break</code> : Sortir de la boucle</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span><span class="p">[]</span> <span class="n">stockProduits</span> <span class="p">=</span> <span class="p">{</span><span class="m">50</span><span class="p">,</span> <span class="m">30</span><span class="p">,</span> <span class="m">15</span><span class="p">,</span> <span class="m">8</span><span class="p">,</span> <span class="m">45</span><span class="p">,</span> <span class="m">32</span><span class="p">};</span>
<span class="kt">string</span><span class="p">[]</span> <span class="n">nomsProduits</span> <span class="p">=</span> <span class="p">{</span><span class="s">"Caf√©"</span><span class="p">,</span> <span class="s">"Lait"</span><span class="p">,</span> <span class="s">"Sucre"</span><span class="p">,</span> <span class="s">"Tasses"</span><span class="p">,</span> <span class="s">"Couvercles"</span><span class="p">,</span> <span class="s">"Serviettes"</span><span class="p">};</span>

<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"üîç Recherche du premier produit en rupture :"</span><span class="p">);</span>

<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">stockProduits</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"V√©rification </span><span class="p">{</span><span class="n">nomsProduits</span><span class="p">[</span><span class="n">i</span><span class="p">]}</span><span class="s"> : </span><span class="p">{</span><span class="n">stockProduits</span><span class="p">[</span><span class="n">i</span><span class="p">]}</span><span class="s"> unit√©s"</span><span class="p">);</span>
    
    <span class="k">if</span> <span class="p">(</span><span class="n">stockProduits</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">&lt;</span> <span class="m">10</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚ö†Ô∏è RUPTURE D√âTECT√âE : </span><span class="p">{</span><span class="n">nomsProduits</span><span class="p">[</span><span class="n">i</span><span class="p">]}</span><span class="s"> !"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"Arr√™t de la v√©rification."</span><span class="p">);</span>
        <span class="k">break</span><span class="p">;</span> <span class="c1">// Sort de la boucle</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="continue--passer-√†-lit√©ration-suivante"><code class="language-plaintext highlighter-rouge">continue</code> : Passer √† l‚Äôit√©ration suivante</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span><span class="p">[]</span> <span class="n">commandesParHeure</span> <span class="p">=</span> <span class="p">{</span><span class="m">5</span><span class="p">,</span> <span class="m">12</span><span class="p">,</span> <span class="m">8</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">15</span><span class="p">,</span> <span class="m">23</span><span class="p">,</span> <span class="m">18</span><span class="p">,</span> <span class="m">9</span><span class="p">};</span>

<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"üìä Rapport des heures d'activit√© :"</span><span class="p">);</span>

<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">heure</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">heure</span> <span class="p">&lt;</span> <span class="n">commandesParHeure</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">heure</span><span class="p">++)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">commandesParHeure</span><span class="p">[</span><span class="n">heure</span><span class="p">]</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"Heure </span><span class="p">{</span><span class="n">heure</span> <span class="p">+</span> <span class="m">8</span><span class="p">}</span><span class="s">h : Ferm√©"</span><span class="p">);</span>
        <span class="k">continue</span><span class="p">;</span> <span class="c1">// Passe √† l'heure suivante</span>
    <span class="p">}</span>
    
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"Heure </span><span class="p">{</span><span class="n">heure</span> <span class="p">+</span> <span class="m">8</span><span class="p">}</span><span class="s">h : </span><span class="p">{</span><span class="n">commandesParHeure</span><span class="p">[</span><span class="n">heure</span><span class="p">]}</span><span class="s"> commandes"</span><span class="p">);</span>
    
    <span class="k">if</span> <span class="p">(</span><span class="n">commandesParHeure</span><span class="p">[</span><span class="n">heure</span><span class="p">]</span> <span class="p">&gt;</span> <span class="m">20</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"   üî• Heure de pointe !"</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="6-boucles-imbriqu√©es--boucles-dans-des-boucles">6. Boucles imbriqu√©es : Boucles dans des boucles</h2>

<h3 id="exemple--menu-par-cat√©gorie">Exemple : Menu par cat√©gorie</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">string</span><span class="p">[,]</span> <span class="n">menuCategories</span> <span class="p">=</span> <span class="p">{</span>
    <span class="p">{</span><span class="s">"CAF√âS CHAUDS"</span><span class="p">,</span> <span class="s">"Espresso"</span><span class="p">,</span> <span class="s">"Americano"</span><span class="p">,</span> <span class="s">"Cappuccino"</span><span class="p">},</span>
    <span class="p">{</span><span class="s">"CAF√âS FROIDS"</span><span class="p">,</span> <span class="s">"Iced Coffee"</span><span class="p">,</span> <span class="s">"Frapp√©"</span><span class="p">,</span> <span class="s">"Cold Brew"</span><span class="p">},</span>
    <span class="p">{</span><span class="s">"TH√âS"</span><span class="p">,</span> <span class="s">"Earl Grey"</span><span class="p">,</span> <span class="s">"Th√© Vert"</span><span class="p">,</span> <span class="s">"Tisane"</span><span class="p">}</span>
<span class="p">};</span>

<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚òï === MENU COMPLET ==="</span><span class="p">);</span>

<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">categorie</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">categorie</span> <span class="p">&lt;</span> <span class="m">3</span><span class="p">;</span> <span class="n">categorie</span><span class="p">++)</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"\nüìã </span><span class="p">{</span><span class="n">menuCategories</span><span class="p">[</span><span class="n">categorie</span><span class="p">,</span> <span class="m">0</span><span class="p">]}</span><span class="s">"</span><span class="p">);</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="k">new</span> <span class="kt">string</span><span class="p">(</span><span class="sc">'-'</span><span class="p">,</span> <span class="n">menuCategories</span><span class="p">[</span><span class="n">categorie</span><span class="p">,</span> <span class="m">0</span><span class="p">].</span><span class="n">Length</span> <span class="p">+</span> <span class="m">4</span><span class="p">));</span>
    
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">produit</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">produit</span> <span class="p">&lt;</span> <span class="m">4</span><span class="p">;</span> <span class="n">produit</span><span class="p">++)</span>
    <span class="p">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"  ‚Ä¢ </span><span class="p">{</span><span class="n">menuCategories</span><span class="p">[</span><span class="n">categorie</span><span class="p">,</span> <span class="n">produit</span><span class="p">]}</span><span class="s">"</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="exemple--grille-d√©valuation-qualit√©">Exemple : Grille d‚Äô√©valuation qualit√©</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">string</span><span class="p">[]</span> <span class="n">criteres</span> <span class="p">=</span> <span class="p">{</span><span class="s">"Ar√¥me"</span><span class="p">,</span> <span class="s">"Go√ªt"</span><span class="p">,</span> <span class="s">"Acidit√©"</span><span class="p">,</span> <span class="s">"Corps"</span><span class="p">};</span>
<span class="kt">int</span><span class="p">[,]</span> <span class="n">evaluations</span> <span class="p">=</span> <span class="p">{</span>
    <span class="p">{</span><span class="m">8</span><span class="p">,</span> <span class="m">9</span><span class="p">,</span> <span class="m">7</span><span class="p">,</span> <span class="m">8</span><span class="p">},</span>  <span class="c1">// Arabica Colombie</span>
    <span class="p">{</span><span class="m">7</span><span class="p">,</span> <span class="m">8</span><span class="p">,</span> <span class="m">6</span><span class="p">,</span> <span class="m">9</span><span class="p">},</span>  <span class="c1">// Robusta Vietnam  </span>
    <span class="p">{</span><span class="m">9</span><span class="p">,</span> <span class="m">8</span><span class="p">,</span> <span class="m">8</span><span class="p">,</span> <span class="m">7</span><span class="p">},</span>  <span class="c1">// Arabica √âthiopie</span>
    <span class="p">{</span><span class="m">8</span><span class="p">,</span> <span class="m">8</span><span class="p">,</span> <span class="m">7</span><span class="p">,</span> <span class="m">8</span><span class="p">}</span>   <span class="c1">// Blend Maison</span>
<span class="p">};</span>
<span class="kt">string</span><span class="p">[]</span> <span class="n">cafes</span> <span class="p">=</span> <span class="p">{</span><span class="s">"Arabica Colombie"</span><span class="p">,</span> <span class="s">"Robusta Vietnam"</span><span class="p">,</span> <span class="s">"Arabica √âthiopie"</span><span class="p">,</span> <span class="s">"Blend Maison"</span><span class="p">};</span>

<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚≠ê === √âVALUATION DES CAF√âS ==="</span><span class="p">);</span>

<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">cafe</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">cafe</span> <span class="p">&lt;</span> <span class="n">cafes</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">cafe</span><span class="p">++)</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"\n‚òï </span><span class="p">{</span><span class="n">cafes</span><span class="p">[</span><span class="n">cafe</span><span class="p">]}</span><span class="s">"</span><span class="p">);</span>
    <span class="kt">int</span> <span class="n">total</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
    
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">critere</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">critere</span> <span class="p">&lt;</span> <span class="n">criteres</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">critere</span><span class="p">++)</span>
    <span class="p">{</span>
        <span class="kt">int</span> <span class="n">note</span> <span class="p">=</span> <span class="n">evaluations</span><span class="p">[</span><span class="n">cafe</span><span class="p">,</span> <span class="n">critere</span><span class="p">];</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"  </span><span class="p">{</span><span class="n">criteres</span><span class="p">[</span><span class="n">critere</span><span class="p">]}</span><span class="s"> : </span><span class="p">{</span><span class="n">note</span><span class="p">}</span><span class="s">/10"</span><span class="p">);</span>
        <span class="n">total</span> <span class="p">+=</span> <span class="n">note</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="kt">double</span> <span class="n">moyenne</span> <span class="p">=</span> <span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="n">total</span> <span class="p">/</span> <span class="n">criteres</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"  üìä Moyenne : </span><span class="p">{</span><span class="n">moyenne</span><span class="p">:</span><span class="n">F1</span><span class="p">}</span><span class="s">/10"</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="7-exemple-complet--gestion-dune-journ√©e-au-caf√©">7. Exemple complet : Gestion d‚Äôune journ√©e au caf√©</h2>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">ProgrammeJourneeCafe</span>
<span class="p">{</span>
    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="c1">// Donn√©es de d√©part</span>
        <span class="kt">string</span><span class="p">[]</span> <span class="n">produits</span> <span class="p">=</span> <span class="p">{</span><span class="s">"Espresso"</span><span class="p">,</span> <span class="s">"Cappuccino"</span><span class="p">,</span> <span class="s">"Latte"</span><span class="p">,</span> <span class="s">"Americano"</span><span class="p">};</span>
        <span class="kt">double</span><span class="p">[]</span> <span class="n">prix</span> <span class="p">=</span> <span class="p">{</span><span class="m">2.50</span><span class="p">,</span> <span class="m">4.00</span><span class="p">,</span> <span class="m">4.50</span><span class="p">,</span> <span class="m">3.00</span><span class="p">};</span>
        <span class="kt">int</span><span class="p">[]</span> <span class="n">stock</span> <span class="p">=</span> <span class="p">{</span><span class="m">100</span><span class="p">,</span> <span class="m">80</span><span class="p">,</span> <span class="m">70</span><span class="p">,</span> <span class="m">90</span><span class="p">};</span> <span class="c1">// unit√©s disponibles</span>
        
        <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="n">ventesDuJour</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;();</span>
        <span class="kt">double</span> <span class="n">chiffreAffaires</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
        
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚òï === OUVERTURE DU CAF√â ==="</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"Bonjour ! Voici notre menu :"</span><span class="p">);</span>
        
        <span class="c1">// Affichage du menu avec foreach</span>
        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">produits</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"</span><span class="p">{</span><span class="n">i</span> <span class="p">+</span> <span class="m">1</span><span class="p">}</span><span class="s">. </span><span class="p">{</span><span class="n">produits</span><span class="p">[</span><span class="n">i</span><span class="p">]}</span><span class="s"> - </span><span class="p">{</span><span class="n">prix</span><span class="p">[</span><span class="n">i</span><span class="p">]:</span><span class="n">C2</span><span class="p">}</span><span class="s"> (Stock: </span><span class="p">{</span><span class="n">stock</span><span class="p">[</span><span class="n">i</span><span class="p">]}</span><span class="s">)"</span><span class="p">);</span>
        <span class="p">}</span>
        
        <span class="c1">// Simulation d'une journ√©e de ventes</span>
        <span class="n">Random</span> <span class="n">random</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Random</span><span class="p">();</span>
        <span class="kt">int</span> <span class="n">heuresOuverture</span> <span class="p">=</span> <span class="m">8</span><span class="p">;</span>
        
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"\nüîÑ === D√âBUT DES VENTES ==="</span><span class="p">);</span>
        
        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">heure</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">heure</span> <span class="p">&lt;</span> <span class="n">heuresOuverture</span><span class="p">;</span> <span class="n">heure</span><span class="p">++)</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"\n‚è∞ Heure </span><span class="p">{</span><span class="n">heure</span> <span class="p">+</span> <span class="m">8</span><span class="p">}</span><span class="s">h :"</span><span class="p">);</span>
            
            <span class="c1">// Nombre al√©atoire de clients par heure (1 √† 5)</span>
            <span class="kt">int</span> <span class="n">clientsThisHour</span> <span class="p">=</span> <span class="n">random</span><span class="p">.</span><span class="nf">Next</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="m">6</span><span class="p">);</span>
            
            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">client</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">client</span> <span class="p">&lt;=</span> <span class="n">clientsThisHour</span><span class="p">;</span> <span class="n">client</span><span class="p">++)</span>
            <span class="p">{</span>
                <span class="c1">// Client choisit un produit al√©atoire</span>
                <span class="kt">int</span> <span class="n">choix</span> <span class="p">=</span> <span class="n">random</span><span class="p">.</span><span class="nf">Next</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="n">produits</span><span class="p">.</span><span class="n">Length</span><span class="p">);</span>
                
                <span class="k">if</span> <span class="p">(</span><span class="n">stock</span><span class="p">[</span><span class="n">choix</span><span class="p">]</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="c1">// Vente r√©ussie</span>
                    <span class="n">stock</span><span class="p">[</span><span class="n">choix</span><span class="p">]--;</span>
                    <span class="n">chiffreAffaires</span> <span class="p">+=</span> <span class="n">prix</span><span class="p">[</span><span class="n">choix</span><span class="p">];</span>
                    <span class="n">ventesDuJour</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="n">produits</span><span class="p">[</span><span class="n">choix</span><span class="p">]);</span>
                    
                    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"  ‚úÖ Client </span><span class="p">{</span><span class="n">client</span><span class="p">}</span><span class="s">: </span><span class="p">{</span><span class="n">produits</span><span class="p">[</span><span class="n">choix</span><span class="p">]}</span><span class="s"> vendu (</span><span class="p">{</span><span class="n">prix</span><span class="p">[</span><span class="n">choix</span><span class="p">]:</span><span class="n">C2</span><span class="p">}</span><span class="s">)"</span><span class="p">);</span>
                <span class="p">}</span>
                <span class="k">else</span>
                <span class="p">{</span>
                    <span class="c1">// Stock √©puis√©</span>
                    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"  ‚ùå Client </span><span class="p">{</span><span class="n">client</span><span class="p">}</span><span class="s">: </span><span class="p">{</span><span class="n">produits</span><span class="p">[</span><span class="n">choix</span><span class="p">]}</span><span class="s"> non disponible (rupture de stock)"</span><span class="p">);</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
        
        <span class="c1">// Rapport de fin de journ√©e</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"\nüìä === RAPPORT DE FIN DE JOURN√âE ==="</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"üí∞ Chiffre d'affaires : </span><span class="p">{</span><span class="n">chiffreAffaires</span><span class="p">:</span><span class="n">C2</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"üì¶ Total ventes : </span><span class="p">{</span><span class="n">ventesDuJour</span><span class="p">.</span><span class="n">Count</span><span class="p">}</span><span class="s"> produits"</span><span class="p">);</span>
        
        <span class="c1">// Comptage des ventes par produit avec foreach</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"\nüìã D√©tail des ventes :"</span><span class="p">);</span>
        <span class="k">foreach</span> <span class="p">(</span><span class="kt">string</span> <span class="n">produit</span> <span class="k">in</span> <span class="n">produits</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">int</span> <span class="n">compteur</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
            <span class="k">foreach</span> <span class="p">(</span><span class="kt">string</span> <span class="n">vente</span> <span class="k">in</span> <span class="n">ventesDuJour</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">vente</span> <span class="p">==</span> <span class="n">produit</span><span class="p">)</span>
                    <span class="n">compteur</span><span class="p">++;</span>
            <span class="p">}</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"  </span><span class="p">{</span><span class="n">produit</span><span class="p">}</span><span class="s"> : </span><span class="p">{</span><span class="n">compteur</span><span class="p">}</span><span class="s"> unit√©s"</span><span class="p">);</span>
        <span class="p">}</span>
        
        <span class="c1">// Stock restant</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"\nüì¶ Stock restant :"</span><span class="p">);</span>
        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">produits</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"  </span><span class="p">{</span><span class="n">produits</span><span class="p">[</span><span class="n">i</span><span class="p">]}</span><span class="s"> : </span><span class="p">{</span><span class="n">stock</span><span class="p">[</span><span class="n">i</span><span class="p">]}</span><span class="s"> unit√©s"</span><span class="p">);</span>
            
            <span class="k">if</span> <span class="p">(</span><span class="n">stock</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">&lt;</span> <span class="m">10</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"    ‚ö†Ô∏è Stock faible ! R√©approvisionner"</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>
        
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"\nüëã Fermeture du caf√©. √Ä demain !"</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="8-performance-et-bonnes-pratiques">8. Performance et bonnes pratiques</h2>

<h3 id="-√©vitez-les-boucles-infinies">‚úÖ √âvitez les boucles infinies</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// ‚ùå Danger : boucle infinie</span>
<span class="c1">// while (true) { /* ... */ }</span>

<span class="c1">// ‚úÖ Ajoutez toujours une condition de sortie</span>
<span class="kt">int</span> <span class="n">tentatives</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">maxTentatives</span> <span class="p">=</span> <span class="m">100</span><span class="p">;</span>

<span class="k">while</span> <span class="p">(</span><span class="n">tentatives</span> <span class="p">&lt;</span> <span class="n">maxTentatives</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// Votre code</span>
    <span class="n">tentatives</span><span class="p">++;</span>
    
    <span class="k">if</span> <span class="p">(</span><span class="n">conditionDeSortie</span><span class="p">)</span>
        <span class="k">break</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="-choisissez-la-bonne-boucle">‚úÖ Choisissez la bonne boucle</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// ‚úÖ Utilisez for pour un nombre connu d'it√©rations</span>
<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="m">10</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span> <span class="p">{</span> <span class="cm">/* ... */</span> <span class="p">}</span>

<span class="c1">// ‚úÖ Utilisez while pour une condition dynamique</span>
<span class="k">while</span> <span class="p">(</span><span class="n">clientsEnAttente</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span> <span class="p">{</span> <span class="cm">/* ... */</span> <span class="p">}</span>

<span class="c1">// ‚úÖ Utilisez foreach pour parcourir des collections</span>
<span class="k">foreach</span> <span class="p">(</span><span class="kt">string</span> <span class="n">item</span> <span class="k">in</span> <span class="n">liste</span><span class="p">)</span> <span class="p">{</span> <span class="cm">/* ... */</span> <span class="p">}</span>
</code></pre></div></div>

<h3 id="-optimisez-les-boucles-imbriqu√©es">‚úÖ Optimisez les boucles imbriqu√©es</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// ‚ùå Recalcul inutile √† chaque it√©ration</span>
<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">items</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
<span class="p">{</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">j</span> <span class="p">&lt;</span> <span class="nf">getExpensiveValue</span><span class="p">();</span> <span class="n">j</span><span class="p">++)</span> <span class="c1">// Co√ªteux !</span>
    <span class="p">{</span>
        <span class="c1">// ...</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// ‚úÖ Calculez une seule fois</span>
<span class="kt">int</span> <span class="n">limite</span> <span class="p">=</span> <span class="nf">getExpensiveValue</span><span class="p">();</span>
<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">items</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
<span class="p">{</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">j</span> <span class="p">&lt;</span> <span class="n">limite</span><span class="p">;</span> <span class="n">j</span><span class="p">++)</span>
    <span class="p">{</span>
        <span class="c1">// ...</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="exercices-pratiques">Exercices pratiques</h2>

<h3 id="exercice-1--calcul-de-moyenne">Exercice 1 : Calcul de moyenne</h3>
<p>Cr√©ez un programme qui calcule la note moyenne d‚Äô√©valuation de diff√©rents caf√©s.</p>

<h3 id="exercice-2--jeu-de-devinette">Exercice 2 : Jeu de devinette</h3>
<p>Cr√©ez un jeu o√π l‚Äôutilisateur doit deviner le prix d‚Äôun caf√©. Utilisez une boucle <code class="language-plaintext highlighter-rouge">do...while</code> pour permettre plusieurs tentatives.</p>

<h3 id="exercice-3--g√©n√©rateur-de-facture">Exercice 3 : G√©n√©rateur de facture</h3>
<p>Cr√©ez un programme qui g√©n√®re une facture pour plusieurs commandes en utilisant <code class="language-plaintext highlighter-rouge">foreach</code>.</p>

<hr />

<h2 id="conclusion">Conclusion</h2>

<p>Les boucles sont les <strong>outils d‚Äôautomatisation</strong> de la programmation ! Elles nous permettent de :</p>

<ul>
  <li>‚úÖ <strong>R√©p√©ter efficacement</strong> des t√¢ches avec <code class="language-plaintext highlighter-rouge">for</code></li>
  <li>‚úÖ <strong>Traiter des conditions dynamiques</strong> avec <code class="language-plaintext highlighter-rouge">while</code></li>
  <li>‚úÖ <strong>Parcourir des collections</strong> avec <code class="language-plaintext highlighter-rouge">foreach</code></li>
  <li>‚úÖ <strong>Contr√¥ler l‚Äôex√©cution</strong> avec <code class="language-plaintext highlighter-rouge">break</code> et <code class="language-plaintext highlighter-rouge">continue</code></li>
</ul>

<p>Comme un caf√© qui sert des dizaines de clients avec la m√™me qualit√©, les boucles garantissent la r√©p√©tition fiable de nos processus !</p>

<p><strong>Prochaine √©tape :</strong> Nous d√©couvrirons les collections et tableaux pour organiser et g√©rer efficacement nos donn√©es de caf√© ! ‚òï</p>

<hr />

<p><em>Pratiquez ces exemples et cr√©ez vos propres sc√©narios. Comme la pr√©paration du caf√© parfait, la ma√Ætrise des boucles vient avec la r√©p√©tition ! üöÄ</em></p>]]></content><author><name>MattDevBzh</name></author><summary type="html"><![CDATA[Dans un caf√© anim√©, certaines t√¢ches se r√©p√®tent sans cesse : pr√©parer plusieurs espressos, servir une file de clients, nettoyer les tasses‚Ä¶ En programmation C#, les boucles nous permettent d‚Äôautomatiser ces actions r√©p√©titives ! ‚òï]]></summary></entry><entry><title type="html">Conditions et structures de contr√¥le en C# : Prendre les bonnes d√©cisions dans votre caf√©</title><link href="http://0.0.0.0:4000/2025/01/27/conditions-structures-controle.html" rel="alternate" type="text/html" title="Conditions et structures de contr√¥le en C# : Prendre les bonnes d√©cisions dans votre caf√©" /><published>2025-01-27T00:00:00+00:00</published><updated>2025-01-27T00:00:00+00:00</updated><id>http://0.0.0.0:4000/2025/01/27/conditions-structures-controle</id><content type="html" xml:base="http://0.0.0.0:4000/2025/01/27/conditions-structures-controle.html"><![CDATA[<p>Dans la programmation comme dans un caf√©, il faut constamment prendre des d√©cisions ! <strong>Quel caf√© servir selon les pr√©f√©rences du client ? Que faire si la machine est en panne ?</strong> Les structures de contr√¥le en C# nous permettent de g√©rer ces situations. ‚òï</p>

<p>D√©couvrons ensemble comment programmer la logique de d√©cision avec des exemples tir√©s de la gestion d‚Äôun caf√© !</p>

<h2 id="sommaire">Sommaire</h2>
<ul id="markdown-toc">
  <li><a href="#sommaire" id="markdown-toc-sommaire">Sommaire</a></li>
  <li><a href="#quest-ce-quune-structure-de-contr√¥le-" id="markdown-toc-quest-ce-quune-structure-de-contr√¥le-">Qu‚Äôest-ce qu‚Äôune structure de contr√¥le ?</a></li>
  <li><a href="#1-la-condition-simple--if" id="markdown-toc-1-la-condition-simple--if">1. La condition simple : <code class="language-plaintext highlighter-rouge">if</code></a>    <ul>
      <li><a href="#syntaxe-de-base" id="markdown-toc-syntaxe-de-base">Syntaxe de base</a></li>
      <li><a href="#exemple--v√©rifier-la-disponibilit√©-du-caf√©" id="markdown-toc-exemple--v√©rifier-la-disponibilit√©-du-caf√©">Exemple : V√©rifier la disponibilit√© du caf√©</a></li>
      <li><a href="#exemple--gestion-de-lheure-douverture" id="markdown-toc-exemple--gestion-de-lheure-douverture">Exemple : Gestion de l‚Äôheure d‚Äôouverture</a></li>
    </ul>
  </li>
  <li><a href="#2-la-condition-alternative--ifelse" id="markdown-toc-2-la-condition-alternative--ifelse">2. La condition alternative : <code class="language-plaintext highlighter-rouge">if...else</code></a>    <ul>
      <li><a href="#syntaxe" id="markdown-toc-syntaxe">Syntaxe</a></li>
      <li><a href="#exemple--recommandation-selon-la-taille-de-tasse" id="markdown-toc-exemple--recommandation-selon-la-taille-de-tasse">Exemple : Recommandation selon la taille de tasse</a></li>
      <li><a href="#exemple--gestion-de-stock" id="markdown-toc-exemple--gestion-de-stock">Exemple : Gestion de stock</a></li>
    </ul>
  </li>
  <li><a href="#3-les-conditions-multiples--ifelse-ifelse" id="markdown-toc-3-les-conditions-multiples--ifelse-ifelse">3. Les conditions multiples : <code class="language-plaintext highlighter-rouge">if...else if...else</code></a>    <ul>
      <li><a href="#syntaxe-1" id="markdown-toc-syntaxe-1">Syntaxe</a></li>
      <li><a href="#exemple--menu-selon-lheure" id="markdown-toc-exemple--menu-selon-lheure">Exemple : Menu selon l‚Äôheure</a></li>
      <li><a href="#exemple--classification-des-clients" id="markdown-toc-exemple--classification-des-clients">Exemple : Classification des clients</a></li>
    </ul>
  </li>
  <li><a href="#4-linstruction-switch--choisir-parmi-plusieurs-options" id="markdown-toc-4-linstruction-switch--choisir-parmi-plusieurs-options">4. L‚Äôinstruction <code class="language-plaintext highlighter-rouge">switch</code> : Choisir parmi plusieurs options</a>    <ul>
      <li><a href="#syntaxe-2" id="markdown-toc-syntaxe-2">Syntaxe</a></li>
      <li><a href="#exemple--pr√©paration-selon-le-type-de-caf√©" id="markdown-toc-exemple--pr√©paration-selon-le-type-de-caf√©">Exemple : Pr√©paration selon le type de caf√©</a></li>
      <li><a href="#exemple--calcul-du-prix-selon-la-taille" id="markdown-toc-exemple--calcul-du-prix-selon-la-taille">Exemple : Calcul du prix selon la taille</a></li>
    </ul>
  </li>
  <li><a href="#5-les-op√©rateurs-de-comparaison" id="markdown-toc-5-les-op√©rateurs-de-comparaison">5. Les op√©rateurs de comparaison</a>    <ul>
      <li><a href="#op√©rateurs-de-base" id="markdown-toc-op√©rateurs-de-base">Op√©rateurs de base</a></li>
      <li><a href="#op√©rateurs-logiques" id="markdown-toc-op√©rateurs-logiques">Op√©rateurs logiques</a></li>
      <li><a href="#exemple-pratique--validation-de-commande" id="markdown-toc-exemple-pratique--validation-de-commande">Exemple pratique : Validation de commande</a></li>
    </ul>
  </li>
  <li><a href="#6-exemple-complet--syst√®me-de-commande" id="markdown-toc-6-exemple-complet--syst√®me-de-commande">6. Exemple complet : Syst√®me de commande</a></li>
  <li><a href="#7-conseils-et-bonnes-pratiques" id="markdown-toc-7-conseils-et-bonnes-pratiques">7. Conseils et bonnes pratiques</a>    <ul>
      <li><a href="#-utilisez-des-noms-explicites" id="markdown-toc--utilisez-des-noms-explicites">‚úÖ Utilisez des noms explicites</a></li>
      <li><a href="#-groupez-les-conditions-complexes" id="markdown-toc--groupez-les-conditions-complexes">‚úÖ Groupez les conditions complexes</a></li>
      <li><a href="#-pr√©f√©rez-switch-pour-de-multiples-valeurs-exactes" id="markdown-toc--pr√©f√©rez-switch-pour-de-multiples-valeurs-exactes">‚úÖ Pr√©f√©rez <code class="language-plaintext highlighter-rouge">switch</code> pour de multiples valeurs exactes</a></li>
    </ul>
  </li>
  <li><a href="#exercices-pratiques" id="markdown-toc-exercices-pratiques">Exercices pratiques</a>    <ul>
      <li><a href="#exercice-1--menu-dynamique" id="markdown-toc-exercice-1--menu-dynamique">Exercice 1 : Menu dynamique</a></li>
      <li><a href="#exercice-2--calculateur-de-remise" id="markdown-toc-exercice-2--calculateur-de-remise">Exercice 2 : Calculateur de remise</a></li>
      <li><a href="#exercice-3--v√©rificateur-de-stock" id="markdown-toc-exercice-3--v√©rificateur-de-stock">Exercice 3 : V√©rificateur de stock</a></li>
    </ul>
  </li>
  <li><a href="#conclusion" id="markdown-toc-conclusion">Conclusion</a></li>
</ul>

<hr />

<h2 id="quest-ce-quune-structure-de-contr√¥le-">Qu‚Äôest-ce qu‚Äôune structure de contr√¥le ?</h2>

<p>Une <strong>structure de contr√¥le</strong> d√©termine l‚Äôordre d‚Äôex√©cution des instructions dans un programme. C‚Äôest comme les r√®gles de fonctionnement de votre caf√© :</p>

<ul>
  <li><strong>Si</strong> le client commande un cappuccino <strong>alors</strong> pr√©parer du lait mouss√©</li>
  <li><strong>Si</strong> il n‚Äôy a plus de grains <strong>alors</strong> commander un r√©approvisionnement</li>
  <li><strong>Selon</strong> l‚Äôheure de la journ√©e <strong>choisir</strong> le menu appropri√©</li>
</ul>

<hr />

<h2 id="1-la-condition-simple--if">1. La condition simple : <code class="language-plaintext highlighter-rouge">if</code></h2>

<p>La structure <code class="language-plaintext highlighter-rouge">if</code> permet d‚Äôex√©cuter du code seulement si une condition est vraie.</p>

<h3 id="syntaxe-de-base">Syntaxe de base</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="p">(</span><span class="n">condition</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// Code √† ex√©cuter si la condition est vraie</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="exemple--v√©rifier-la-disponibilit√©-du-caf√©">Exemple : V√©rifier la disponibilit√© du caf√©</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">stockCafe</span> <span class="p">=</span> <span class="m">50</span><span class="p">;</span> <span class="c1">// grammes restants</span>
<span class="kt">int</span> <span class="n">grammesPourEspresso</span> <span class="p">=</span> <span class="m">18</span><span class="p">;</span>

<span class="k">if</span> <span class="p">(</span><span class="n">stockCafe</span> <span class="p">&gt;=</span> <span class="n">grammesPourEspresso</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚úÖ Espresso disponible !"</span><span class="p">);</span>
    <span class="n">stockCafe</span> <span class="p">=</span> <span class="n">stockCafe</span> <span class="p">-</span> <span class="n">grammesPourEspresso</span><span class="p">;</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"Stock restant : </span><span class="p">{</span><span class="n">stockCafe</span><span class="p">}</span><span class="s">g"</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="exemple--gestion-de-lheure-douverture">Exemple : Gestion de l‚Äôheure d‚Äôouverture</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">heureActuelle</span> <span class="p">=</span> <span class="m">8</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">heureOuverture</span> <span class="p">=</span> <span class="m">7</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">heureFermeture</span> <span class="p">=</span> <span class="m">19</span><span class="p">;</span>

<span class="k">if</span> <span class="p">(</span><span class="n">heureActuelle</span> <span class="p">&gt;=</span> <span class="n">heureOuverture</span> <span class="p">&amp;&amp;</span> <span class="n">heureActuelle</span> <span class="p">&lt;</span> <span class="n">heureFermeture</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚òï Le caf√© est ouvert ! Bienvenue !"</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="2-la-condition-alternative--ifelse">2. La condition alternative : <code class="language-plaintext highlighter-rouge">if...else</code></h2>

<p>Quand on a deux choix possibles, on utilise <code class="language-plaintext highlighter-rouge">if...else</code>.</p>

<h3 id="syntaxe">Syntaxe</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="p">(</span><span class="n">condition</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// Code si la condition est vraie</span>
<span class="p">}</span>
<span class="k">else</span>
<span class="p">{</span>
    <span class="c1">// Code si la condition est fausse</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="exemple--recommandation-selon-la-taille-de-tasse">Exemple : Recommandation selon la taille de tasse</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">string</span> <span class="n">tailleTasse</span> <span class="p">=</span> <span class="s">"Grande"</span><span class="p">;</span>
<span class="kt">double</span> <span class="n">prixBase</span> <span class="p">=</span> <span class="m">2.50</span><span class="p">;</span>
<span class="kt">double</span> <span class="n">prixFinal</span><span class="p">;</span>

<span class="k">if</span> <span class="p">(</span><span class="n">tailleTasse</span> <span class="p">==</span> <span class="s">"Grande"</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">prixFinal</span> <span class="p">=</span> <span class="n">prixBase</span> <span class="p">+</span> <span class="m">0.50</span><span class="p">;</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚òï Tasse grande s√©lectionn√©e. Prix : </span><span class="p">{</span><span class="n">prixFinal</span><span class="p">}</span><span class="s">‚Ç¨"</span><span class="p">);</span>
<span class="p">}</span>
<span class="k">else</span>
<span class="p">{</span>
    <span class="n">prixFinal</span> <span class="p">=</span> <span class="n">prixBase</span><span class="p">;</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚òï Tasse normale s√©lectionn√©e. Prix : </span><span class="p">{</span><span class="n">prixFinal</span><span class="p">}</span><span class="s">‚Ç¨"</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="exemple--gestion-de-stock">Exemple : Gestion de stock</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">stockGrains</span> <span class="p">=</span> <span class="m">30</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">stockMinimum</span> <span class="p">=</span> <span class="m">50</span><span class="p">;</span>

<span class="k">if</span> <span class="p">(</span><span class="n">stockGrains</span> <span class="p">&gt;=</span> <span class="n">stockMinimum</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚úÖ Stock suffisant pour la journ√©e"</span><span class="p">);</span>
<span class="p">}</span>
<span class="k">else</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚ö†Ô∏è Stock faible ! Commander des grains urgentement"</span><span class="p">);</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"Il manque </span><span class="p">{</span><span class="n">stockMinimum</span> <span class="p">-</span> <span class="n">stockGrains</span><span class="p">}</span><span class="s">g de caf√©"</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="3-les-conditions-multiples--ifelse-ifelse">3. Les conditions multiples : <code class="language-plaintext highlighter-rouge">if...else if...else</code></h2>

<p>Pour g√©rer plusieurs possibilit√©s, on encha√Æne les conditions.</p>

<h3 id="syntaxe-1">Syntaxe</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="p">(</span><span class="n">condition1</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// Code pour condition1</span>
<span class="p">}</span>
<span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">condition2</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// Code pour condition2  </span>
<span class="p">}</span>
<span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">condition3</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// Code pour condition3</span>
<span class="p">}</span>
<span class="k">else</span>
<span class="p">{</span>
    <span class="c1">// Code par d√©faut</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="exemple--menu-selon-lheure">Exemple : Menu selon l‚Äôheure</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">heure</span> <span class="p">=</span> <span class="m">14</span><span class="p">;</span>

<span class="k">if</span> <span class="p">(</span><span class="n">heure</span> <span class="p">&gt;=</span> <span class="m">6</span> <span class="p">&amp;&amp;</span> <span class="n">heure</span> <span class="p">&lt;</span> <span class="m">11</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"üåÖ Menu petit-d√©jeuner"</span><span class="p">);</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"- Espresso + croissant : 4‚Ç¨"</span><span class="p">);</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"- Cappuccino + pain au chocolat : 5‚Ç¨"</span><span class="p">);</span>
<span class="p">}</span>
<span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">heure</span> <span class="p">&gt;=</span> <span class="m">11</span> <span class="p">&amp;&amp;</span> <span class="n">heure</span> <span class="p">&lt;</span> <span class="m">14</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚òÄÔ∏è Menu d√©jeuner"</span><span class="p">);</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"- Caf√© + sandwich : 8‚Ç¨"</span><span class="p">);</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"- Americano + salade : 9‚Ç¨"</span><span class="p">);</span>
<span class="p">}</span>
<span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">heure</span> <span class="p">&gt;=</span> <span class="m">14</span> <span class="p">&amp;&amp;</span> <span class="n">heure</span> <span class="p">&lt;</span> <span class="m">17</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"üç∞ Menu go√ªter"</span><span class="p">);</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"- Latte + part de g√¢teau : 6‚Ç¨"</span><span class="p">);</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"- Th√© + muffin : 5‚Ç¨"</span><span class="p">);</span>
<span class="p">}</span>
<span class="k">else</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"üåô Menu soir√©e"</span><span class="p">);</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"- D√©caf√©in√© + tisane : 3‚Ç¨"</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="exemple--classification-des-clients">Exemple : Classification des clients</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">nombreVisites</span> <span class="p">=</span> <span class="m">15</span><span class="p">;</span>
<span class="kt">string</span> <span class="n">typeClient</span><span class="p">;</span>
<span class="kt">double</span> <span class="n">remise</span><span class="p">;</span>

<span class="k">if</span> <span class="p">(</span><span class="n">nombreVisites</span> <span class="p">&gt;=</span> <span class="m">50</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">typeClient</span> <span class="p">=</span> <span class="s">"Client VIP ‚≠ê"</span><span class="p">;</span>
    <span class="n">remise</span> <span class="p">=</span> <span class="m">0.20</span><span class="p">;</span> <span class="c1">// 20% de remise</span>
<span class="p">}</span>
<span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">nombreVisites</span> <span class="p">&gt;=</span> <span class="m">20</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">typeClient</span> <span class="p">=</span> <span class="s">"Client fid√®le üíñ"</span><span class="p">;</span>
    <span class="n">remise</span> <span class="p">=</span> <span class="m">0.10</span><span class="p">;</span> <span class="c1">// 10% de remise</span>
<span class="p">}</span>
<span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">nombreVisites</span> <span class="p">&gt;=</span> <span class="m">5</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">typeClient</span> <span class="p">=</span> <span class="s">"Client r√©gulier ‚òï"</span><span class="p">;</span>
    <span class="n">remise</span> <span class="p">=</span> <span class="m">0.05</span><span class="p">;</span> <span class="c1">// 5% de remise</span>
<span class="p">}</span>
<span class="k">else</span>
<span class="p">{</span>
    <span class="n">typeClient</span> <span class="p">=</span> <span class="s">"Nouveau client üëã"</span><span class="p">;</span>
    <span class="n">remise</span> <span class="p">=</span> <span class="m">0.0</span><span class="p">;</span> <span class="c1">// Pas de remise</span>
<span class="p">}</span>

<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"Type : </span><span class="p">{</span><span class="n">typeClient</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
<span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"Remise applicable : </span><span class="p">{</span><span class="n">remise</span> <span class="p">*</span> <span class="m">100</span><span class="p">}</span><span class="s">%"</span><span class="p">);</span>
</code></pre></div></div>

<hr />

<h2 id="4-linstruction-switch--choisir-parmi-plusieurs-options">4. L‚Äôinstruction <code class="language-plaintext highlighter-rouge">switch</code> : Choisir parmi plusieurs options</h2>

<p>Quand on a plusieurs valeurs pr√©cises √† tester, <code class="language-plaintext highlighter-rouge">switch</code> est plus lisible que de multiples <code class="language-plaintext highlighter-rouge">if...else if</code>.</p>

<h3 id="syntaxe-2">Syntaxe</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">switch</span> <span class="p">(</span><span class="n">variable</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">case</span> <span class="n">valeur1</span><span class="p">:</span>
        <span class="c1">// Code pour valeur1</span>
        <span class="k">break</span><span class="p">;</span>
    <span class="k">case</span> <span class="n">valeur2</span><span class="p">:</span>
        <span class="c1">// Code pour valeur2</span>
        <span class="k">break</span><span class="p">;</span>
    <span class="k">default</span><span class="p">:</span>
        <span class="c1">// Code par d√©faut</span>
        <span class="k">break</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="exemple--pr√©paration-selon-le-type-de-caf√©">Exemple : Pr√©paration selon le type de caf√©</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">string</span> <span class="n">typeCafe</span> <span class="p">=</span> <span class="s">"Cappuccino"</span><span class="p">;</span>

<span class="k">switch</span> <span class="p">(</span><span class="n">typeCafe</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">case</span> <span class="s">"Espresso"</span><span class="p">:</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚òï Pr√©paration Espresso :"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"- 18g de caf√© moulu"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"- 30ml d'eau chaude"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"- Extraction en 25 secondes"</span><span class="p">);</span>
        <span class="k">break</span><span class="p">;</span>
        
    <span class="k">case</span> <span class="s">"Americano"</span><span class="p">:</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚òï Pr√©paration Americano :"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"- 1 dose d'espresso"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"- 120ml d'eau chaude"</span><span class="p">);</span>
        <span class="k">break</span><span class="p">;</span>
        
    <span class="k">case</span> <span class="s">"Cappuccino"</span><span class="p">:</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚òï Pr√©paration Cappuccino :"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"- 1 dose d'espresso"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"- 60ml de lait"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"- Mousser le lait"</span><span class="p">);</span>
        <span class="k">break</span><span class="p">;</span>
        
    <span class="k">case</span> <span class="s">"Latte"</span><span class="p">:</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚òï Pr√©paration Latte :"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"- 1 dose d'espresso"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"- 180ml de lait"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"- Mousse l√©g√®re"</span><span class="p">);</span>
        <span class="k">break</span><span class="p">;</span>
        
    <span class="k">default</span><span class="p">:</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚ùå Type de caf√© non reconnu"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"Caf√©s disponibles : Espresso, Americano, Cappuccino, Latte"</span><span class="p">);</span>
        <span class="k">break</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="exemple--calcul-du-prix-selon-la-taille">Exemple : Calcul du prix selon la taille</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">string</span> <span class="n">taille</span> <span class="p">=</span> <span class="s">"L"</span><span class="p">;</span>
<span class="kt">double</span> <span class="n">prixBase</span> <span class="p">=</span> <span class="m">3.0</span><span class="p">;</span>
<span class="kt">double</span> <span class="n">prixFinal</span><span class="p">;</span>

<span class="k">switch</span> <span class="p">(</span><span class="n">taille</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">case</span> <span class="s">"S"</span><span class="p">:</span>
        <span class="n">prixFinal</span> <span class="p">=</span> <span class="n">prixBase</span> <span class="p">-</span> <span class="m">0.5</span><span class="p">;</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"Taille S - Prix : </span><span class="p">{</span><span class="n">prixFinal</span><span class="p">}</span><span class="s">‚Ç¨"</span><span class="p">);</span>
        <span class="k">break</span><span class="p">;</span>
        
    <span class="k">case</span> <span class="s">"M"</span><span class="p">:</span>
        <span class="n">prixFinal</span> <span class="p">=</span> <span class="n">prixBase</span><span class="p">;</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"Taille M - Prix : </span><span class="p">{</span><span class="n">prixFinal</span><span class="p">}</span><span class="s">‚Ç¨"</span><span class="p">);</span>
        <span class="k">break</span><span class="p">;</span>
        
    <span class="k">case</span> <span class="s">"L"</span><span class="p">:</span>
        <span class="n">prixFinal</span> <span class="p">=</span> <span class="n">prixBase</span> <span class="p">+</span> <span class="m">0.5</span><span class="p">;</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"Taille L - Prix : </span><span class="p">{</span><span class="n">prixFinal</span><span class="p">}</span><span class="s">‚Ç¨"</span><span class="p">);</span>
        <span class="k">break</span><span class="p">;</span>
        
    <span class="k">case</span> <span class="s">"XL"</span><span class="p">:</span>
        <span class="n">prixFinal</span> <span class="p">=</span> <span class="n">prixBase</span> <span class="p">+</span> <span class="m">1.0</span><span class="p">;</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"Taille XL - Prix : </span><span class="p">{</span><span class="n">prixFinal</span><span class="p">}</span><span class="s">‚Ç¨"</span><span class="p">);</span>
        <span class="k">break</span><span class="p">;</span>
        
    <span class="k">default</span><span class="p">:</span>
        <span class="n">prixFinal</span> <span class="p">=</span> <span class="n">prixBase</span><span class="p">;</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"Taille inconnue, prix standard M : </span><span class="p">{</span><span class="n">prixFinal</span><span class="p">}</span><span class="s">‚Ç¨"</span><span class="p">);</span>
        <span class="k">break</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="5-les-op√©rateurs-de-comparaison">5. Les op√©rateurs de comparaison</h2>

<h3 id="op√©rateurs-de-base">Op√©rateurs de base</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">stock</span> <span class="p">=</span> <span class="m">100</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">minimum</span> <span class="p">=</span> <span class="m">50</span><span class="p">;</span>

<span class="c1">// √âgalit√©</span>
<span class="kt">bool</span> <span class="n">estEgal</span> <span class="p">=</span> <span class="n">stock</span> <span class="p">==</span> <span class="n">minimum</span><span class="p">;</span>           <span class="c1">// false</span>

<span class="c1">// Diff√©rence  </span>
<span class="kt">bool</span> <span class="n">estDifferent</span> <span class="p">=</span> <span class="n">stock</span> <span class="p">!=</span> <span class="n">minimum</span><span class="p">;</span>      <span class="c1">// true</span>

<span class="c1">// Comparaisons</span>
<span class="kt">bool</span> <span class="n">estSuperieur</span> <span class="p">=</span> <span class="n">stock</span> <span class="p">&gt;</span> <span class="n">minimum</span><span class="p">;</span>       <span class="c1">// true</span>
<span class="kt">bool</span> <span class="n">estInferieur</span> <span class="p">=</span> <span class="n">stock</span> <span class="p">&lt;</span> <span class="n">minimum</span><span class="p">;</span>       <span class="c1">// false</span>
<span class="kt">bool</span> <span class="n">estSuperieurEgal</span> <span class="p">=</span> <span class="n">stock</span> <span class="p">&gt;=</span> <span class="n">minimum</span><span class="p">;</span>  <span class="c1">// true</span>
<span class="kt">bool</span> <span class="n">estInferieurEgal</span> <span class="p">=</span> <span class="n">stock</span> <span class="p">&lt;=</span> <span class="n">minimum</span><span class="p">;</span>  <span class="c1">// false</span>
</code></pre></div></div>

<h3 id="op√©rateurs-logiques">Op√©rateurs logiques</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">bool</span> <span class="n">machineAllumee</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
<span class="kt">bool</span> <span class="n">stockSuffisant</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
<span class="kt">bool</span> <span class="n">clientPresent</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>

<span class="c1">// ET logique (&amp;&amp;) - toutes les conditions doivent √™tre vraies</span>
<span class="kt">bool</span> <span class="n">peutServir</span> <span class="p">=</span> <span class="n">machineAllumee</span> <span class="p">&amp;&amp;</span> <span class="n">stockSuffisant</span><span class="p">;</span>  <span class="c1">// true</span>

<span class="c1">// OU logique (||) - au moins une condition doit √™tre vraie  </span>
<span class="kt">bool</span> <span class="n">ouvert</span> <span class="p">=</span> <span class="n">clientPresent</span> <span class="p">||</span> <span class="n">stockSuffisant</span><span class="p">;</span>       <span class="c1">// true</span>

<span class="c1">// NON logique (!) - inverse la valeur</span>
<span class="kt">bool</span> <span class="n">machineFermee</span> <span class="p">=</span> <span class="p">!</span><span class="n">machineAllumee</span><span class="p">;</span>               <span class="c1">// false</span>
</code></pre></div></div>

<h3 id="exemple-pratique--validation-de-commande">Exemple pratique : Validation de commande</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">stockCafe</span> <span class="p">=</span> <span class="m">200</span><span class="p">;</span>     <span class="c1">// grammes</span>
<span class="kt">int</span> <span class="n">stockLait</span> <span class="p">=</span> <span class="m">500</span><span class="p">;</span>     <span class="c1">// millilitres</span>
<span class="kt">bool</span> <span class="n">machineMarche</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
<span class="kt">string</span> <span class="n">commande</span> <span class="p">=</span> <span class="s">"Cappuccino"</span><span class="p">;</span>

<span class="kt">bool</span> <span class="n">peutPreparerCappuccino</span> <span class="p">=</span> <span class="n">machineMarche</span> <span class="p">&amp;&amp;</span> 
                             <span class="n">stockCafe</span> <span class="p">&gt;=</span> <span class="m">18</span> <span class="p">&amp;&amp;</span> 
                             <span class="n">stockLait</span> <span class="p">&gt;=</span> <span class="m">60</span><span class="p">;</span>

<span class="k">if</span> <span class="p">(</span><span class="n">commande</span> <span class="p">==</span> <span class="s">"Cappuccino"</span> <span class="p">&amp;&amp;</span> <span class="n">peutPreparerCappuccino</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚úÖ Cappuccino en pr√©paration !"</span><span class="p">);</span>
<span class="p">}</span>
<span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">commande</span> <span class="p">==</span> <span class="s">"Cappuccino"</span> <span class="p">&amp;&amp;</span> <span class="p">!</span><span class="n">peutPreparerCappuccino</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚ùå Impossible de pr√©parer le cappuccino :"</span><span class="p">);</span>
    
    <span class="k">if</span> <span class="p">(!</span><span class="n">machineMarche</span><span class="p">)</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"- Machine en panne"</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">stockCafe</span> <span class="p">&lt;</span> <span class="m">18</span><span class="p">)</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"- Pas assez de caf√©"</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">stockLait</span> <span class="p">&lt;</span> <span class="m">60</span><span class="p">)</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"- Pas assez de lait"</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="6-exemple-complet--syst√®me-de-commande">6. Exemple complet : Syst√®me de commande</h2>

<p>Assemblons tout dans un syst√®me de gestion de commandes :</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">ProgrammeCafe</span>
<span class="p">{</span>
    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="c1">// √âtat du caf√©</span>
        <span class="kt">int</span> <span class="n">stockCafe</span> <span class="p">=</span> <span class="m">150</span><span class="p">;</span>        <span class="c1">// grammes</span>
        <span class="kt">int</span> <span class="n">stockLait</span> <span class="p">=</span> <span class="m">800</span><span class="p">;</span>        <span class="c1">// ml</span>
        <span class="kt">bool</span> <span class="n">machineMarche</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">heure</span> <span class="p">=</span> <span class="m">10</span><span class="p">;</span>
        
        <span class="c1">// Commande client</span>
        <span class="kt">string</span> <span class="n">nomClient</span> <span class="p">=</span> <span class="s">"Sophie"</span><span class="p">;</span>
        <span class="kt">string</span> <span class="n">typeCommande</span> <span class="p">=</span> <span class="s">"Cappuccino"</span><span class="p">;</span>
        <span class="kt">string</span> <span class="n">taille</span> <span class="p">=</span> <span class="s">"L"</span><span class="p">;</span>
        
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"=== ‚òï CAF√â DU COIN ‚òï ==="</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"Client : </span><span class="p">{</span><span class="n">nomClient</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"Commande : </span><span class="p">{</span><span class="n">typeCommande</span><span class="p">}</span><span class="s"> taille </span><span class="p">{</span><span class="n">taille</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">();</span>
        
        <span class="c1">// V√©rifier l'heure d'ouverture</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">heure</span> <span class="p">&lt;</span> <span class="m">7</span> <span class="p">||</span> <span class="n">heure</span> <span class="p">&gt;</span> <span class="m">19</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚ùå D√©sol√©, nous sommes ferm√©s !"</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"Horaires : 7h - 19h"</span><span class="p">);</span>
            <span class="k">return</span><span class="p">;</span>
        <span class="p">}</span>
        
        <span class="c1">// D√©terminer les besoins selon la commande</span>
        <span class="kt">int</span> <span class="n">cafeNecessaire</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">laitNecessaire</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
        <span class="kt">double</span> <span class="n">prixBase</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
        
        <span class="k">switch</span> <span class="p">(</span><span class="n">typeCommande</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">case</span> <span class="s">"Espresso"</span><span class="p">:</span>
                <span class="n">cafeNecessaire</span> <span class="p">=</span> <span class="m">18</span><span class="p">;</span>
                <span class="n">laitNecessaire</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
                <span class="n">prixBase</span> <span class="p">=</span> <span class="m">2.5</span><span class="p">;</span>
                <span class="k">break</span><span class="p">;</span>
                
            <span class="k">case</span> <span class="s">"Americano"</span><span class="p">:</span>
                <span class="n">cafeNecessaire</span> <span class="p">=</span> <span class="m">18</span><span class="p">;</span>
                <span class="n">laitNecessaire</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
                <span class="n">prixBase</span> <span class="p">=</span> <span class="m">3.0</span><span class="p">;</span>
                <span class="k">break</span><span class="p">;</span>
                
            <span class="k">case</span> <span class="s">"Cappuccino"</span><span class="p">:</span>
                <span class="n">cafeNecessaire</span> <span class="p">=</span> <span class="m">18</span><span class="p">;</span>
                <span class="n">laitNecessaire</span> <span class="p">=</span> <span class="m">60</span><span class="p">;</span>
                <span class="n">prixBase</span> <span class="p">=</span> <span class="m">4.0</span><span class="p">;</span>
                <span class="k">break</span><span class="p">;</span>
                
            <span class="k">case</span> <span class="s">"Latte"</span><span class="p">:</span>
                <span class="n">cafeNecessaire</span> <span class="p">=</span> <span class="m">18</span><span class="p">;</span>
                <span class="n">laitNecessaire</span> <span class="p">=</span> <span class="m">150</span><span class="p">;</span>
                <span class="n">prixBase</span> <span class="p">=</span> <span class="m">4.5</span><span class="p">;</span>
                <span class="k">break</span><span class="p">;</span>
                
            <span class="k">default</span><span class="p">:</span>
                <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚ùå Type de caf√© non disponible"</span><span class="p">);</span>
                <span class="k">return</span><span class="p">;</span>
        <span class="p">}</span>
        
        <span class="c1">// Ajuster le prix selon la taille</span>
        <span class="kt">double</span> <span class="n">prixFinal</span> <span class="p">=</span> <span class="n">prixBase</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">taille</span> <span class="p">==</span> <span class="s">"L"</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">prixFinal</span> <span class="p">+=</span> <span class="m">0.5</span><span class="p">;</span>
            <span class="n">cafeNecessaire</span> <span class="p">+=</span> <span class="m">3</span><span class="p">;</span>
            <span class="n">laitNecessaire</span> <span class="p">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">)(</span><span class="n">laitNecessaire</span> <span class="p">*</span> <span class="m">1.3</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">taille</span> <span class="p">==</span> <span class="s">"XL"</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">prixFinal</span> <span class="p">+=</span> <span class="m">1.0</span><span class="p">;</span>
            <span class="n">cafeNecessaire</span> <span class="p">+=</span> <span class="m">6</span><span class="p">;</span>
            <span class="n">laitNecessaire</span> <span class="p">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">)(</span><span class="n">laitNecessaire</span> <span class="p">*</span> <span class="m">1.6</span><span class="p">);</span>
        <span class="p">}</span>
        
        <span class="c1">// V√©rifications</span>
        <span class="kt">bool</span> <span class="n">stockOk</span> <span class="p">=</span> <span class="n">stockCafe</span> <span class="p">&gt;=</span> <span class="n">cafeNecessaire</span> <span class="p">&amp;&amp;</span> <span class="n">stockLait</span> <span class="p">&gt;=</span> <span class="n">laitNecessaire</span><span class="p">;</span>
        
        <span class="k">if</span> <span class="p">(!</span><span class="n">machineMarche</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚ùå Machine en maintenance, d√©sol√© !"</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="k">if</span> <span class="p">(!</span><span class="n">stockOk</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚ùå Stock insuffisant :"</span><span class="p">);</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">stockCafe</span> <span class="p">&lt;</span> <span class="n">cafeNecessaire</span><span class="p">)</span>
                <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"- Caf√© manquant : </span><span class="p">{</span><span class="n">cafeNecessaire</span> <span class="p">-</span> <span class="n">stockCafe</span><span class="p">}</span><span class="s">g"</span><span class="p">);</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">stockLait</span> <span class="p">&lt;</span> <span class="n">laitNecessaire</span><span class="p">)</span>
                <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"- Lait manquant : </span><span class="p">{</span><span class="n">laitNecessaire</span> <span class="p">-</span> <span class="n">stockLait</span><span class="p">}</span><span class="s">ml"</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">else</span>
        <span class="p">{</span>
            <span class="c1">// Pr√©parer la commande</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"‚úÖ Commande accept√©e !"</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"Prix : </span><span class="p">{</span><span class="n">prixFinal</span><span class="p">}</span><span class="s">‚Ç¨"</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">();</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"üîÑ Pr√©paration en cours..."</span><span class="p">);</span>
            
            <span class="c1">// D√©cr√©menter le stock</span>
            <span class="n">stockCafe</span> <span class="p">-=</span> <span class="n">cafeNecessaire</span><span class="p">;</span>
            <span class="n">stockLait</span> <span class="p">-=</span> <span class="n">laitNecessaire</span><span class="p">;</span>
            
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"‚òï </span><span class="p">{</span><span class="n">typeCommande</span><span class="p">}</span><span class="s"> </span><span class="p">{</span><span class="n">taille</span><span class="p">}</span><span class="s"> pr√™t pour </span><span class="p">{</span><span class="n">nomClient</span><span class="p">}</span><span class="s"> !"</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"Stock restant - Caf√© : </span><span class="p">{</span><span class="n">stockCafe</span><span class="p">}</span><span class="s">g, Lait : </span><span class="p">{</span><span class="n">stockLait</span><span class="p">}</span><span class="s">ml"</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="7-conseils-et-bonnes-pratiques">7. Conseils et bonnes pratiques</h2>

<h3 id="-utilisez-des-noms-explicites">‚úÖ Utilisez des noms explicites</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// üëç Bon</span>
<span class="k">if</span> <span class="p">(</span><span class="n">stockCafe</span> <span class="p">&gt;=</span> <span class="n">cafeNecessairePourEspresso</span><span class="p">)</span>

<span class="c1">// üëé √âviter  </span>
<span class="k">if</span> <span class="p">(</span><span class="n">x</span> <span class="p">&gt;=</span> <span class="n">y</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="-groupez-les-conditions-complexes">‚úÖ Groupez les conditions complexes</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">bool</span> <span class="n">stockSuffisant</span> <span class="p">=</span> <span class="n">stockCafe</span> <span class="p">&gt;=</span> <span class="m">18</span> <span class="p">&amp;&amp;</span> <span class="n">stockLait</span> <span class="p">&gt;=</span> <span class="m">60</span><span class="p">;</span>
<span class="kt">bool</span> <span class="n">peutServir</span> <span class="p">=</span> <span class="n">machineMarche</span> <span class="p">&amp;&amp;</span> <span class="n">stockSuffisant</span><span class="p">;</span>

<span class="k">if</span> <span class="p">(</span><span class="n">peutServir</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// Pr√©parer le caf√©</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="-pr√©f√©rez-switch-pour-de-multiples-valeurs-exactes">‚úÖ Pr√©f√©rez <code class="language-plaintext highlighter-rouge">switch</code> pour de multiples valeurs exactes</h3>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// üëç Plus lisible avec switch</span>
<span class="k">switch</span> <span class="p">(</span><span class="n">typeCafe</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">case</span> <span class="s">"Espresso"</span><span class="p">:</span> <span class="cm">/* ... */</span> <span class="k">break</span><span class="p">;</span>
    <span class="k">case</span> <span class="s">"Latte"</span><span class="p">:</span> <span class="cm">/* ... */</span> <span class="k">break</span><span class="p">;</span>
<span class="p">}</span>

<span class="c1">// üëé Moins lisible avec if/else</span>
<span class="k">if</span> <span class="p">(</span><span class="n">typeCafe</span> <span class="p">==</span> <span class="s">"Espresso"</span><span class="p">)</span> <span class="p">{</span> <span class="cm">/* ... */</span> <span class="p">}</span>
<span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">typeCafe</span> <span class="p">==</span> <span class="s">"Latte"</span><span class="p">)</span> <span class="p">{</span> <span class="cm">/* ... */</span> <span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="exercices-pratiques">Exercices pratiques</h2>

<h3 id="exercice-1--menu-dynamique">Exercice 1 : Menu dynamique</h3>
<p>Cr√©ez un programme qui affiche un menu diff√©rent selon l‚Äôheure :</p>
<ul>
  <li>6h-11h : Petit-d√©jeuner</li>
  <li>11h-15h : D√©jeuner</li>
  <li>15h-18h : Go√ªter</li>
  <li>18h-22h : Soir√©e</li>
</ul>

<h3 id="exercice-2--calculateur-de-remise">Exercice 2 : Calculateur de remise</h3>
<p>Cr√©ez un syst√®me de fid√©lit√© avec :</p>
<ul>
  <li>0-4 visites : Aucune remise</li>
  <li>5-19 visites : 5% de remise</li>
  <li>20-49 visites : 10% de remise</li>
  <li>50+ visites : 15% de remise</li>
</ul>

<h3 id="exercice-3--v√©rificateur-de-stock">Exercice 3 : V√©rificateur de stock</h3>
<p>Cr√©ez un programme qui v√©rifie si on peut pr√©parer une commande selon le stock disponible.</p>

<hr />

<h2 id="conclusion">Conclusion</h2>

<p>Les structures de contr√¥le sont les <strong>fondations de la logique</strong> en programmation ! Elles nous permettent de :</p>

<ul>
  <li>‚úÖ <strong>Prendre des d√©cisions</strong> avec <code class="language-plaintext highlighter-rouge">if/else</code></li>
  <li>‚úÖ <strong>G√©rer plusieurs options</strong> avec <code class="language-plaintext highlighter-rouge">switch</code></li>
  <li>‚úÖ <strong>Combiner des conditions</strong> avec les op√©rateurs logiques</li>
</ul>

<p>Comme un bon barista qui s‚Äôadapte aux demandes de ses clients, un d√©veloppeur utilise les structures de contr√¥le pour cr√©er des programmes intelligents et r√©actifs !</p>

<p><strong>Prochaine √©tape :</strong> Nous d√©couvrirons les boucles pour automatiser les t√¢ches r√©p√©titives - parfait pour pr√©parer plusieurs caf√©s d‚Äôaffil√©e ! ‚òï</p>

<hr />

<p><em>N‚Äôh√©sitez pas √† exp√©rimenter avec ces exemples et √† cr√©er vos propres sc√©narios de caf√©. La programmation, comme l‚Äôart du caf√©, se ma√Ætrise avec la pratique ! üöÄ</em></p>]]></content><author><name>MattDevBzh</name></author><summary type="html"><![CDATA[Dans la programmation comme dans un caf√©, il faut constamment prendre des d√©cisions ! Quel caf√© servir selon les pr√©f√©rences du client ? Que faire si la machine est en panne ? Les structures de contr√¥le en C# nous permettent de g√©rer ces situations. ‚òï]]></summary></entry><entry><title type="html">Les variables et types de donn√©es : les bases de la programmation</title><link href="http://0.0.0.0:4000/2025/01/18/variables-et-types-donnees.html" rel="alternate" type="text/html" title="Les variables et types de donn√©es : les bases de la programmation" /><published>2025-01-18T00:00:00+00:00</published><updated>2025-01-18T00:00:00+00:00</updated><id>http://0.0.0.0:4000/2025/01/18/variables-et-types-donnees</id><content type="html" xml:base="http://0.0.0.0:4000/2025/01/18/variables-et-types-donnees.html"><![CDATA[<p><strong>Les variables</strong> sont les fondations de tout programme informatique. Imaginez-les comme des tasses √©tiquet√©es dans votre caf√© pr√©f√©r√© : chacune peut contenir quelque chose de diff√©rent, et l‚Äô√©tiquette vous dit ce qu‚Äôelle contient !</p>

<p>Dans cet article, nous allons d√©couvrir ensemble les concepts fondamentaux des variables et types de donn√©es √† travers l‚Äôunivers familier du caf√©. ‚òï</p>

<h2 id="sommaire">Sommaire</h2>
<ul id="markdown-toc">
  <li><a href="#sommaire" id="markdown-toc-sommaire">Sommaire</a></li>
  <li><a href="#quest-ce-quune-variable-" id="markdown-toc-quest-ce-quune-variable-">Qu‚Äôest-ce qu‚Äôune variable ?</a></li>
  <li><a href="#les-types-de-donn√©es-fondamentaux" id="markdown-toc-les-types-de-donn√©es-fondamentaux">Les types de donn√©es fondamentaux</a>    <ul>
      <li><a href="#-les-cha√Ænes-de-caract√®res-string" id="markdown-toc--les-cha√Ænes-de-caract√®res-string">üî§ Les cha√Ænes de caract√®res (String)</a></li>
      <li><a href="#-les-nombres-number" id="markdown-toc--les-nombres-number">üî¢ Les nombres (Number)</a></li>
      <li><a href="#-les-bool√©ens-boolean" id="markdown-toc--les-bool√©ens-boolean">‚úÖ Les bool√©ens (Boolean)</a></li>
    </ul>
  </li>
  <li><a href="#bonnes-pratiques-pour-nommer-les-variables" id="markdown-toc-bonnes-pratiques-pour-nommer-les-variables">Bonnes pratiques pour nommer les variables</a>    <ul>
      <li><a href="#-noms-explicites-et-clairs" id="markdown-toc--noms-explicites-et-clairs">‚úÖ Noms explicites et clairs</a></li>
      <li><a href="#-convention-camelcase" id="markdown-toc--convention-camelcase">‚úÖ Convention camelCase</a></li>
      <li><a href="#-noms-de-constantes-en-majuscules" id="markdown-toc--noms-de-constantes-en-majuscules">‚úÖ Noms de constantes en MAJUSCULES</a></li>
    </ul>
  </li>
  <li><a href="#exemple-pratique--syst√®me-de-commande-de-caf√©" id="markdown-toc-exemple-pratique--syst√®me-de-commande-de-caf√©">Exemple pratique : Syst√®me de commande de caf√©</a></li>
  <li><a href="#modification-et-r√©assignation" id="markdown-toc-modification-et-r√©assignation">Modification et r√©assignation</a></li>
  <li><a href="#variables-vs-constantes" id="markdown-toc-variables-vs-constantes">Variables vs Constantes</a>    <ul>
      <li><a href="#variables-let---peuvent-changer" id="markdown-toc-variables-let---peuvent-changer">Variables (<code class="language-plaintext highlighter-rouge">let</code>) - peuvent changer</a></li>
      <li><a href="#constantes-const---ne-peuvent-pas-changer" id="markdown-toc-constantes-const---ne-peuvent-pas-changer">Constantes (<code class="language-plaintext highlighter-rouge">const</code>) - ne peuvent pas changer</a></li>
    </ul>
  </li>
  <li><a href="#exercice-pratique" id="markdown-toc-exercice-pratique">Exercice pratique</a></li>
  <li><a href="#conclusion" id="markdown-toc-conclusion">Conclusion</a></li>
</ul>

<hr />

<h2 id="quest-ce-quune-variable-">Qu‚Äôest-ce qu‚Äôune variable ?</h2>

<p>Une <strong>variable</strong> est un espace de stockage dans la m√©moire de l‚Äôordinateur qui porte un nom et peut contenir une valeur. C‚Äôest comme un conteneur √©tiquet√© dans votre cuisine o√π vous rangez diff√©rents ingr√©dients.</p>

<p><strong>Exemple concret :</strong></p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">nomCafe</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Espresso</span><span class="dl">"</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">prix</span> <span class="o">=</span> <span class="mf">2.50</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">estDisponible</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</code></pre></div></div>

<p>Ici, nous avons cr√©√© trois ‚Äúcontenants‚Äù :</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">nomCafe</code> : contient le texte ‚ÄúEspresso‚Äù</li>
  <li><code class="language-plaintext highlighter-rouge">prix</code> : contient le nombre 2.50</li>
  <li><code class="language-plaintext highlighter-rouge">estDisponible</code> : contient la valeur vraie/fausse <code class="language-plaintext highlighter-rouge">true</code></li>
</ul>

<hr />

<h2 id="les-types-de-donn√©es-fondamentaux">Les types de donn√©es fondamentaux</h2>

<h3 id="-les-cha√Ænes-de-caract√®res-string">üî§ Les cha√Ænes de caract√®res (String)</h3>

<p>Les <strong>strings</strong> stockent du texte, comme le nom d‚Äôun caf√© ou une description.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">nomClient</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Marie</span><span class="dl">"</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">typeCafe</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Cappuccino</span><span class="dl">"</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">tailleTasse</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Grande</span><span class="dl">"</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">description</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Un d√©licieux m√©lange arabica avec une mousse de lait onctueuse</span><span class="dl">"</span><span class="p">;</span>
</code></pre></div></div>

<p><strong>Utilisation pratique :</strong></p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Bonjour </span><span class="dl">"</span> <span class="o">+</span> <span class="nx">nomClient</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">, votre </span><span class="dl">"</span> <span class="o">+</span> <span class="nx">typeCafe</span> <span class="o">+</span> <span class="dl">"</span><span class="s2"> est pr√™t !</span><span class="dl">"</span><span class="p">);</span>
<span class="c1">// Affiche : "Bonjour Marie, votre Cappuccino est pr√™t !"</span>
</code></pre></div></div>

<h3 id="-les-nombres-number">üî¢ Les nombres (Number)</h3>

<p>Les <strong>numbers</strong> stockent des valeurs num√©riques : prix, quantit√©s, temp√©ratures‚Ä¶</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">prixCafe</span> <span class="o">=</span> <span class="mf">3.20</span><span class="p">;</span>        <span class="c1">// Prix en euros</span>
<span class="kd">let</span> <span class="nx">quantiteGrains</span> <span class="o">=</span> <span class="mi">500</span><span class="p">;</span>   <span class="c1">// Grammes de caf√©</span>
<span class="kd">let</span> <span class="nx">temperature</span> <span class="o">=</span> <span class="mf">92.5</span><span class="p">;</span>     <span class="c1">// Temp√©rature de l'eau en ¬∞C</span>
<span class="kd">let</span> <span class="nx">nombreClients</span> <span class="o">=</span> <span class="mi">15</span><span class="p">;</span>     <span class="c1">// Clients dans la file d'attente</span>
</code></pre></div></div>

<p><strong>Op√©rations math√©matiques :</strong></p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">total</span> <span class="o">=</span> <span class="nx">prixCafe</span> <span class="o">*</span> <span class="nx">nombreClients</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">resteGrains</span> <span class="o">=</span> <span class="nx">quantiteGrains</span> <span class="o">-</span> <span class="mi">50</span><span class="p">;</span> <span class="c1">// Apr√®s une pr√©paration</span>
</code></pre></div></div>

<h3 id="-les-bool√©ens-boolean">‚úÖ Les bool√©ens (Boolean)</h3>

<p>Les <strong>booleans</strong> ne peuvent avoir que deux valeurs : <code class="language-plaintext highlighter-rouge">true</code> (vrai) ou <code class="language-plaintext highlighter-rouge">false</code> (faux). Parfait pour des √©tats on/off !</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">machineAllumee</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>      <span class="c1">// La machine √† caf√© est allum√©e</span>
<span class="kd">let</span> <span class="nx">stockVide</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>          <span class="c1">// Il reste du caf√© en stock</span>
<span class="kd">let</span> <span class="nx">clientSatisfait</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>     <span class="c1">// Le client a aim√© son caf√©</span>
<span class="kd">let</span> <span class="nx">fermetureMagasin</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>   <span class="c1">// Le caf√© est encore ouvert</span>
</code></pre></div></div>

<p><strong>Utilisation dans des conditions :</strong></p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="p">(</span><span class="nx">stockVide</span> <span class="o">===</span> <span class="kc">true</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Attention : plus de caf√© en stock !</span><span class="dl">"</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="bonnes-pratiques-pour-nommer-les-variables">Bonnes pratiques pour nommer les variables</h2>

<h3 id="-noms-explicites-et-clairs">‚úÖ Noms explicites et clairs</h3>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// üëç Bon</span>
<span class="kd">let</span> <span class="nx">prixLatteGrand</span> <span class="o">=</span> <span class="mf">4.50</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">nombreCafesVendus</span> <span class="o">=</span> <span class="mi">25</span><span class="p">;</span>

<span class="c1">// üëé √âviter</span>
<span class="kd">let</span> <span class="nx">p</span> <span class="o">=</span> <span class="mf">4.50</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">n</span> <span class="o">=</span> <span class="mi">25</span><span class="p">;</span>
</code></pre></div></div>

<h3 id="-convention-camelcase">‚úÖ Convention camelCase</h3>
<p>En JavaScript, on utilise le <strong>camelCase</strong> : premi√®re lettre minuscule, puis majuscule √† chaque nouveau mot.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">temperatureEauOptimale</span> <span class="o">=</span> <span class="mi">93</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">tempsPreparationEspresso</span> <span class="o">=</span> <span class="mi">25</span><span class="p">;</span> <span class="c1">// en secondes</span>
<span class="kd">let</span> <span class="nx">quantiteGrainsParTasse</span> <span class="o">=</span> <span class="mi">18</span><span class="p">;</span>   <span class="c1">// en grammes</span>
</code></pre></div></div>

<h3 id="-noms-de-constantes-en-majuscules">‚úÖ Noms de constantes en MAJUSCULES</h3>
<p>Pour les valeurs qui ne changent jamais :</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">PRIX_ESPRESSO</span> <span class="o">=</span> <span class="mf">2.50</span><span class="p">;</span>
<span class="kd">const</span> <span class="nx">TEMPERATURE_IDEALE</span> <span class="o">=</span> <span class="mi">92</span><span class="p">;</span>
<span class="kd">const</span> <span class="nx">GRAMMES_PAR_TASSE</span> <span class="o">=</span> <span class="mi">18</span><span class="p">;</span>
</code></pre></div></div>

<hr />

<h2 id="exemple-pratique--syst√®me-de-commande-de-caf√©">Exemple pratique : Syst√®me de commande de caf√©</h2>

<p>Cr√©ons un petit syst√®me pour g√©rer les commandes d‚Äôun caf√© :</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Informations sur le caf√©</span>
<span class="kd">const</span> <span class="nx">NOM_CAFE</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Le Grain d'Or</span><span class="dl">"</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">heureOuverture</span> <span class="o">=</span> <span class="mi">7</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">heureFermeture</span> <span class="o">=</span> <span class="mi">19</span><span class="p">;</span>

<span class="c1">// Informations produit</span>
<span class="kd">let</span> <span class="nx">espressoDisponible</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">prixEspresso</span> <span class="o">=</span> <span class="mf">2.50</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">stockGrains</span> <span class="o">=</span> <span class="mi">1000</span><span class="p">;</span> <span class="c1">// en grammes</span>

<span class="c1">// Commande client</span>
<span class="kd">let</span> <span class="nx">nomClient</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Pierre</span><span class="dl">"</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">typeCommande</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Espresso</span><span class="dl">"</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">taille</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Simple</span><span class="dl">"</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">quantiteCommandee</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>

<span class="c1">// Calculs</span>
<span class="kd">let</span> <span class="nx">prixTotal</span> <span class="o">=</span> <span class="nx">prixEspresso</span> <span class="o">*</span> <span class="nx">quantiteCommandee</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">grainsNecessaires</span> <span class="o">=</span> <span class="nx">quantiteCommandee</span> <span class="o">*</span> <span class="mi">18</span><span class="p">;</span> <span class="c1">// 18g par espresso</span>

<span class="c1">// V√©rifications</span>
<span class="kd">let</span> <span class="nx">assezDeStock</span> <span class="o">=</span> <span class="nx">stockGrains</span> <span class="o">&gt;=</span> <span class="nx">grainsNecessaires</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">peutPreparerCommande</span> <span class="o">=</span> <span class="nx">espressoDisponible</span> <span class="o">&amp;&amp;</span> <span class="nx">assezDeStock</span><span class="p">;</span>

<span class="c1">// Affichage</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">=== </span><span class="dl">"</span> <span class="o">+</span> <span class="nx">NOM_CAFE</span> <span class="o">+</span> <span class="dl">"</span><span class="s2"> ===</span><span class="dl">"</span><span class="p">);</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Client : </span><span class="dl">"</span> <span class="o">+</span> <span class="nx">nomClient</span><span class="p">);</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Commande : </span><span class="dl">"</span> <span class="o">+</span> <span class="nx">quantiteCommandee</span> <span class="o">+</span> <span class="dl">"</span><span class="s2"> </span><span class="dl">"</span> <span class="o">+</span> <span class="nx">typeCommande</span><span class="p">);</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Prix total : </span><span class="dl">"</span> <span class="o">+</span> <span class="nx">prixTotal</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">‚Ç¨</span><span class="dl">"</span><span class="p">);</span>

<span class="k">if</span> <span class="p">(</span><span class="nx">peutPreparerCommande</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">‚úÖ Commande accept√©e ! Pr√©paration en cours...</span><span class="dl">"</span><span class="p">);</span>
    <span class="nx">stockGrains</span> <span class="o">=</span> <span class="nx">stockGrains</span> <span class="o">-</span> <span class="nx">grainsNecessaires</span><span class="p">;</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Stock restant : </span><span class="dl">"</span> <span class="o">+</span> <span class="nx">stockGrains</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">g</span><span class="dl">"</span><span class="p">);</span>
<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">‚ùå D√©sol√©, impossible de pr√©parer cette commande.</span><span class="dl">"</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="modification-et-r√©assignation">Modification et r√©assignation</h2>

<p>Les variables peuvent changer de valeur au cours du programme :</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">stockLait</span> <span class="o">=</span> <span class="mi">500</span><span class="p">;</span> <span class="c1">// millilitres</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Stock initial : </span><span class="dl">"</span> <span class="o">+</span> <span class="nx">stockLait</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">ml</span><span class="dl">"</span><span class="p">);</span>

<span class="c1">// Apr√®s la pr√©paration d'un cappuccino</span>
<span class="nx">stockLait</span> <span class="o">=</span> <span class="nx">stockLait</span> <span class="o">-</span> <span class="mi">150</span><span class="p">;</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Apr√®s cappuccino : </span><span class="dl">"</span> <span class="o">+</span> <span class="nx">stockLait</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">ml</span><span class="dl">"</span><span class="p">);</span>

<span class="c1">// Livraison de lait</span>
<span class="nx">stockLait</span> <span class="o">=</span> <span class="nx">stockLait</span> <span class="o">+</span> <span class="mi">1000</span><span class="p">;</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Apr√®s livraison : </span><span class="dl">"</span> <span class="o">+</span> <span class="nx">stockLait</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">ml</span><span class="dl">"</span><span class="p">);</span>
</code></pre></div></div>

<p><strong>Raccourcis utiles :</strong></p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">stockLait</span> <span class="o">-=</span> <span class="mi">150</span><span class="p">;</span>  <span class="c1">// √âquivaut √† : stockLait = stockLait - 150</span>
<span class="nx">stockLait</span> <span class="o">+=</span> <span class="mi">1000</span><span class="p">;</span> <span class="c1">// √âquivaut √† : stockLait = stockLait + 1000</span>
</code></pre></div></div>

<hr />

<h2 id="variables-vs-constantes">Variables vs Constantes</h2>

<h3 id="variables-let---peuvent-changer">Variables (<code class="language-plaintext highlighter-rouge">let</code>) - peuvent changer</h3>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">clientsEnAttente</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
<span class="nx">clientsEnAttente</span> <span class="o">=</span> <span class="nx">clientsEnAttente</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span> <span class="c1">// ‚úÖ Possible</span>
</code></pre></div></div>

<h3 id="constantes-const---ne-peuvent-pas-changer">Constantes (<code class="language-plaintext highlighter-rouge">const</code>) - ne peuvent pas changer</h3>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">PRIX_BASE_CAFE</span> <span class="o">=</span> <span class="mf">2.00</span><span class="p">;</span>
<span class="c1">// PRIX_BASE_CAFE = 2.50; // ‚ùå Erreur !</span>
</code></pre></div></div>

<p><strong>Conseil :</strong> Utilisez <code class="language-plaintext highlighter-rouge">const</code> par d√©faut, et <code class="language-plaintext highlighter-rouge">let</code> seulement quand la valeur doit changer.</p>

<hr />

<h2 id="exercice-pratique">Exercice pratique</h2>

<p>Essayez de cr√©er des variables pour votre caf√© imaginaire :</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// √Ä vous de compl√©ter !</span>
<span class="kd">let</span> <span class="nx">nomVotreCafe</span> <span class="o">=</span> <span class="dl">""</span><span class="p">;</span> <span class="c1">// Le nom de votre caf√©</span>
<span class="kd">let</span> <span class="nx">specialiteMaison</span> <span class="o">=</span> <span class="dl">""</span><span class="p">;</span> <span class="c1">// Votre sp√©cialit√©</span>
<span class="kd">let</span> <span class="nx">prixSpecialite</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="c1">// Prix de votre sp√©cialit√©</span>
<span class="kd">let</span> <span class="nx">ouvertAujourdHui</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span> <span class="c1">// Ouvert ou ferm√© ?</span>

<span class="c1">// Calculez le prix pour 3 sp√©cialit√©s</span>
<span class="kd">let</span> <span class="nx">prixTroisSpecialites</span> <span class="o">=</span> <span class="nx">prixSpecialite</span> <span class="o">*</span> <span class="mi">3</span><span class="p">;</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Bienvenue chez </span><span class="dl">"</span> <span class="o">+</span> <span class="nx">nomVotreCafe</span> <span class="o">+</span> <span class="dl">"</span><span class="s2"> !</span><span class="dl">"</span><span class="p">);</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Notre sp√©cialit√© : </span><span class="dl">"</span> <span class="o">+</span> <span class="nx">specialiteMaison</span> <span class="o">+</span> <span class="dl">"</span><span class="s2"> (</span><span class="dl">"</span> <span class="o">+</span> <span class="nx">prixSpecialite</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">‚Ç¨)</span><span class="dl">"</span><span class="p">);</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Prix pour 3 : </span><span class="dl">"</span> <span class="o">+</span> <span class="nx">prixTroisSpecialites</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">‚Ç¨</span><span class="dl">"</span><span class="p">);</span>
</code></pre></div></div>

<hr />

<h2 id="conclusion">Conclusion</h2>

<p>Les variables et types de donn√©es sont comme les ingr√©dients de base d‚Äôune recette de caf√© :</p>

<ul>
  <li><strong>Les strings</strong> pour les noms et descriptions üìù</li>
  <li><strong>Les numbers</strong> pour les quantit√©s et prix üî¢</li>
  <li><strong>Les booleans</strong> pour les √©tats et conditions ‚úÖ</li>
</ul>

<p>Ma√Ætriser ces concepts vous donnera les bases solides pour construire vos premiers programmes. Comme un bon barista qui conna√Æt ses grains, un d√©veloppeur qui ma√Ætrise ses variables peut cr√©er des applications extraordinaires !</p>

<p><strong>Prochaine √©tape :</strong> Dans le prochain article, nous d√©couvrirons les fonctions - les ‚Äúrecettes‚Äù qui utilisent nos ingr√©dients (variables) pour cr√©er quelque chose de d√©licieux ! ‚òï</p>

<hr />

<p><em>N‚Äôh√©sitez pas √† exp√©rimenter avec ces exemples et √† cr√©er vos propres variables sur le th√®me du caf√©. L‚Äôapprentissage de la programmation, c‚Äôest comme apprendre √† faire un bon caf√© : il faut pratiquer ! üöÄ</em></p>]]></content><author><name>MattDevBzh</name></author><summary type="html"><![CDATA[Les variables sont les fondations de tout programme informatique. Imaginez-les comme des tasses √©tiquet√©es dans votre caf√© pr√©f√©r√© : chacune peut contenir quelque chose de diff√©rent, et l‚Äô√©tiquette vous dit ce qu‚Äôelle contient !]]></summary></entry></feed>